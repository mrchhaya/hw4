[topCellInitializer{}(LblinitGeneratedTopCell{}()), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)")]

module BASIC-K
    sort SortK{} []
    sort SortKItem{} []
endmodule
[]
module KSEQ
    import BASIC-K []
    symbol kseq{}(SortKItem{}, SortK{}) : SortK{} [constructor{}(), functional{}(), injective{}()]
    symbol dotk{}() : SortK{} [constructor{}(), functional{}(), injective{}()]
    symbol append{}(SortK{}, SortK{}) : SortK{} [function{}(), functional{}()]
    axiom {R} \implies{R}(
        \and{R}(
            \top{R}(),
            \and{R}(
                \in{SortK{}, R}(X0:SortK{}, dotk{}()),
            \and{R}(
                \in{SortK{}, R}(X1:SortK{}, TAIL:SortK{}),
                \top{R}()
            ))
        ),
        \equals{SortK{}, R}(
            append{}(X0:SortK{}, X1:SortK{}),
            \and{SortK{}}(
                TAIL:SortK{},
                \top{SortK{}}()
            )
        )
    ) []
    axiom {R} \implies{R}(
        \and{R}(
            \top{R}(),
            \and{R}(
                \in{SortK{}, R}(X0:SortK{}, kseq{}(K:SortKItem{}, KS:SortK{})),
            \and{R}(
                \in{SortK{}, R}(X1:SortK{}, TAIL:SortK{}),
                \top{R}()
            ))
        ),
        \equals{SortK{}, R}(
            append{}(X0:SortK{}, X1:SortK{}),
            \and{SortK{}}(
                kseq{}(K:SortKItem{}, append{}(KS:SortK{}, TAIL:SortK{})),
                \top{SortK{}}()
            )
        )
    ) []
endmodule
[]
module INJ
    symbol inj{From, To}(From) : To [sortInjection{}()]
    axiom {S1, S2, S3, R} \equals{S3, R}(inj{S2, S3}(inj{S1, S2}(T:S1)), inj{S1, S3}(T:S1)) [simplification{}()]
endmodule
[]
module K
    import KSEQ []
    import INJ []
    alias weakExistsFinally{A}(A) : A where weakExistsFinally{A}(@X:A) := @X:A []
    alias weakAlwaysFinally{A}(A) : A where weakAlwaysFinally{A}(@X:A) := @X:A []
    alias allPathGlobally{A}(A) : A where allPathGlobally{A}(@X:A) := @X:A []
endmodule
[]

module SIMPLE-TYPED-STATIC

// imports
  import K []

// sorts
  sort SortTCellFragment{} []
  sort SortTasksCellFragment{} []
  sort SortLValue{} []
  sort SortTenvCell{} []
  sort SortKCellOpt{} []
  sort SortTasksCellOpt{} []
  sort SortIOInt{} []
  sort SortGtenvCellOpt{} []
  sort SortGeneratedTopCellFragment{} []
  sort SortIOFile{} []
  hooked-sort SortList{} [concat{}(Lbl'Unds'List'Unds'{}()), element{}(LblListItem{}()), hook{}("LIST.List"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(913,3,913,32)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), unit{}(Lbl'Stop'List{}())]
  sort SortTypes{} []
  sort SortKCell{} []
  sort SortGeneratedTopCell{} []
  sort SortGeneratedCounterCell{} []
  sort SortTenvCellOpt{} []
  sort SortParam{} []
  hooked-sort SortFloat{} [hasDomainValues{}(), hook{}("FLOAT.Float"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1470,3,1470,35)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)")]
  hooked-sort SortTaskCellSet{} [cellCollection{}(), concat{}(Lbl'Unds'TaskCellSet'Unds'{}()), element{}(LblTaskCellSetItem{}()), hook{}("SET.Set"), unit{}(Lbl'Stop'TaskCellSet{}())]
  sort SortTCellOpt{} []
  sort SortCurrEnvVarCellOpt{} []
  hooked-sort SortMap{} [concat{}(Lbl'Unds'Map'Unds'{}()), element{}(Lbl'UndsPipe'-'-GT-Unds'{}()), hook{}("MAP.Map"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(218,3,218,29)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), unit{}(Lbl'Stop'Map{}())]
  hooked-sort SortString{} [hasDomainValues{}(), hook{}("STRING.String"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1683,3,1683,38)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)")]
  sort SortTasksCell{} []
  sort SortIOString{} []
  sort SortId{} [hasDomainValues{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2235,3,2235,20)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), token{}()]
  sort SortBlock{} []
  sort SortGeneratedCounterCellOpt{} []
  sort SortGtenvCell{} []
  sort SortTaskCellFragment{} []
  sort SortKConfigVar{} [hasDomainValues{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(40,3,40,28)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/kast.md)"), token{}()]
  sort SortReturnTypeCellOpt{} []
  sort SortExp{} []
  hooked-sort SortInt{} [hasDomainValues{}(), hook{}("INT.Int"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1189,3,1189,29)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)")]
  sort SortIOError{} []
  hooked-sort SortSet{} [concat{}(Lbl'Unds'Set'Unds'{}()), element{}(LblSetItem{}()), hook{}("SET.Set"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(700,3,700,29)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), unit{}(Lbl'Stop'Set{}())]
  sort SortReturnTypeCell{} []
  sort SortExps{} []
  sort SortTaskCell{} []
  sort SortCurrEnvVarCell{} []
  sort SortType{} []
  sort SortBlockOrStmtType{} []
  sort SortKResult{} []
  sort SortStream{} []
  sort SortTCell{} []
  sort SortStmt{} []
  hooked-sort SortBool{} [hasDomainValues{}(), hook{}("BOOL.Bool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1068,3,1068,32)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)")]
  sort SortParams{} []

// symbols
  symbol Lbl'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(SortExp{}) : SortExp{} [constructor{}(), format{}("%c!%r %1"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(38,18,38,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), priorities{}(Lblspawn'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(), strict{}(""), terminals{}("10")]
  symbol Lbl'Hash'E2BIG{}() : SortIOError{} [constructor{}(), format{}("%c#E2BIG%r"), functional{}(), injective{}(), klabel{}("#E2BIG"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2386,22,2386,55)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EACCES{}() : SortIOError{} [constructor{}(), format{}("%c#EACCES%r"), functional{}(), injective{}(), klabel{}("#EACCES"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2387,22,2387,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EADDRINUSE{}() : SortIOError{} [constructor{}(), format{}("%c#EADDRINUSE%r"), functional{}(), injective{}(), klabel{}("#EADDRINUSE"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2436,22,2436,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EADDRNOTAVAIL{}() : SortIOError{} [constructor{}(), format{}("%c#EADDRNOTAVAIL%r"), functional{}(), injective{}(), klabel{}("#EADDRNOTAVAIL"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2437,22,2437,71)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EAFNOSUPPORT{}() : SortIOError{} [constructor{}(), format{}("%c#EAFNOSUPPORT%r"), functional{}(), injective{}(), klabel{}("#EAFNOSUPPORT"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2435,22,2435,69)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EAGAIN{}() : SortIOError{} [constructor{}(), format{}("%c#EAGAIN%r"), functional{}(), injective{}(), klabel{}("#EAGAIN"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2388,22,2388,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EALREADY{}() : SortIOError{} [constructor{}(), format{}("%c#EALREADY%r"), functional{}(), injective{}(), klabel{}("#EALREADY"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2425,22,2425,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EBADF{}() : SortIOError{} [constructor{}(), format{}("%c#EBADF%r"), functional{}(), injective{}(), klabel{}("#EBADF"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2389,22,2389,55)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EBUSY{}() : SortIOError{} [constructor{}(), format{}("%c#EBUSY%r"), functional{}(), injective{}(), klabel{}("#EBUSY"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2390,22,2390,55)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ECHILD{}() : SortIOError{} [constructor{}(), format{}("%c#ECHILD%r"), functional{}(), injective{}(), klabel{}("#ECHILD"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2391,22,2391,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ECONNABORTED{}() : SortIOError{} [constructor{}(), format{}("%c#ECONNABORTED%r"), functional{}(), injective{}(), klabel{}("#ECONNABORTED"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2441,22,2441,69)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ECONNREFUSED{}() : SortIOError{} [constructor{}(), format{}("%c#ECONNREFUSED%r"), functional{}(), injective{}(), klabel{}("#ECONNREFUSED"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2449,22,2449,69)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ECONNRESET{}() : SortIOError{} [constructor{}(), format{}("%c#ECONNRESET%r"), functional{}(), injective{}(), klabel{}("#ECONNRESET"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2442,22,2442,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EDEADLK{}() : SortIOError{} [constructor{}(), format{}("%c#EDEADLK%r"), functional{}(), injective{}(), klabel{}("#EDEADLK"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2392,22,2392,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EDESTADDRREQ{}() : SortIOError{} [constructor{}(), format{}("%c#EDESTADDRREQ%r"), functional{}(), injective{}(), klabel{}("#EDESTADDRREQ"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2427,22,2427,69)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EDOM{}() : SortIOError{} [constructor{}(), format{}("%c#EDOM%r"), functional{}(), injective{}(), klabel{}("#EDOM"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2393,22,2393,53)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EEXIST{}() : SortIOError{} [constructor{}(), format{}("%c#EEXIST%r"), functional{}(), injective{}(), klabel{}("#EEXIST"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2394,22,2394,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EFAULT{}() : SortIOError{} [constructor{}(), format{}("%c#EFAULT%r"), functional{}(), injective{}(), klabel{}("#EFAULT"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2395,22,2395,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EFBIG{}() : SortIOError{} [constructor{}(), format{}("%c#EFBIG%r"), functional{}(), injective{}(), klabel{}("#EFBIG"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2396,22,2396,55)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EHOSTDOWN{}() : SortIOError{} [constructor{}(), format{}("%c#EHOSTDOWN%r"), functional{}(), injective{}(), klabel{}("#EHOSTDOWN"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2450,22,2450,63)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EHOSTUNREACH{}() : SortIOError{} [constructor{}(), format{}("%c#EHOSTUNREACH%r"), functional{}(), injective{}(), klabel{}("#EHOSTUNREACH"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2451,22,2451,69)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EINPROGRESS{}() : SortIOError{} [constructor{}(), format{}("%c#EINPROGRESS%r"), functional{}(), injective{}(), klabel{}("#EINPROGRESS"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2424,22,2424,67)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EINTR{}() : SortIOError{} [constructor{}(), format{}("%c#EINTR%r"), functional{}(), injective{}(), klabel{}("#EINTR"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2397,22,2397,55)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EINVAL{}() : SortIOError{} [constructor{}(), format{}("%c#EINVAL%r"), functional{}(), injective{}(), klabel{}("#EINVAL"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2398,22,2398,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EIO{}() : SortIOError{} [constructor{}(), format{}("%c#EIO%r"), functional{}(), injective{}(), klabel{}("#EIO"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2399,22,2399,51)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EISCONN{}() : SortIOError{} [constructor{}(), format{}("%c#EISCONN%r"), functional{}(), injective{}(), klabel{}("#EISCONN"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2444,22,2444,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EISDIR{}() : SortIOError{} [constructor{}(), format{}("%c#EISDIR%r"), functional{}(), injective{}(), klabel{}("#EISDIR"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2400,22,2400,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ELOOP{}() : SortIOError{} [constructor{}(), format{}("%c#ELOOP%r"), functional{}(), injective{}(), klabel{}("#ELOOP"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2452,22,2452,55)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EMFILE{}() : SortIOError{} [constructor{}(), format{}("%c#EMFILE%r"), functional{}(), injective{}(), klabel{}("#EMFILE"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2401,22,2401,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EMLINK{}() : SortIOError{} [constructor{}(), format{}("%c#EMLINK%r"), functional{}(), injective{}(), klabel{}("#EMLINK"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2402,22,2402,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EMSGSIZE{}() : SortIOError{} [constructor{}(), format{}("%c#EMSGSIZE%r"), functional{}(), injective{}(), klabel{}("#EMSGSIZE"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2428,22,2428,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ENAMETOOLONG{}() : SortIOError{} [constructor{}(), format{}("%c#ENAMETOOLONG%r"), functional{}(), injective{}(), klabel{}("#ENAMETOOLONG"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2403,22,2403,69)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ENETDOWN{}() : SortIOError{} [constructor{}(), format{}("%c#ENETDOWN%r"), functional{}(), injective{}(), klabel{}("#ENETDOWN"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2438,22,2438,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ENETRESET{}() : SortIOError{} [constructor{}(), format{}("%c#ENETRESET%r"), functional{}(), injective{}(), klabel{}("#ENETRESET"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2440,22,2440,63)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ENETUNREACH{}() : SortIOError{} [constructor{}(), format{}("%c#ENETUNREACH%r"), functional{}(), injective{}(), klabel{}("#ENETUNREACH"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2439,22,2439,67)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ENFILE{}() : SortIOError{} [constructor{}(), format{}("%c#ENFILE%r"), functional{}(), injective{}(), klabel{}("#ENFILE"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2404,22,2404,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ENOBUFS{}() : SortIOError{} [constructor{}(), format{}("%c#ENOBUFS%r"), functional{}(), injective{}(), klabel{}("#ENOBUFS"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2443,22,2443,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ENODEV{}() : SortIOError{} [constructor{}(), format{}("%c#ENODEV%r"), functional{}(), injective{}(), klabel{}("#ENODEV"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2405,22,2405,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ENOENT{}() : SortIOError{} [constructor{}(), format{}("%c#ENOENT%r"), functional{}(), injective{}(), klabel{}("#ENOENT"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2406,22,2406,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ENOEXEC{}() : SortIOError{} [constructor{}(), format{}("%c#ENOEXEC%r"), functional{}(), injective{}(), klabel{}("#ENOEXEC"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2407,22,2407,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ENOLCK{}() : SortIOError{} [constructor{}(), format{}("%c#ENOLCK%r"), functional{}(), injective{}(), klabel{}("#ENOLCK"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2408,22,2408,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ENOMEM{}() : SortIOError{} [constructor{}(), format{}("%c#ENOMEM%r"), functional{}(), injective{}(), klabel{}("#ENOMEM"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2409,22,2409,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ENOPROTOOPT{}() : SortIOError{} [constructor{}(), format{}("%c#ENOPROTOOPT%r"), functional{}(), injective{}(), klabel{}("#ENOPROTOOPT"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2430,22,2430,67)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ENOSPC{}() : SortIOError{} [constructor{}(), format{}("%c#ENOSPC%r"), functional{}(), injective{}(), klabel{}("#ENOSPC"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2410,22,2410,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ENOSYS{}() : SortIOError{} [constructor{}(), format{}("%c#ENOSYS%r"), functional{}(), injective{}(), klabel{}("#ENOSYS"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2411,22,2411,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ENOTCONN{}() : SortIOError{} [constructor{}(), format{}("%c#ENOTCONN%r"), functional{}(), injective{}(), klabel{}("#ENOTCONN"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2445,22,2445,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ENOTDIR{}() : SortIOError{} [constructor{}(), format{}("%c#ENOTDIR%r"), functional{}(), injective{}(), klabel{}("#ENOTDIR"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2412,22,2412,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ENOTEMPTY{}() : SortIOError{} [constructor{}(), format{}("%c#ENOTEMPTY%r"), functional{}(), injective{}(), klabel{}("#ENOTEMPTY"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2413,22,2413,63)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ENOTSOCK{}() : SortIOError{} [constructor{}(), format{}("%c#ENOTSOCK%r"), functional{}(), injective{}(), klabel{}("#ENOTSOCK"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2426,22,2426,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ENOTTY{}() : SortIOError{} [constructor{}(), format{}("%c#ENOTTY%r"), functional{}(), injective{}(), klabel{}("#ENOTTY"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2414,22,2414,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ENXIO{}() : SortIOError{} [constructor{}(), format{}("%c#ENXIO%r"), functional{}(), injective{}(), klabel{}("#ENXIO"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2415,22,2415,55)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EOF{}() : SortIOError{} [constructor{}(), format{}("%c#EOF%r"), functional{}(), injective{}(), klabel{}("#EOF"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2385,22,2385,51)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EOPNOTSUPP{}() : SortIOError{} [constructor{}(), format{}("%c#EOPNOTSUPP%r"), functional{}(), injective{}(), klabel{}("#EOPNOTSUPP"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2433,22,2433,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EOVERFLOW{}() : SortIOError{} [constructor{}(), format{}("%c#EOVERFLOW%r"), functional{}(), injective{}(), klabel{}("#EOVERFLOW"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2453,22,2453,63)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EPERM{}() : SortIOError{} [constructor{}(), format{}("%c#EPERM%r"), functional{}(), injective{}(), klabel{}("#EPERM"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2416,22,2416,55)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EPFNOSUPPORT{}() : SortIOError{} [constructor{}(), format{}("%c#EPFNOSUPPORT%r"), functional{}(), injective{}(), klabel{}("#EPFNOSUPPORT"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2434,22,2434,69)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EPIPE{}() : SortIOError{} [constructor{}(), format{}("%c#EPIPE%r"), functional{}(), injective{}(), klabel{}("#EPIPE"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2417,22,2417,55)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EPROTONOSUPPORT{}() : SortIOError{} [constructor{}(), format{}("%c#EPROTONOSUPPORT%r"), functional{}(), injective{}(), klabel{}("#EPROTONOSUPPORT"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2431,22,2431,75)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EPROTOTYPE{}() : SortIOError{} [constructor{}(), format{}("%c#EPROTOTYPE%r"), functional{}(), injective{}(), klabel{}("#EPROTOTYPE"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2429,22,2429,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ERANGE{}() : SortIOError{} [constructor{}(), format{}("%c#ERANGE%r"), functional{}(), injective{}(), klabel{}("#ERANGE"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2418,22,2418,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EROFS{}() : SortIOError{} [constructor{}(), format{}("%c#EROFS%r"), functional{}(), injective{}(), klabel{}("#EROFS"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2419,22,2419,55)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ESHUTDOWN{}() : SortIOError{} [constructor{}(), format{}("%c#ESHUTDOWN%r"), functional{}(), injective{}(), klabel{}("#ESHUTDOWN"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2446,22,2446,63)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ESOCKTNOSUPPORT{}() : SortIOError{} [constructor{}(), format{}("%c#ESOCKTNOSUPPORT%r"), functional{}(), injective{}(), klabel{}("#ESOCKTNOSUPPORT"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2432,22,2432,75)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ESPIPE{}() : SortIOError{} [constructor{}(), format{}("%c#ESPIPE%r"), functional{}(), injective{}(), klabel{}("#ESPIPE"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2420,22,2420,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ESRCH{}() : SortIOError{} [constructor{}(), format{}("%c#ESRCH%r"), functional{}(), injective{}(), klabel{}("#ESRCH"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2421,22,2421,55)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ETIMEDOUT{}() : SortIOError{} [constructor{}(), format{}("%c#ETIMEDOUT%r"), functional{}(), injective{}(), klabel{}("#ETIMEDOUT"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2448,22,2448,63)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ETOOMANYREFS{}() : SortIOError{} [constructor{}(), format{}("%c#ETOOMANYREFS%r"), functional{}(), injective{}(), klabel{}("#ETOOMANYREFS"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2447,22,2447,69)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EWOULDBLOCK{}() : SortIOError{} [constructor{}(), format{}("%c#EWOULDBLOCK%r"), functional{}(), injective{}(), klabel{}("#EWOULDBLOCK"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2423,22,2423,67)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EXDEV{}() : SortIOError{} [constructor{}(), format{}("%c#EXDEV%r"), functional{}(), injective{}(), klabel{}("#EXDEV"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2422,22,2422,55)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  hooked-symbol Lbl'Hash'accept'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'Int{}(SortInt{}) : SortIOInt{} [format{}("%c#accept%r %c(... %r fd: %1 %c)%r"), function{}(), hook{}("IO.accept"), impure{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2551,20,2551,81)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(SortK{}) : SortStream{} [constructor{}(), format{}("%c#buffer%r %c(%r %1 %c)%r"), functional{}(), injective{}(), klabel{}("#buffer"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2655,21,2655,31)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  hooked-symbol Lbl'Hash'close'LParUndsRParUnds'K-IO'Unds'K'Unds'Int{}(SortInt{}) : SortK{} [format{}("%c#close%r %c(... %r fd: %1 %c)%r"), function{}(), hook{}("IO.close"), impure{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2525,16,2525,75)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}() : SortKItem{} [constructor{}(), format{}("%c#freezer!__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp0_%r %c(%r %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("111")]
  symbol Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}() : SortKItem{} [constructor{}(), format{}("%c#freezer++__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp0_%r %c(%r %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("111")]
  symbol Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}() : SortKItem{} [constructor{}(), format{}("%c#freezer-__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp0_%r %c(%r %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("111")]
  symbol Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_!=__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_!=__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_%%__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_%%__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_&&__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_&&__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_(_)_SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exps0_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_(_)_SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exps1_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_*__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_*__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_+__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_+__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_,__SIMPLE-TYPED-STATIC-SYNTAX_Exps_Exp_Exps0_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_,__SIMPLE-TYPED-STATIC-SYNTAX_Exps_Exp_Exps1_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_-__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_-__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_/__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_/__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}() : SortKItem{} [constructor{}(), format{}("%c#freezer_;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp0_%r %c(%r %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("111")]
  symbol Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_<=__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_<=__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_<__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_<__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_==__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_==__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_=__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_=__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_>=__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_>=__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_>__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_>__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_[_]_SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exps0_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_[_]_SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exps1_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(SortK{}, SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer__;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Type_Exps2_%r %c(%r %1 %c,%r %2 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("110101")]
  symbol Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer___SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Stmt_Stmt0_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer___SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Stmt_Stmt1_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_||__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_||__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}() : SortKItem{} [constructor{}(), format{}("%c#freezeracquire_;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp0_%r %c(%r %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("111")]
  symbol Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(SortK{}, SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezerif(_)_else__SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp_Block_Block0_%r %c(%r %1 %c,%r %2 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("110101")]
  symbol Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(SortK{}, SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezerif(_)_else__SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp_Block_Block1_%r %c(%r %1 %c,%r %2 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("110101")]
  symbol Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(SortK{}, SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezerif(_)_else__SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp_Block_Block2_%r %c(%r %1 %c,%r %2 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("110101")]
  symbol Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}() : SortKItem{} [constructor{}(), format{}("%c#freezerjoin_;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp0_%r %c(%r %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("111")]
  symbol Lbl'Hash'freezerltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}() : SortKItem{} [constructor{}(), format{}("%c#freezerltype(_)_SIMPLE-TYPED-STATIC_Exp_Exp0_%r %c(%r %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("111")]
  symbol Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}() : SortKItem{} [constructor{}(), format{}("%c#freezerprint(_);_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exps0_%r %c(%r %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("111")]
  symbol Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}() : SortKItem{} [constructor{}(), format{}("%c#freezerrelease_;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp0_%r %c(%r %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("111")]
  symbol Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}() : SortKItem{} [constructor{}(), format{}("%c#freezerrendezvous_;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp0_%r %c(%r %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("111")]
  symbol Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}() : SortKItem{} [constructor{}(), format{}("%c#freezerreturn_;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp0_%r %c(%r %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("111")]
  symbol Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}() : SortKItem{} [constructor{}(), format{}("%c#freezersizeOf(_)_SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp0_%r %c(%r %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("111")]
  symbol Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}() : SortKItem{} [constructor{}(), format{}("%c#freezerthrow_;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp0_%r %c(%r %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("111")]
  symbol Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(SortK{}, SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezertry_catch(_)__SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Block_Param_Block0_%r %c(%r %1 %c,%r %2 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("110101")]
  symbol Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezerwhile(_)__SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp_Block0_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezerwhile(_)__SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp_Block1_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  hooked-symbol Lbl'Hash'getc'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'Int{}(SortInt{}) : SortIOInt{} [format{}("%c#getc%r %c(... %r fd: %1 %c)%r"), function{}(), hook{}("IO.getc"), impure{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2506,20,2506,89)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  hooked-symbol Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortSort}(SortBool{}, SortSort, SortSort) : SortSort [format{}("%c#if%r %1 %c#then%r %2 %c#else%r %3 %c#fi%r"), function{}(), functional{}(), hook{}("KEQUAL.ite"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2277,26,2277,121)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), smt-hook{}("ite"), terminals{}("1010101"), total{}()]
  symbol Lbl'Hash'istream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(SortInt{}) : SortStream{} [constructor{}(), format{}("%c#istream%r %c(%r %1 %c)%r"), functional{}(), injective{}(), klabel{}("#istream"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2656,21,2656,34)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  hooked-symbol Lbl'Hash'lock'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortK{} [format{}("%c#lock%r %c(... %r fd: %1 %c,%r endIndex: %2 %c)%r"), function{}(), hook{}("IO.lock"), impure{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2537,16,2537,91)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101")]
  hooked-symbol Lbl'Hash'log{}(SortString{}) : SortK{} [format{}("%c#log%r %c(... %r value: %1 %c)%r"), function{}(), functional{}(), hook{}("IO.logString"), impure{}(), klabel{}("#log"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2631,16,2631,102)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), returnsUnit{}(), right{}(), symbol'Kywd'{}(), terminals{}("1101"), total{}()]
  hooked-symbol Lbl'Hash'logToFile{}(SortString{}, SortString{}) : SortK{} [format{}("%c#logToFile%r %c(... %r name: %1 %c,%r value: %2 %c)%r"), function{}(), functional{}(), hook{}("IO.log"), impure{}(), klabel{}("#logToFile"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2622,16,2622,116)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), returnsUnit{}(), right{}(), symbol'Kywd'{}(), terminals{}("110101"), total{}()]
  hooked-symbol Lbl'Hash'mkstemp'LParUndsRParUnds'K-IO'Unds'IOFile'Unds'String{}(SortString{}) : SortIOFile{} [format{}("%c#mkstemp%r %c(... %r template: %1 %c)%r"), function{}(), hook{}("IO.mkstemp"), impure{}(), klabel{}("#mkstemp"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2599,21,2599,84)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'open'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'String{}(SortString{}) : SortIOInt{} [format{}("%c#open%r %c(... %r path: %1 %c)%r"), function{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2476,20,2476,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  hooked-symbol Lbl'Hash'open'LParUndsCommUndsRParUnds'K-IO'Unds'IOInt'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortIOInt{} [format{}("%c#open%r %c(... %r path: %1 %c,%r mode: %2 %c)%r"), function{}(), hook{}("IO.open"), impure{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2477,18,2477,97)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101")]
  symbol Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(SortInt{}) : SortStream{} [constructor{}(), format{}("%c#ostream%r %c(%r %1 %c)%r"), functional{}(), injective{}(), klabel{}("#ostream"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2658,21,2658,34)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'parseInput'LParUndsCommUndsRParUnds'K-IO'Unds'Stream'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortStream{} [constructor{}(), format{}("%c#parseInput%r %c(%r %1 %c,%r %2 %c)%r"), functional{}(), injective{}(), klabel{}("#parseInput"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2657,21,2657,48)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101")]
  hooked-symbol Lbl'Hash'putc'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortK{} [format{}("%c#putc%r %c(... %r fd: %1 %c,%r value: %2 %c)%r"), function{}(), hook{}("IO.putc"), impure{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2516,16,2516,93)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101")]
  hooked-symbol Lbl'Hash'read'LParUndsCommUndsRParUnds'K-IO'Unds'IOString'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortIOString{} [format{}("%c#read%r %c(... %r fd: %1 %c,%r length: %2 %c)%r"), function{}(), hook{}("IO.read"), impure{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2507,23,2507,99)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101")]
  hooked-symbol Lbl'Hash'remove'LParUndsRParUnds'K-IO'Unds'K'Unds'String{}(SortString{}) : SortK{} [format{}("%c#remove%r %c(... %r path: %1 %c)%r"), function{}(), functional{}(), hook{}("IO.remove"), impure{}(), klabel{}("#remove"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2610,16,2610,80)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  hooked-symbol Lbl'Hash'seek'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortK{} [format{}("%c#seek%r %c(... %r fd: %1 %c,%r index: %2 %c)%r"), function{}(), hook{}("IO.seek"), impure{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2492,16,2492,88)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101")]
  hooked-symbol Lbl'Hash'seekEnd'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortK{} [format{}("%c#seekEnd%r %c(... %r fd: %1 %c,%r fromEnd: %2 %c)%r"), function{}(), hook{}("IO.seekEnd"), impure{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2493,16,2493,96)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101")]
  hooked-symbol Lbl'Hash'shutdownWrite'LParUndsRParUnds'K-IO'Unds'K'Unds'Int{}(SortInt{}) : SortK{} [format{}("%c#shutdownWrite%r %c(... %r fd: %1 %c)%r"), function{}(), hook{}("IO.shutdownWrite"), impure{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2552,16,2552,91)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'stderr'Unds'K-IO'Unds'Int{}() : SortInt{} [format{}("%c#stderr%r"), function{}(), functional{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2572,19,2572,46)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1"), total{}()]
  symbol Lbl'Hash'stdin'Unds'K-IO'Unds'Int{}() : SortInt{} [format{}("%c#stdin%r"), function{}(), functional{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2570,18,2570,46)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1"), total{}()]
  symbol Lbl'Hash'stdout'Unds'K-IO'Unds'Int{}() : SortInt{} [format{}("%c#stdout%r"), function{}(), functional{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2571,19,2571,46)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1"), total{}()]
  hooked-symbol Lbl'Hash'system'LParUndsRParUnds'K-IO'Unds'KItem'Unds'String{}(SortString{}) : SortKItem{} [format{}("%c#system%r %c(%r %1 %c)%r"), function{}(), hook{}("IO.system"), impure{}(), klabel{}("#system"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2588,20,2588,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'systemResult{}(SortInt{}, SortString{}, SortString{}) : SortKItem{} [constructor{}(), format{}("%c#systemResult%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), functional{}(), injective{}(), klabel{}("#systemResult"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2589,20,2589,143)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("11010101")]
  hooked-symbol Lbl'Hash'tell'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'Int{}(SortInt{}) : SortIOInt{} [format{}("%c#tell%r %c(... %r fd: %1 %c)%r"), function{}(), hook{}("IO.tell"), impure{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2491,20,2491,77)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'tempFile{}(SortString{}, SortInt{}) : SortIOFile{} [constructor{}(), format{}("%c#tempFile%r %c(... %r path: %1 %c,%r fd: %2 %c)%r"), functional{}(), injective{}(), klabel{}("#tempFile"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2601,21,2601,93)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("110101")]
  hooked-symbol Lbl'Hash'time'LParRParUnds'K-IO'Unds'Int{}() : SortInt{} [format{}("%c#time%r %c(%r %c)%r"), function{}(), hook{}("IO.time"), impure{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2561,18,2561,67)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("111")]
  hooked-symbol Lbl'Hash'trace{}(SortKItem{}) : SortK{} [format{}("%c#trace%r %c(... %r value: %1 %c)%r"), function{}(), functional{}(), hook{}("IO.traceTerm"), impure{}(), klabel{}("#trace"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2642,16,2642,103)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), returnsUnit{}(), right{}(), symbol'Kywd'{}(), terminals{}("1101"), total{}()]
  hooked-symbol Lbl'Hash'traceK{}(SortK{}) : SortK{} [format{}("%c#traceK%r %c(... %r value: %1 %c)%r"), function{}(), functional{}(), hook{}("IO.traceTerm"), impure{}(), klabel{}("#traceK"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2643,16,2643,103)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), returnsUnit{}(), right{}(), symbol'Kywd'{}(), terminals{}("1101"), total{}()]
  symbol Lbl'Hash'unknownIOError{}(SortInt{}) : SortIOError{} [constructor{}(), format{}("%c#unknownIOError%r %c(... %r errno: %1 %c)%r"), functional{}(), injective{}(), klabel{}("#unknownIOError"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2385,54,2385,90)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1101")]
  hooked-symbol Lbl'Hash'unlock'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortK{} [format{}("%c#unlock%r %c(... %r fd: %1 %c,%r endIndex: %2 %c)%r"), function{}(), hook{}("IO.unlock"), impure{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2538,16,2538,95)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101")]
  hooked-symbol Lbl'Hash'write'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'String{}(SortInt{}, SortString{}) : SortK{} [format{}("%c#write%r %c(... %r fd: %1 %c,%r value: %2 %c)%r"), function{}(), hook{}("IO.write"), impure{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2517,16,2517,93)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101")]
  symbol Lbl'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(SortExp{}) : SortExp{} [constructor{}(), format{}("%c++%r %1"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,18,18,26)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), priorities{}(Lblspawn'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(),Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(),LblsizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(),Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblread'LParRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}()), right{}(), terminals{}("10")]
  symbol Lbl-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(SortExp{}) : SortExp{} [constructor{}(), format{}("%c-%r %1"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(21,18,21,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), priorities{}(Lblspawn'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(), strict{}(""), terminals{}("10")]
  symbol Lbl'Stop'CurrEnvVarCell{}() : SortCurrEnvVarCell{} [constructor{}(), format{}("%c.CurrEnvVarCell%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1")]
  hooked-symbol Lbl'Stop'List{}() : SortList{} [format{}("%c.List%r"), function{}(), functional{}(), hook{}("LIST.unit"), klabel{}(".List"), latex{}("\\dotCt{List}"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(937,19,937,142)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), smtlib{}("smt_seq_nil"), symbol'Kywd'{}(), terminals{}("1"), total{}()]
  symbol Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps'QuotRBraUnds'Exps{}() : SortExps{} [anywhere{}(), format{}("%c.Exps%r"), functional{}(), injective{}(), klabel{}(".List{\"exps\"}"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(44,19,44,64)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), priorities{}(), right{}(), terminals{}("1"), userList{}("*")]
  symbol Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Params'Unds'Param'Unds'Params'QuotRBraUnds'Params{}() : SortParams{} [constructor{}(), format{}("%c.Params%r"), functional{}(), injective{}(), klabel{}(".List{\"_,__SIMPLE-TYPED-STATIC-SYNTAX\"}"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(12,21,12,36)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), priorities{}(), right{}(), terminals{}("1"), userList{}("*")]
  symbol Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}() : SortTypes{} [constructor{}(), format{}("%c.Types%r"), functional{}(), injective{}(), klabel{}(".List{\"exps\"}"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(10,20,10,58)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), priorities{}(), right{}(), terminals{}("1"), userList{}("*")]
  hooked-symbol Lbl'Stop'Map{}() : SortMap{} [format{}("%c.Map%r"), function{}(), functional{}(), hook{}("MAP.unit"), klabel{}(".Map"), latex{}("\\dotCt{Map}"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(248,18,248,124)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1"), total{}()]
  symbol Lbl'Stop'ReturnTypeCell{}() : SortReturnTypeCell{} [constructor{}(), format{}("%c.ReturnTypeCell%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1")]
  hooked-symbol Lbl'Stop'Set{}() : SortSet{} [format{}("%c.Set%r"), function{}(), functional{}(), hook{}("SET.unit"), klabel{}(".Set"), latex{}("\\dotCt{Set}"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(729,18,729,118)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1"), total{}()]
  hooked-symbol Lbl'Stop'TaskCellSet{}() : SortTaskCellSet{} [format{}("%c.TaskCellSet%r"), function{}(), hook{}("SET.unit"), left{}(), priorities{}(), right{}(), terminals{}("1")]
  symbol Lbl'Stop'TenvCell{}() : SortTenvCell{} [constructor{}(), format{}("%c.TenvCell%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1")]
  symbol Lbl'-LT-'T'-GT-'{}(SortTasksCell{}, SortGtenvCell{}) : SortTCell{} [cell{}(), cellName{}("T"), color{}("yellow"), colors{}("yellow,yellow"), constructor{}(), format{}("%c<T>%r%i%n%1%n%2%d%n%c</T>%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(86,17,97,21)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), priorities{}(), right{}(), terminals{}("1001")]
  symbol Lbl'-LT-'T'-GT-'-fragment{}(SortTasksCellOpt{}, SortGtenvCellOpt{}) : SortTCellFragment{} [cellFragment{}("TCell"), constructor{}(), format{}("%c<T>-fragment%r %1 %2 %c</T>-fragment%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1001")]
  symbol Lbl'-LT-'currEnvVar'-GT-'{}(SortSet{}) : SortCurrEnvVarCell{} [cell{}(), cellName{}("currEnvVar"), color{}("DarkGreen"), colors{}("DarkGreen,DarkGreen"), constructor{}(), format{}("%c<currEnvVar>%r%i%n%1%d%n%c</currEnvVar>%r"), functional{}(), injective{}(), left{}(), multiplicity{}("?"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(91,23,91,90)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), priorities{}(), right{}(), terminals{}("101"), unit{}(Lbl'Stop'CurrEnvVarCell{}())]
  symbol Lbl'-LT-'generatedCounter'-GT-'{}(SortInt{}) : SortGeneratedCounterCell{} [cell{}(), cellName{}("generatedCounter"), constructor{}(), format{}("%c<generatedCounter>%r%i%n%1%d%n%c</generatedCounter>%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("101")]
  symbol Lbl'-LT-'generatedTop'-GT-'{}(SortTCell{}, SortGeneratedCounterCell{}) : SortGeneratedTopCell{} [cell{}(), cellName{}("generatedTop"), constructor{}(), format{}("%1"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1001")]
  symbol Lbl'-LT-'generatedTop'-GT-'-fragment{}(SortTCellOpt{}, SortGeneratedCounterCellOpt{}) : SortGeneratedTopCellFragment{} [cellFragment{}("GeneratedTopCell"), constructor{}(), format{}("%c<generatedTop>-fragment%r %1 %2 %c</generatedTop>-fragment%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1001")]
  symbol Lbl'-LT-'gtenv'-GT-'{}(SortMap{}) : SortGtenvCell{} [cell{}(), cellName{}("gtenv"), color{}("blue"), colors{}("blue,blue"), constructor{}(), format{}("%c<gtenv>%r%i%n%1%d%n%c</gtenv>%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(96,19,96,53)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), priorities{}(), right{}(), terminals{}("101")]
  symbol Lbl'-LT-'k'-GT-'{}(SortK{}) : SortKCell{} [cell{}(), cellName{}("k"), color{}("green"), colors{}("green,green"), constructor{}(), format{}("%c<k>%r%i%n%1%d%n%c</k>%r"), functional{}(), injective{}(), left{}(), maincell{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(89,23,89,55)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), priorities{}(), right{}(), terminals{}("101")]
  symbol Lbl'-LT-'returnType'-GT-'{}(SortType{}) : SortReturnTypeCell{} [cell{}(), cellName{}("returnType"), color{}("Orchid"), colors{}("Orchid,Orchid"), constructor{}(), format{}("%c<returnType>%r%i%n%1%d%n%c</returnType>%r"), functional{}(), injective{}(), left{}(), multiplicity{}("?"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(92,23,92,86)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), priorities{}(), right{}(), terminals{}("101"), unit{}(Lbl'Stop'ReturnTypeCell{}())]
  symbol Lbl'-LT-'task'-GT-'{}(SortKCell{}, SortTenvCell{}, SortCurrEnvVarCell{}, SortReturnTypeCell{}) : SortTaskCell{} [cell{}(), cellName{}("task"), color{}("yellow"), colors{}("yellow,yellow"), constructor{}(), format{}("%c<task>%r%i%n%1%n%2%n%3%n%4%d%n%c</task>%r"), functional{}(), injective{}(), left{}(), multiplicity{}("*"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(88,21,93,28)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), priorities{}(), right{}(), terminals{}("100001"), type{}("Set")]
  symbol Lbl'-LT-'task'-GT-'-fragment{}(SortKCellOpt{}, SortTenvCellOpt{}, SortCurrEnvVarCellOpt{}, SortReturnTypeCellOpt{}) : SortTaskCellFragment{} [cellFragment{}("TaskCell"), constructor{}(), format{}("%c<task>-fragment%r %1 %2 %3 %4 %c</task>-fragment%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("100001")]
  symbol Lbl'-LT-'tasks'-GT-'{}(SortTaskCellSet{}) : SortTasksCell{} [cell{}(), cellName{}("tasks"), color{}("orange"), colors{}("orange,orange"), constructor{}(), format{}("%c<tasks>%r%i%n%1%d%n%c</tasks>%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(87,19,94,27)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), priorities{}(), right{}(), terminals{}("101")]
  symbol Lbl'-LT-'tasks'-GT-'-fragment{}(SortTaskCellSet{}) : SortTasksCellFragment{} [cellFragment{}("TasksCell"), constructor{}(), format{}("%c<tasks>-fragment%r %1 %c</tasks>-fragment%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("101")]
  symbol Lbl'-LT-'tenv'-GT-'{}(SortMap{}) : SortTenvCell{} [cell{}(), cellName{}("tenv"), color{}("cyan"), colors{}("cyan,cyan"), constructor{}(), format{}("%c<tenv>%r%i%n%1%d%n%c</tenv>%r"), functional{}(), injective{}(), left{}(), multiplicity{}("?"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(90,23,90,72)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), priorities{}(), right{}(), terminals{}("101"), unit{}(Lbl'Stop'TenvCell{}())]
  hooked-symbol LblBase2String'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortString{} [format{}("%cBase2String%r %c(%r %1 %c,%r %2 %c)%r"), function{}(), hook{}("STRING.base2string"), klabel{}("Base2String"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1812,21,1812,99)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101")]
  symbol LblBool2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Bool{}(SortBool{}) : SortString{} [format{}("%cBool2String%r %c(%r %1 %c)%r"), function{}(), functional{}(), klabel{}("Bool2String"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1762,21,1762,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  hooked-symbol LblFloat2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Float{}(SortFloat{}) : SortString{} [format{}("%cFloat2String%r %c(%r %1 %c)%r"), function{}(), functional{}(), hook{}("STRING.float2string"), klabel{}("Float2String"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1789,21,1789,101)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  hooked-symbol LblFloat2String'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'Float'Unds'String{}(SortFloat{}, SortString{}) : SortString{} [format{}("%cFloat2String%r %c(%r %1 %c,%r %2 %c)%r"), function{}(), hook{}("STRING.floatFormat"), klabel{}("FloatFormat"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1790,21,1790,122)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101")]
  hooked-symbol LblId2String'LParUndsRParUnds'ID-COMMON'Unds'String'Unds'Id{}(SortId{}) : SortString{} [format{}("%cId2String%r %c(%r %1 %c)%r"), function{}(), functional{}(), hook{}("STRING.token2string"), klabel{}("Id2String"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2242,21,2242,85)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  hooked-symbol LblInt2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int{}(SortInt{}) : SortString{} [format{}("%cInt2String%r %c(%r %1 %c)%r"), function{}(), functional{}(), hook{}("STRING.int2string"), klabel{}("Int2String"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1811,21,1811,99)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  hooked-symbol LblList'Coln'get{}(SortList{}, SortInt{}) : SortKItem{} [format{}("%1 %c[%r %2 %c]%r"), function{}(), hook{}("LIST.get"), klabel{}("List:get"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(956,20,956,99)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("0101")]
  hooked-symbol LblList'Coln'range{}(SortList{}, SortInt{}, SortInt{}) : SortList{} [format{}("%crange%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}(), hook{}("LIST.range"), klabel{}("List:range"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1003,19,1003,120)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("11010101")]
  hooked-symbol LblListItem{}(SortKItem{}) : SortList{} [format{}("%cListItem%r %c(%r %1 %c)%r"), function{}(), functional{}(), hook{}("LIST.element"), klabel{}("ListItem"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(945,19,945,132)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), smtlib{}("smt_seq_elem"), symbol'Kywd'{}(), terminals{}("1101"), total{}()]
  hooked-symbol LblMap'Coln'lookup{}(SortMap{}, SortKItem{}) : SortKItem{} [format{}("%1 %c[%r %2 %c]%r"), function{}(), hook{}("MAP.lookup"), klabel{}("Map:lookup"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(271,20,271,113)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("0101")]
  hooked-symbol LblMap'Coln'update{}(SortMap{}, SortKItem{}, SortKItem{}) : SortMap{} [format{}("%1 %c[%r %2 %c<-%r %3 %c]%r"), function{}(), functional{}(), hook{}("MAP.update"), klabel{}("Map:update"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(290,18,290,140)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), prefer{}(), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("010101"), total{}()]
  hooked-symbol LblSet'Coln'difference{}(SortSet{}, SortSet{}) : SortSet{} [format{}("%1 %c-Set%r %2"), function{}(), functional{}(), hook{}("SET.difference"), klabel{}("Set:difference"), latex{}("{#1}-_{\\it Set}{#2}"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(769,18,769,142)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("010"), total{}()]
  hooked-symbol LblSet'Coln'in{}(SortKItem{}, SortSet{}) : SortBool{} [format{}("%1 %cin%r %2"), function{}(), functional{}(), hook{}("SET.in"), klabel{}("Set:in"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(777,19,777,102)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("010"), total{}()]
  hooked-symbol LblSetItem{}(SortKItem{}) : SortSet{} [format{}("%cSetItem%r %c(%r %1 %c)%r"), function{}(), functional{}(), hook{}("SET.element"), injective{}(), klabel{}("SetItem"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(737,18,737,119)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1101"), total{}()]
  hooked-symbol LblString2Base'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'Int{}(SortString{}, SortInt{}) : SortInt{} [format{}("%cString2Base%r %c(%r %1 %c,%r %2 %c)%r"), function{}(), hook{}("STRING.string2base"), klabel{}("String2Base"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1813,21,1813,99)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101")]
  symbol LblString2Bool'LParUndsRParUnds'STRING-COMMON'Unds'Bool'Unds'String{}(SortString{}) : SortBool{} [format{}("%cString2Bool%r %c(%r %1 %c)%r"), function{}(), klabel{}("String2Bool"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1768,19,1768,49)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  hooked-symbol LblString2Float'LParUndsRParUnds'STRING-COMMON'Unds'Float'Unds'String{}(SortString{}) : SortFloat{} [format{}("%cString2Float%r %c(%r %1 %c)%r"), function{}(), hook{}("STRING.string2float"), klabel{}("String2Float"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1791,21,1791,94)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  hooked-symbol LblString2Id'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'String{}(SortString{}) : SortId{} [format{}("%cString2Id%r %c(%r %1 %c)%r"), function{}(), functional{}(), hook{}("STRING.string2token"), klabel{}("String2Id"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2243,17,2243,80)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  hooked-symbol LblString2Int'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(SortString{}) : SortInt{} [format{}("%cString2Int%r %c(%r %1 %c)%r"), function{}(), hook{}("STRING.string2int"), klabel{}("String2Int"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1810,21,1810,92)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  hooked-symbol LblTaskCellSetItem{}(SortTaskCell{}) : SortTaskCellSet{} [format{}("%1"), function{}(), hook{}("SET.element"), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [constructor{}(), format{}("%1 %c!=%r %2"), functional{}(), injective{}(), left{}(Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(37,18,37,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), priorities{}(Lblspawn'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), strict{}(""), terminals{}("010")]
  hooked-symbol Lbl'UndsPerc'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [format{}("%1 %c%%Int%r %2"), function{}(), hook{}("INT.tmod"), klabel{}("_%Int_"), latex{}("{#1}\\mathrel{\\%_{\\scriptstyle\\it Int}}{#2}"), left{}(Lbl'UndsStar'Int'Unds'{}(),Lbl'Unds'divInt'Unds'{}(),Lbl'UndsPerc'Int'Unds'{}(),Lbl'UndsSlsh'Int'Unds'{}(),Lbl'Unds'modInt'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1237,18,1237,171)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}(),Lbl'Unds'-Int'Unds'{}()), right{}(), smt-hook{}("mod"), symbol'Kywd'{}(), terminals{}("010")]
  symbol Lbl'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [constructor{}(), format{}("%1 %c%%%r %2"), functional{}(), injective{}(), left{}(Lbl'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(27,18,27,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), priorities{}(Lblspawn'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(), strict{}(""), terminals{}("010")]
  symbol Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [constructor{}(), format{}("%1 %c&&%r %2"), functional{}(), injective{}(), left{}(Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(40,18,40,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), priorities{}(Lblspawn'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(), strict{}(""), terminals{}("010")]
  hooked-symbol Lbl'UndsAnd-'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [comm{}(), format{}("%1 %c&Int%r %2"), function{}(), functional{}(), hook{}("INT.and"), klabel{}("_&Int_"), latex{}("{#1}\\mathrel{\\&_{\\scriptstyle\\it Int}}{#2}"), left{}(Lbl'UndsAnd-'Int'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1248,18,1248,184)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}()), right{}(), smtlib{}("andInt"), symbol'Kywd'{}(), terminals{}("010"), total{}()]
  symbol Lbl'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(SortExp{}, SortExps{}) : SortExp{} [constructor{}(), format{}("%1 %c(%r %2 %c)%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(20,18,20,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), priorities{}(Lblspawn'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(), strict{}(""), terminals{}("0101")]
  hooked-symbol Lbl'UndsStar'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [comm{}(), format{}("%1 %c*Int%r %2"), function{}(), functional{}(), hook{}("INT.mul"), klabel{}("_*Int_"), latex{}("{#1}\\mathrel{\\ast_{\\scriptstyle\\it Int}}{#2}"), left{}(Lbl'Unds'modInt'Unds'{}(),Lbl'UndsPerc'Int'Unds'{}(),Lbl'UndsSlsh'Int'Unds'{}(),Lbl'Unds'divInt'Unds'{}(),Lbl'UndsStar'Int'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1233,18,1233,183)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}(),Lbl'Unds'-Int'Unds'{}()), right{}(), smt-hook{}("*"), symbol'Kywd'{}(), terminals{}("010"), total{}()]
  symbol Lbl'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [constructor{}(), format{}("%1 %c*%r %2"), functional{}(), injective{}(), left{}(Lbl'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(25,18,25,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), priorities{}(Lblspawn'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(), strict{}(""), terminals{}("010")]
  hooked-symbol Lbl'UndsPlus'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [comm{}(), format{}("%1 %c+Int%r %2"), function{}(), functional{}(), hook{}("INT.add"), klabel{}("_+Int_"), latex{}("{#1}\\mathrel{+_{\\scriptstyle\\it Int}}{#2}"), left{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds'-Int'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1242,18,1242,180)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}()), right{}(), smt-hook{}("+"), symbol'Kywd'{}(), terminals{}("010"), total{}()]
  hooked-symbol Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortString{} [format{}("%1 %c+String%r %2"), function{}(), functional{}(), hook{}("STRING.concat"), latex{}("{#1}+_{\\scriptstyle\\it String}{#2}"), left{}(Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1701,21,1701,135)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010"), total{}()]
  symbol Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [constructor{}(), format{}("%1 %c+%r %2"), functional{}(), injective{}(), left{}(Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(29,18,29,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), priorities{}(Lblspawn'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(), strict{}(""), terminals{}("010")]
  symbol Lbl'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(SortExp{}, SortExps{}) : SortExps{} [anywhere{}(), format{}("%1 %c,%r %2"), functional{}(), injective{}(), klabel{}("exps"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(44,19,44,64)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), priorities{}(), right{}(), strict{}(""), terminals{}("010"), userList{}("*")]
  symbol Lbl'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Params'Unds'Param'Unds'Params{}(SortParam{}, SortParams{}) : SortParams{} [constructor{}(), format{}("%1 %c,%r %2"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(12,21,12,36)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), priorities{}(), right{}(), terminals{}("010"), userList{}("*")]
  symbol Lbl'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types{}(SortType{}, SortTypes{}) : SortTypes{} [constructor{}(), format{}("%1 %c,%r %2"), functional{}(), injective{}(), klabel{}("exps"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(10,20,10,58)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), priorities{}(), right{}(), terminals{}("010"), userList{}("*")]
  symbol Lbl'Unds'-'-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type'Unds'Types'Unds'Type{}(SortTypes{}, SortType{}) : SortType{} [constructor{}(), format{}("%1 %c->%r %2"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(8,19,8,34)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), priorities{}(), right{}(), terminals{}("010")]
  hooked-symbol Lbl'Unds'-Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [format{}("%1 %c-Int%r %2"), function{}(), functional{}(), hook{}("INT.sub"), klabel{}("_-Int_"), latex{}("{#1}\\mathrel{-_{\\scriptstyle\\it Int}}{#2}"), left{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds'-Int'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1243,18,1243,174)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}()), right{}(), smt-hook{}("-"), symbol'Kywd'{}(), terminals{}("010"), total{}()]
  hooked-symbol Lbl'Unds'-Map'UndsUnds'MAP'Unds'Map'Unds'Map'Unds'Map{}(SortMap{}, SortMap{}) : SortMap{} [format{}("%1 %c-Map%r %2"), function{}(), functional{}(), hook{}("MAP.difference"), latex{}("{#1}-_{\\it Map}{#2}"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(311,18,311,116)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010"), total{}()]
  symbol Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [constructor{}(), format{}("%1 %c-%r %2"), functional{}(), injective{}(), left{}(Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(30,18,30,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), priorities{}(Lblspawn'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(), strict{}(""), terminals{}("010")]
  hooked-symbol Lbl'UndsSlsh'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [format{}("%1 %c/Int%r %2"), function{}(), hook{}("INT.tdiv"), klabel{}("_/Int_"), latex{}("{#1}\\mathrel{\\div_{\\scriptstyle\\it Int}}{#2}"), left{}(Lbl'UndsSlsh'Int'Unds'{}(),Lbl'Unds'modInt'Unds'{}(),Lbl'Unds'divInt'Unds'{}(),Lbl'UndsPerc'Int'Unds'{}(),Lbl'UndsStar'Int'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1236,18,1236,173)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}(),Lbl'Unds'-Int'Unds'{}()), right{}(), smt-hook{}("div"), symbol'Kywd'{}(), terminals{}("010")]
  symbol Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [constructor{}(), format{}("%1 %c/%r %2"), functional{}(), injective{}(), left{}(Lbl'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(26,18,26,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), priorities{}(Lblspawn'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(), strict{}(""), terminals{}("010")]
  symbol Lbl'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(SortExp{}) : SortStmt{} [constructor{}(), format{}("%1 %c;%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(49,19,49,68)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), priorities{}(), right{}(), strict{}(""), terminals{}("01")]
  hooked-symbol Lbl'Unds-LT--LT-'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [format{}("%1 %c<<Int%r %2"), function{}(), hook{}("INT.shl"), klabel{}("_<<Int_"), latex{}("{#1}\\mathrel{\\ll_{\\scriptstyle\\it Int}}{#2}"), left{}(Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1246,18,1246,173)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}()), right{}(), smtlib{}("shlInt"), symbol'Kywd'{}(), terminals{}("010")]
  hooked-symbol Lbl'Unds-LT-Eqls'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [format{}("%1 %c<=Int%r %2"), function{}(), functional{}(), hook{}("INT.le"), klabel{}("_<=Int_"), latex{}("{#1}\\mathrel{\\leq_{\\scriptstyle\\it Int}}{#2}"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1304,19,1304,166)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), smt-hook{}("<="), symbol'Kywd'{}(), terminals{}("010"), total{}()]
  hooked-symbol Lbl'Unds-LT-Eqls'Map'UndsUnds'MAP'Unds'Bool'Unds'Map'Unds'Map{}(SortMap{}, SortMap{}) : SortBool{} [format{}("%1 %c<=Map%r %2"), function{}(), functional{}(), hook{}("MAP.inclusion"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(383,19,383,87)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010"), total{}()]
  hooked-symbol Lbl'Unds-LT-Eqls'Set'UndsUnds'SET'Unds'Bool'Unds'Set'Unds'Set{}(SortSet{}, SortSet{}) : SortBool{} [format{}("%1 %c<=Set%r %2"), function{}(), functional{}(), hook{}("SET.inclusion"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(786,19,786,81)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010"), total{}()]
  hooked-symbol Lbl'Unds-LT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [format{}("%1 %c<=String%r %2"), function{}(), functional{}(), hook{}("STRING.le"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1846,19,1846,78)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010"), total{}()]
  symbol Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [constructor{}(), format{}("%1 %c<=%r %2"), functional{}(), injective{}(), left{}(Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(33,18,33,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), priorities{}(Lblspawn'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), strict{}(""), terminals{}("010")]
  hooked-symbol Lbl'Unds-LT-'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [format{}("%1 %c<Int%r %2"), function{}(), functional{}(), hook{}("INT.lt"), klabel{}("_<Int_"), latex{}("{#1}\\mathrel{<_{\\scriptstyle\\it Int}}{#2}"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1305,19,1305,161)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), smt-hook{}("<"), symbol'Kywd'{}(), terminals{}("010"), total{}()]
  hooked-symbol Lbl'Unds-LT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [format{}("%1 %c<String%r %2"), function{}(), functional{}(), hook{}("STRING.lt"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1845,19,1845,78)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010"), total{}()]
  symbol Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [constructor{}(), format{}("%1 %c<%r %2"), functional{}(), injective{}(), left{}(Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(32,18,32,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), priorities{}(Lblspawn'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), strict{}(""), terminals{}("010")]
  hooked-symbol Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [comm{}(), format{}("%1 %c=/=Bool%r %2"), function{}(), functional{}(), hook{}("BOOL.ne"), klabel{}("_=/=Bool_"), left{}(Lbl'UndsEqlsEqls'Bool'Unds'{}(),Lbl'UndsEqlsSlshEqls'Bool'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1109,19,1109,134)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), smt-hook{}("distinct"), symbol'Kywd'{}(), terminals{}("010"), total{}()]
  hooked-symbol Lbl'UndsEqlsSlshEqls'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [comm{}(), format{}("%1 %c=/=Int%r %2"), function{}(), functional{}(), hook{}("INT.ne"), klabel{}("_=/=Int_"), latex{}("{#1}\\mathrel{{=}{/}{=}_{\\scriptstyle\\it Int}}{#2}"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1309,19,1309,184)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), smt-hook{}("distinct"), symbol'Kywd'{}(), terminals{}("010"), total{}()]
  hooked-symbol Lbl'UndsEqlsSlshEqls'K'Unds'{}(SortK{}, SortK{}) : SortBool{} [comm{}(), format{}("%1 %c=/=K%r %2"), function{}(), functional{}(), group{}("notEqualEqualK"), hook{}("KEQUAL.ne"), klabel{}("_=/=K_"), latex{}("{#1}\\mathrel{\\neq_K}{#2}"), left{}(Lbl'UndsEqlsEqls'K'Unds'{}(),Lbl'UndsEqlsSlshEqls'K'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2273,19,2273,179)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(Lbl'Unds'orElseBool'Unds'{}(),Lbl'Unds'orBool'Unds'{}(),Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'Unds'andThenBool'Unds'{}(),Lbl'Unds'impliesBool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}(),Lbl'Unds'andBool'Unds'{}(),LblnotBool'Unds'{}(),Lbl'Unds'xorBool'Unds'{}()), right{}(), smt-hook{}("distinct"), symbol'Kywd'{}(), terminals{}("010"), total{}()]
  hooked-symbol Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [comm{}(), format{}("%1 %c=/=String%r %2"), function{}(), functional{}(), hook{}("STRING.ne"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1842,19,1842,85)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010"), total{}()]
  hooked-symbol Lbl'UndsEqlsEqls'Bool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [comm{}(), format{}("%1 %c==Bool%r %2"), function{}(), functional{}(), hook{}("BOOL.eq"), klabel{}("_==Bool_"), left{}(Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1108,19,1108,126)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), smt-hook{}("="), symbol'Kywd'{}(), terminals{}("010"), total{}()]
  hooked-symbol Lbl'UndsEqlsEqls'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [comm{}(), format{}("%1 %c==Int%r %2"), function{}(), functional{}(), hook{}("INT.eq"), klabel{}("_==Int_"), latex{}("{#1}\\mathrel{{=}{=}_{\\scriptstyle\\it Int}}{#2}"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1308,19,1308,173)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), smt-hook{}("="), symbol'Kywd'{}(), terminals{}("010"), total{}()]
  hooked-symbol Lbl'UndsEqlsEqls'K'Unds'{}(SortK{}, SortK{}) : SortBool{} [comm{}(), format{}("%1 %c==K%r %2"), function{}(), functional{}(), group{}("equalEqualK"), hook{}("KEQUAL.eq"), klabel{}("_==K_"), latex{}("{#1}\\mathrel{=_K}{#2}"), left{}(Lbl'UndsEqlsSlshEqls'K'Unds'{}(),Lbl'UndsEqlsEqls'K'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2272,19,2272,165)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(Lbl'Unds'orElseBool'Unds'{}(),Lbl'Unds'orBool'Unds'{}(),Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'Unds'andThenBool'Unds'{}(),Lbl'Unds'impliesBool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}(),Lbl'Unds'andBool'Unds'{}(),LblnotBool'Unds'{}(),Lbl'Unds'xorBool'Unds'{}()), right{}(), smt-hook{}("="), symbol'Kywd'{}(), terminals{}("010"), total{}()]
  hooked-symbol Lbl'UndsEqlsEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [comm{}(), format{}("%1 %c==String%r %2"), function{}(), functional{}(), hook{}("STRING.eq"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1841,19,1841,85)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010"), total{}()]
  symbol Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [constructor{}(), format{}("%1 %c==%r %2"), functional{}(), injective{}(), left{}(Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(36,18,36,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), priorities{}(Lblspawn'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), strict{}(""), terminals{}("010")]
  symbol Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [constructor{}(), format{}("%1 %c=%r %2"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(43,18,43,60)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), priorities{}(), right{}(Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), strict{}("2"), terminals{}("010")]
  hooked-symbol Lbl'Unds-GT-Eqls'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [format{}("%1 %c>=Int%r %2"), function{}(), functional{}(), hook{}("INT.ge"), klabel{}("_>=Int_"), latex{}("{#1}\\mathrel{\\geq_{\\scriptstyle\\it Int}}{#2}"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1306,19,1306,166)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), smt-hook{}(">="), symbol'Kywd'{}(), terminals{}("010"), total{}()]
  hooked-symbol Lbl'Unds-GT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [format{}("%1 %c>=String%r %2"), function{}(), functional{}(), hook{}("STRING.ge"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1848,19,1848,78)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010"), total{}()]
  symbol Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [constructor{}(), format{}("%1 %c>=%r %2"), functional{}(), injective{}(), left{}(Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(35,18,35,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), priorities{}(Lblspawn'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), strict{}(""), terminals{}("010")]
  hooked-symbol Lbl'Unds-GT--GT-'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [format{}("%1 %c>>Int%r %2"), function{}(), hook{}("INT.shr"), klabel{}("_>>Int_"), latex{}("{#1}\\mathrel{\\gg_{\\scriptstyle\\it Int}}{#2}"), left{}(Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'Unds-GT--GT-'Int'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1245,18,1245,173)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}()), right{}(), smtlib{}("shrInt"), symbol'Kywd'{}(), terminals{}("010")]
  hooked-symbol Lbl'Unds-GT-'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [format{}("%1 %c>Int%r %2"), function{}(), functional{}(), hook{}("INT.gt"), klabel{}("_>Int_"), latex{}("{#1}\\mathrel{>_{\\scriptstyle\\it Int}}{#2}"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1307,19,1307,161)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), smt-hook{}(">"), symbol'Kywd'{}(), terminals{}("010"), total{}()]
  hooked-symbol Lbl'Unds-GT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [format{}("%1 %c>String%r %2"), function{}(), functional{}(), hook{}("STRING.gt"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1847,19,1847,78)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010"), total{}()]
  symbol Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [constructor{}(), format{}("%1 %c>%r %2"), functional{}(), injective{}(), left{}(Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(34,18,34,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), priorities{}(Lblspawn'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), strict{}(""), terminals{}("010")]
  hooked-symbol Lbl'Unds'List'Unds'{}(SortList{}, SortList{}) : SortList{} [assoc{}(), element{}(LblListItem{}()), format{}("%1%n%2"), function{}(), functional{}(), hook{}("LIST.concat"), klabel{}("_List_"), left{}(Lbl'Unds'List'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(929,19,929,188)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), smtlib{}("smt_seq_concat"), symbol'Kywd'{}(), terminals{}("00"), total{}(), unit{}(Lbl'Stop'List{}())]
  hooked-symbol Lbl'Unds'Map'Unds'{}(SortMap{}, SortMap{}) : SortMap{} [assoc{}(), comm{}(), element{}(Lbl'UndsPipe'-'-GT-Unds'{}()), format{}("%1%n%2"), function{}(), hook{}("MAP.concat"), index{}("0"), klabel{}("_Map_"), left{}(Lbl'Unds'Map'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(240,18,240,173)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("00"), unit{}(Lbl'Stop'Map{}())]
  hooked-symbol Lbl'Unds'Set'Unds'{}(SortSet{}, SortSet{}) : SortSet{} [assoc{}(), comm{}(), element{}(LblSetItem{}()), format{}("%1%n%2"), function{}(), hook{}("SET.concat"), idem{}(), klabel{}("_Set_"), left{}(Lbl'Unds'Set'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(721,18,721,165)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("00"), unit{}(Lbl'Stop'Set{}())]
  hooked-symbol Lbl'Unds'TaskCellSet'Unds'{}(SortTaskCellSet{}, SortTaskCellSet{}) : SortTaskCellSet{} [assoc{}(), avoid{}(), cellCollection{}(), comm{}(), element{}(LblTaskCellSetItem{}()), format{}("%1 %2"), function{}(), hook{}("SET.concat"), idem{}(), left{}(), priorities{}(), right{}(), terminals{}("00"), unit{}(Lbl'Stop'TaskCellSet{}()), wrapElement{}("<task>")]
  symbol Lbl'UndsLSqBRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type'Unds'Type{}(SortType{}) : SortType{} [constructor{}(), format{}("%1 %c[%r %c]%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(6,19,6,31)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), priorities{}(Lbl'Unds'-'-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type'Unds'Types'Unds'Type{}()), right{}(), terminals{}("011")]
  hooked-symbol Lbl'UndsLSqBUnds-LT-'-'UndsRSqBUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'KItem{}(SortList{}, SortInt{}, SortKItem{}) : SortList{} [format{}("%1 %c[%r %2 %c<-%r %3 %c]%r"), function{}(), hook{}("LIST.update"), klabel{}("List:set"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(965,19,965,108)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010101")]
  hooked-symbol Lbl'UndsLSqBUnds-LT-'-undef'RSqB'{}(SortMap{}, SortKItem{}) : SortMap{} [format{}("%1 %c[%r %2 %c<-%r %cundef%r %c]%r"), function{}(), functional{}(), hook{}("MAP.remove"), klabel{}("_[_<-undef]"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(299,18,299,117)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("010111"), total{}()]
  symbol Lbl'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(SortExp{}, SortExps{}) : SortExp{} [constructor{}(), format{}("%1 %c[%r %2 %c]%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(19,18,19,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), priorities{}(Lblspawn'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(),LblsizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(),Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblread'LParRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}()), right{}(), strict{}(""), terminals{}("0101")]
  hooked-symbol Lbl'UndsLSqBUndsRSqB'orDefault'UndsUnds'MAP'Unds'KItem'Unds'Map'Unds'KItem'Unds'KItem{}(SortMap{}, SortKItem{}, SortKItem{}) : SortKItem{} [format{}("%1 %c[%r %2 %c]%r %corDefault%r %3"), function{}(), functional{}(), hook{}("MAP.lookupOrDefault"), klabel{}("Map:lookupOrDefault"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(281,20,281,134)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010110"), total{}()]
  hooked-symbol Lbl'UndsXor-Perc'Int'UndsUnds'{}(SortInt{}, SortInt{}, SortInt{}) : SortInt{} [format{}("%1 %c^%%Int%r %2 %3"), function{}(), hook{}("INT.powmod"), klabel{}("_^%Int__"), left{}(Lbl'UndsXor-Perc'Int'UndsUnds'{}(),Lbl'UndsXor-'Int'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1231,18,1231,139)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds'divInt'Unds'{}(),Lbl'UndsPerc'Int'Unds'{}(),Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsSlsh'Int'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsStar'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}(),Lbl'Unds'modInt'Unds'{}(),Lbl'Unds'-Int'Unds'{}()), right{}(), smt-hook{}("(mod (^ #1 #2) #3)"), symbol'Kywd'{}(), terminals{}("0100")]
  hooked-symbol Lbl'UndsXor-'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [format{}("%1 %c^Int%r %2"), function{}(), hook{}("INT.pow"), klabel{}("_^Int_"), latex{}("{#1}\\mathrel{{\\char`\\^}_{\\!\\scriptstyle\\it Int}}{#2}"), left{}(Lbl'UndsXor-'Int'Unds'{}(),Lbl'UndsXor-Perc'Int'UndsUnds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1230,18,1230,178)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds'divInt'Unds'{}(),Lbl'UndsPerc'Int'Unds'{}(),Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsSlsh'Int'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsStar'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}(),Lbl'Unds'modInt'Unds'{}(),Lbl'Unds'-Int'Unds'{}()), right{}(), smt-hook{}("^"), symbol'Kywd'{}(), terminals{}("010")]
  symbol Lbl'UndsUndsLParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Id'Unds'Params'Unds'Block{}(SortType{}, SortId{}, SortParams{}, SortBlock{}) : SortStmt{} [constructor{}(), format{}("%1 %2 %c(%r %3 %c)%r %4"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(15,19,15,47)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), priorities{}(), right{}(), terminals{}("001010")]
  symbol Lbl'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps{}(SortType{}, SortExps{}) : SortStmt{} [anywhere{}(), format{}("%1 %2 %c;%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(14,19,14,32)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), priorities{}(), right{}(), terminals{}("001")]
  symbol Lbl'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Param'Unds'Type'Unds'Id{}(SortType{}, SortId{}) : SortParam{} [constructor{}(), format{}("%1 %2"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(11,20,11,27)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), priorities{}(), right{}(), terminals{}("00")]
  symbol Lbl'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(SortStmt{}, SortStmt{}) : SortStmt{} [constructor{}(), format{}("%1 %2"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(63,19,63,75)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), priorities{}(), right{}(Lbl'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}()), seqstrict{}(), terminals{}("00")]
  hooked-symbol Lbl'Unds'andBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [format{}("%1 %candBool%r %2"), function{}(), functional{}(), group{}("boolOperation"), hook{}("BOOL.and"), klabel{}("_andBool_"), latex{}("{#1}\\wedge_{\\scriptstyle\\it Bool}{#2}"), left{}(Lbl'Unds'andBool'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1101,19,1101,192)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}()), right{}(), smt-hook{}("and"), symbol'Kywd'{}(), terminals{}("010"), total{}()]
  hooked-symbol Lbl'Unds'andThenBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [format{}("%1 %candThenBool%r %2"), function{}(), functional{}(), group{}("boolOperation"), hook{}("BOOL.andThen"), klabel{}("_andThenBool_"), left{}(Lbl'Unds'andThenBool'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1102,19,1102,154)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}()), right{}(), smt-hook{}("and"), symbol'Kywd'{}(), terminals{}("010"), total{}()]
  hooked-symbol Lbl'Unds'divInt'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [format{}("%1 %cdivInt%r %2"), function{}(), hook{}("INT.ediv"), klabel{}("_divInt_"), left{}(Lbl'UndsSlsh'Int'Unds'{}(),Lbl'Unds'modInt'Unds'{}(),Lbl'UndsStar'Int'Unds'{}(),Lbl'UndsPerc'Int'Unds'{}(),Lbl'Unds'divInt'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1239,18,1239,122)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}(),Lbl'Unds'-Int'Unds'{}()), right{}(), smt-hook{}("div"), symbol'Kywd'{}(), terminals{}("010")]
  symbol Lbl'Unds'dividesInt'UndsUnds'INT-COMMON'Unds'Bool'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortBool{} [format{}("%1 %cdividesInt%r %2"), function{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1318,19,1318,53)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010")]
  hooked-symbol Lbl'Unds'impliesBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [format{}("%1 %cimpliesBool%r %2"), function{}(), functional{}(), group{}("boolOperation"), hook{}("BOOL.implies"), klabel{}("_impliesBool_"), left{}(Lbl'Unds'impliesBool'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1106,19,1106,153)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}()), right{}(), smt-hook{}("=>"), symbol'Kywd'{}(), terminals{}("010"), total{}()]
  hooked-symbol Lbl'Unds'in'UndsUnds'LIST'Unds'Bool'Unds'KItem'Unds'List{}(SortKItem{}, SortList{}) : SortBool{} [format{}("%1 %cin%r %2"), function{}(), functional{}(), hook{}("LIST.in"), klabel{}("_inList_"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1012,19,1012,97)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010"), total{}()]
  hooked-symbol Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(SortKItem{}, SortMap{}) : SortBool{} [format{}("%1 %cin_keys%r %c(%r %2 %c)%r"), function{}(), functional{}(), hook{}("MAP.in_keys"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(357,19,357,89)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("01101"), total{}()]
  hooked-symbol Lbl'Unds'modInt'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [format{}("%1 %cmodInt%r %2"), function{}(), hook{}("INT.emod"), klabel{}("_modInt_"), left{}(Lbl'UndsStar'Int'Unds'{}(),Lbl'UndsPerc'Int'Unds'{}(),Lbl'Unds'divInt'Unds'{}(),Lbl'UndsSlsh'Int'Unds'{}(),Lbl'Unds'modInt'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1240,18,1240,122)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}(),Lbl'Unds'-Int'Unds'{}()), right{}(), smt-hook{}("mod"), symbol'Kywd'{}(), terminals{}("010")]
  hooked-symbol Lbl'Unds'orBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [format{}("%1 %corBool%r %2"), function{}(), functional{}(), group{}("boolOperation"), hook{}("BOOL.or"), klabel{}("_orBool_"), latex{}("{#1}\\vee_{\\scriptstyle\\it Bool}{#2}"), left{}(Lbl'Unds'orBool'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1104,19,1104,187)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}()), right{}(), smt-hook{}("or"), symbol'Kywd'{}(), terminals{}("010"), total{}()]
  hooked-symbol Lbl'Unds'orElseBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [format{}("%1 %corElseBool%r %2"), function{}(), functional{}(), group{}("boolOperation"), hook{}("BOOL.orElse"), klabel{}("_orElseBool_"), left{}(Lbl'Unds'orElseBool'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1105,19,1105,151)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}()), right{}(), smt-hook{}("or"), symbol'Kywd'{}(), terminals{}("010"), total{}()]
  hooked-symbol Lbl'Unds'xorBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [format{}("%1 %cxorBool%r %2"), function{}(), functional{}(), group{}("boolOperation"), hook{}("BOOL.xor"), klabel{}("_xorBool_"), left{}(Lbl'Unds'xorBool'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1103,19,1103,146)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}()), right{}(), smt-hook{}("xor"), symbol'Kywd'{}(), terminals{}("010"), total{}()]
  hooked-symbol Lbl'Unds'xorInt'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [comm{}(), format{}("%1 %cxorInt%r %2"), function{}(), functional{}(), hook{}("INT.xor"), klabel{}("_xorInt_"), latex{}("{#1}\\mathrel{\\oplus_{\\scriptstyle\\it Int}}{#2}"), left{}(Lbl'Unds'xorInt'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1250,18,1250,190)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(Lbl'UndsPipe'Int'Unds'{}()), right{}(), smtlib{}("xorInt"), symbol'Kywd'{}(), terminals{}("010"), total{}()]
  hooked-symbol Lbl'UndsPipe'-'-GT-Unds'{}(SortKItem{}, SortKItem{}) : SortMap{} [format{}("%1 %c|->%r %2"), function{}(), functional{}(), hook{}("MAP.element"), injective{}(), klabel{}("_|->_"), latex{}("{#1}\\mapsto{#2}"), left{}(Lbl'UndsPipe'-'-GT-Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(257,18,257,151)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(Lbl'Stop'Map{}(),Lbl'Unds'Map'Unds'{}()), right{}(Lbl'UndsPipe'-'-GT-Unds'{}()), symbol'Kywd'{}(), terminals{}("010"), total{}()]
  hooked-symbol Lbl'UndsPipe'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [comm{}(), format{}("%1 %c|Int%r %2"), function{}(), functional{}(), hook{}("INT.or"), klabel{}("_|Int_"), latex{}("{#1}\\mathrel{|_{\\scriptstyle\\it Int}}{#2}"), left{}(Lbl'UndsPipe'Int'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1252,18,1252,181)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), smtlib{}("orInt"), symbol'Kywd'{}(), terminals{}("010"), total{}()]
  hooked-symbol Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(SortSet{}, SortSet{}) : SortSet{} [comm{}(), format{}("%1 %c|Set%r %2"), function{}(), functional{}(), hook{}("SET.union"), left{}(Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(748,18,748,92)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010"), total{}()]
  symbol Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [constructor{}(), format{}("%1 %c||%r %2"), functional{}(), injective{}(), left{}(Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(41,18,41,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), priorities{}(Lblspawn'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(), strict{}(""), terminals{}("010")]
  hooked-symbol LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(SortInt{}) : SortInt{} [format{}("%cabsInt%r %c(%r %1 %c)%r"), function{}(), functional{}(), hook{}("INT.abs"), klabel{}("absInt"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1269,18,1269,119)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), smt-hook{}("(ite (< #1 0) (- 0 #1) #1)"), terminals{}("1101"), total{}()]
  symbol Lblacquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(SortExp{}) : SortStmt{} [constructor{}(), format{}("%cacquire%r %1 %c;%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(60,19,60,68)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), priorities{}(), right{}(), strict{}(""), terminals{}("101")]
  hooked-symbol LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}, SortInt{}) : SortInt{} [format{}("%cbitRangeInt%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}(), hook{}("INT.bitRange"), klabel{}("bitRangeInt"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1294,18,1294,103)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101")]
  symbol Lblblock'Unds'SIMPLE-TYPED-STATIC'Unds'BlockOrStmtType{}() : SortBlockOrStmtType{} [constructor{}(), format{}("%cblock%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(80,30,80,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), priorities{}(), right{}(), terminals{}("1")]
  symbol Lblbool'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}() : SortType{} [constructor{}(), format{}("%cbool%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(5,36,5,42)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), priorities{}(Lbl'Unds'-'-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type'Unds'Types'Unds'Type{}()), right{}(), terminals{}("1")]
  hooked-symbol LblcategoryChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'String{}(SortString{}) : SortString{} [format{}("%ccategoryChar%r %c(%r %1 %c)%r"), function{}(), hook{}("STRING.category"), klabel{}("categoryChar"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1858,21,1858,81)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  hooked-symbol Lblchoice'LParUndsRParUnds'MAP'Unds'KItem'Unds'Map{}(SortMap{}) : SortKItem{} [format{}("%cchoice%r %c(%r %1 %c)%r"), function{}(), hook{}("MAP.choice"), klabel{}("Map:choice"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(393,20,393,101)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  hooked-symbol Lblchoice'LParUndsRParUnds'SET'Unds'KItem'Unds'Set{}(SortSet{}) : SortKItem{} [format{}("%cchoice%r %c(%r %1 %c)%r"), function{}(), hook{}("SET.choice"), klabel{}("Set:choice"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(804,20,804,95)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  hooked-symbol LblchrChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int{}(SortInt{}) : SortString{} [format{}("%cchrChar%r %c(%r %1 %c)%r"), function{}(), hook{}("STRING.chr"), klabel{}("chrChar"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1718,21,1718,70)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  hooked-symbol LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortInt{} [format{}("%ccountAllOccurrences%r %c(... %r haystack: %1 %c,%r needle: %2 %c)%r"), function{}(), functional{}(), hook{}("STRING.countAllOccurrences"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1831,18,1831,146)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101"), total{}()]
  hooked-symbol LbldirectionalityChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'String{}(SortString{}) : SortString{} [format{}("%cdirectionalityChar%r %c(%r %1 %c)%r"), function{}(), hook{}("STRING.directionality"), klabel{}("directionalityChar"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1859,21,1859,87)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  hooked-symbol LblfillList'LParUndsCommUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'Int'Unds'KItem{}(SortList{}, SortInt{}, SortInt{}, SortKItem{}) : SortList{} [format{}("%cfillList%r %c(%r %1 %c,%r %2 %c,%r %3 %c,%r %4 %c)%r"), function{}(), hook{}("LIST.fill"), klabel{}("fillList"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(993,19,993,100)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101010101")]
  hooked-symbol LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(SortString{}, SortString{}, SortInt{}) : SortInt{} [format{}("%cfindChar%r %c(... %r haystack: %1 %c,%r needles: %2 %c,%r index: %3 %c)%r"), function{}(), hook{}("STRING.findChar"), klabel{}("findChar"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1755,18,1755,116)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101")]
  hooked-symbol LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(SortString{}, SortString{}, SortInt{}) : SortInt{} [format{}("%cfindString%r %c(... %r haystack: %1 %c,%r needle: %2 %c,%r index: %3 %c)%r"), function{}(), hook{}("STRING.find"), klabel{}("findString"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1744,18,1744,111)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101")]
  symbol Lblfor'LParUndsUndsSClnUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Exp'Unds'Exp'Unds'Block{}(SortStmt{}, SortExp{}, SortExp{}, SortBlock{}) : SortStmt{} [format{}("%cfor%r %c(%r %1 %2 %c;%r %3 %c)%r %4"), functional{}(), injective{}(), left{}(), macro{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(53,19,53,67)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), priorities{}(), right{}(), terminals{}("11001010")]
  symbol LblfreshId'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'Int{}(SortInt{}) : SortId{} [format{}("%cfreshId%r %c(%r %1 %c)%r"), freshGenerator{}(), function{}(), functional{}(), klabel{}("freshId"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2244,17,2244,75)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), private{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int{}(SortInt{}) : SortInt{} [format{}("%cfreshInt%r %c(%r %1 %c)%r"), freshGenerator{}(), function{}(), functional{}(), klabel{}("freshInt"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1432,18,1432,77)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), private{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblgetGeneratedCounterCell{}(SortGeneratedTopCell{}) : SortGeneratedCounterCell{} [format{}("%cgetGeneratedCounterCell%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol LblgetTypes'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Types'Unds'Params{}(SortParams{}) : SortTypes{} [format{}("%cgetTypes%r %c(%r %1 %c)%r"), function{}(), klabel{}("getTypes"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(233,20,233,48)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lblif'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(SortExp{}, SortBlock{}) : SortStmt{} [format{}("%cif%r %c(%r %1 %c)%r %2"), functional{}(), injective{}(), left{}(), macro{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(51,19,51,67)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), priorities{}(), right{}(), terminals{}("11010")]
  symbol Lblif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(SortExp{}, SortBlock{}, SortBlock{}) : SortStmt{} [avoid{}(), constructor{}(), format{}("%cif%r %c(%r %1 %c)%r %2 %celse%r %3"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(50,19,50,75)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), priorities{}(), right{}(), strict{}(""), terminals{}("1101010")]
  symbol LblinitCurrEnvVarCell{}() : SortCurrEnvVarCell{} [format{}("%cinitCurrEnvVarCell%r"), function{}(), initializer{}(), left{}(), priorities{}(), right{}(), terminals{}("1")]
  symbol LblinitGeneratedCounterCell{}() : SortGeneratedCounterCell{} [format{}("%cinitGeneratedCounterCell%r"), function{}(), initializer{}(), left{}(), priorities{}(), right{}(), terminals{}("1")]
  symbol LblinitGeneratedTopCell{}(SortMap{}) : SortGeneratedTopCell{} [format{}("%cinitGeneratedTopCell%r %c(%r %1 %c)%r"), function{}(), initializer{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol LblinitGtenvCell{}() : SortGtenvCell{} [format{}("%cinitGtenvCell%r"), function{}(), initializer{}(), left{}(), priorities{}(), right{}(), terminals{}("1")]
  symbol LblinitKCell{}(SortMap{}) : SortKCell{} [format{}("%cinitKCell%r %c(%r %1 %c)%r"), function{}(), initializer{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol LblinitReturnTypeCell{}() : SortReturnTypeCell{} [format{}("%cinitReturnTypeCell%r"), function{}(), initializer{}(), left{}(), priorities{}(), right{}(), terminals{}("1")]
  symbol LblinitTCell{}(SortMap{}) : SortTCell{} [format{}("%cinitTCell%r %c(%r %1 %c)%r"), function{}(), initializer{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol LblinitTaskCell{}(SortMap{}) : SortTaskCellSet{} [format{}("%cinitTaskCell%r %c(%r %1 %c)%r"), function{}(), initializer{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol LblinitTasksCell{}(SortMap{}) : SortTasksCell{} [format{}("%cinitTasksCell%r %c(%r %1 %c)%r"), function{}(), initializer{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol LblinitTenvCell{}() : SortTenvCell{} [format{}("%cinitTenvCell%r"), function{}(), initializer{}(), left{}(), priorities{}(), right{}(), terminals{}("1")]
  symbol Lblint'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}() : SortType{} [constructor{}(), format{}("%cint%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(5,28,5,33)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), priorities{}(Lbl'Unds'-'-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type'Unds'Types'Unds'Type{}()), right{}(), terminals{}("1")]
  hooked-symbol LblintersectSet'LParUndsCommUndsRParUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(SortSet{}, SortSet{}) : SortSet{} [comm{}(), format{}("%cintersectSet%r %c(%r %1 %c,%r %2 %c)%r"), function{}(), functional{}(), hook{}("SET.intersection"), klabel{}("intersectSet"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(759,18,759,90)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101"), total{}()]
  symbol LblisBlock{}(SortK{}) : SortBool{} [format{}("%cisBlock%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("Block"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisBlockOrStmtType{}(SortK{}) : SortBool{} [format{}("%cisBlockOrStmtType%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("BlockOrStmtType"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisBool{}(SortK{}) : SortBool{} [format{}("%cisBool%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("Bool"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisCurrEnvVarCell{}(SortK{}) : SortBool{} [format{}("%cisCurrEnvVarCell%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("CurrEnvVarCell"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisCurrEnvVarCellOpt{}(SortK{}) : SortBool{} [format{}("%cisCurrEnvVarCellOpt%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("CurrEnvVarCellOpt"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisExp{}(SortK{}) : SortBool{} [format{}("%cisExp%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("Exp"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisExps{}(SortK{}) : SortBool{} [format{}("%cisExps%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("Exps"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisFloat{}(SortK{}) : SortBool{} [format{}("%cisFloat%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("Float"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisGeneratedCounterCell{}(SortK{}) : SortBool{} [format{}("%cisGeneratedCounterCell%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("GeneratedCounterCell"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisGeneratedCounterCellOpt{}(SortK{}) : SortBool{} [format{}("%cisGeneratedCounterCellOpt%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("GeneratedCounterCellOpt"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisGeneratedTopCell{}(SortK{}) : SortBool{} [format{}("%cisGeneratedTopCell%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("GeneratedTopCell"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisGeneratedTopCellFragment{}(SortK{}) : SortBool{} [format{}("%cisGeneratedTopCellFragment%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("GeneratedTopCellFragment"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisGtenvCell{}(SortK{}) : SortBool{} [format{}("%cisGtenvCell%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("GtenvCell"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisGtenvCellOpt{}(SortK{}) : SortBool{} [format{}("%cisGtenvCellOpt%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("GtenvCellOpt"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisIOError{}(SortK{}) : SortBool{} [format{}("%cisIOError%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("IOError"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisIOFile{}(SortK{}) : SortBool{} [format{}("%cisIOFile%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("IOFile"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisIOInt{}(SortK{}) : SortBool{} [format{}("%cisIOInt%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("IOInt"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisIOString{}(SortK{}) : SortBool{} [format{}("%cisIOString%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("IOString"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisId{}(SortK{}) : SortBool{} [format{}("%cisId%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("Id"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisInt{}(SortK{}) : SortBool{} [format{}("%cisInt%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("Int"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisK{}(SortK{}) : SortBool{} [format{}("%cisK%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("K"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisKCell{}(SortK{}) : SortBool{} [format{}("%cisKCell%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("KCell"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisKCellOpt{}(SortK{}) : SortBool{} [format{}("%cisKCellOpt%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("KCellOpt"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisKConfigVar{}(SortK{}) : SortBool{} [format{}("%cisKConfigVar%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("KConfigVar"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisKItem{}(SortK{}) : SortBool{} [format{}("%cisKItem%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("KItem"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisKResult{}(SortK{}) : SortBool{} [format{}("%cisKResult%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("KResult"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisLValue{}(SortK{}) : SortBool{} [format{}("%cisLValue%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("LValue"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisList{}(SortK{}) : SortBool{} [format{}("%cisList%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("List"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisMap{}(SortK{}) : SortBool{} [format{}("%cisMap%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("Map"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisParam{}(SortK{}) : SortBool{} [format{}("%cisParam%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("Param"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisParams{}(SortK{}) : SortBool{} [format{}("%cisParams%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("Params"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisReturnTypeCell{}(SortK{}) : SortBool{} [format{}("%cisReturnTypeCell%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("ReturnTypeCell"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisReturnTypeCellOpt{}(SortK{}) : SortBool{} [format{}("%cisReturnTypeCellOpt%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("ReturnTypeCellOpt"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisSet{}(SortK{}) : SortBool{} [format{}("%cisSet%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("Set"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisStmt{}(SortK{}) : SortBool{} [format{}("%cisStmt%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("Stmt"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisStream{}(SortK{}) : SortBool{} [format{}("%cisStream%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("Stream"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisString{}(SortK{}) : SortBool{} [format{}("%cisString%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("String"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisTCell{}(SortK{}) : SortBool{} [format{}("%cisTCell%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("TCell"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisTCellFragment{}(SortK{}) : SortBool{} [format{}("%cisTCellFragment%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("TCellFragment"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisTCellOpt{}(SortK{}) : SortBool{} [format{}("%cisTCellOpt%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("TCellOpt"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisTaskCell{}(SortK{}) : SortBool{} [format{}("%cisTaskCell%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("TaskCell"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisTaskCellFragment{}(SortK{}) : SortBool{} [format{}("%cisTaskCellFragment%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("TaskCellFragment"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisTaskCellSet{}(SortK{}) : SortBool{} [format{}("%cisTaskCellSet%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("TaskCellSet"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisTasksCell{}(SortK{}) : SortBool{} [format{}("%cisTasksCell%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("TasksCell"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisTasksCellFragment{}(SortK{}) : SortBool{} [format{}("%cisTasksCellFragment%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("TasksCellFragment"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisTasksCellOpt{}(SortK{}) : SortBool{} [format{}("%cisTasksCellOpt%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("TasksCellOpt"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisTenvCell{}(SortK{}) : SortBool{} [format{}("%cisTenvCell%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("TenvCell"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisTenvCellOpt{}(SortK{}) : SortBool{} [format{}("%cisTenvCellOpt%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("TenvCellOpt"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisType{}(SortK{}) : SortBool{} [format{}("%cisType%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("Type"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisTypes{}(SortK{}) : SortBool{} [format{}("%cisTypes%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("Types"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol Lbljoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(SortExp{}) : SortStmt{} [constructor{}(), format{}("%cjoin%r %1 %c;%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(59,19,59,68)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), priorities{}(), right{}(), strict{}(""), terminals{}("101")]
  hooked-symbol Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map{}(SortMap{}) : SortSet{} [format{}("%ckeys%r %c(%r %1 %c)%r"), function{}(), functional{}(), hook{}("MAP.keys"), klabel{}("keys"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(341,18,341,82)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  hooked-symbol Lblkeys'Unds'list'LParUndsRParUnds'MAP'Unds'List'Unds'Map{}(SortMap{}) : SortList{} [format{}("%ckeys_list%r %c(%r %1 %c)%r"), function{}(), hook{}("MAP.keys_list"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(349,19,349,80)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  hooked-symbol LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(SortString{}) : SortInt{} [format{}("%clengthString%r %c(%r %1 %c)%r"), function{}(), functional{}(), hook{}("STRING.length"), klabel{}("lengthString"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1709,18,1709,80)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  hooked-symbol Lbllog2Int'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(SortInt{}) : SortInt{} [format{}("%clog2Int%r %c(%r %1 %c)%r"), function{}(), hook{}("INT.log2"), klabel{}("log2Int"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1280,18,1280,75)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lblltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp{}(SortExp{}) : SortExp{} [constructor{}(), format{}("%cltype%r %c(%r %1 %c)%r"), functional{}(), injective{}(), klabel{}("ltype"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(228,18,228,28)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), priorities{}(), right{}(), terminals{}("1101")]
  hooked-symbol LblmakeList'LParUndsCommUndsRParUnds'LIST'Unds'List'Unds'Int'Unds'KItem{}(SortInt{}, SortKItem{}) : SortList{} [format{}("%cmakeList%r %c(... %r length: %1 %c,%r value: %2 %c)%r"), function{}(), hook{}("LIST.make"), klabel{}("makeList"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(974,19,974,82)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101")]
  hooked-symbol LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortInt{} [format{}("%cmaxInt%r %c(%r %1 %c,%r %2 %c)%r"), function{}(), functional{}(), hook{}("INT.max"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1261,18,1261,114)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), smt-hook{}("(ite (< #1 #2) #2 #1)"), terminals{}("110101"), total{}()]
  hooked-symbol LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortInt{} [format{}("%cminInt%r %c(%r %1 %c,%r %2 %c)%r"), function{}(), functional{}(), hook{}("INT.min"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1260,18,1260,114)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), smt-hook{}("(ite (< #1 #2) #1 #2)"), terminals{}("110101"), total{}()]
  symbol LblmkDecls'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Stmt'Unds'Params{}(SortParams{}) : SortStmt{} [format{}("%cmkDecls%r %c(%r %1 %c)%r"), function{}(), klabel{}("mkDecls"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(216,19,216,46)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), priorities{}(), right{}(), terminals{}("1101")]
  hooked-symbol LblnewUUID'Unds'STRING-COMMON'Unds'String{}() : SortString{} [format{}("%cnewUUID%r"), function{}(), hook{}("STRING.uuid"), impure{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1861,21,1861,68)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1")]
  symbol LblnoCurrEnvVarCell{}() : SortCurrEnvVarCellOpt{} [cellOptAbsent{}("CurrEnvVarCell"), constructor{}(), format{}("%cnoCurrEnvVarCell%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1")]
  symbol LblnoGeneratedCounterCell{}() : SortGeneratedCounterCellOpt{} [cellOptAbsent{}("GeneratedCounterCell"), constructor{}(), format{}("%cnoGeneratedCounterCell%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1")]
  symbol LblnoGtenvCell{}() : SortGtenvCellOpt{} [cellOptAbsent{}("GtenvCell"), constructor{}(), format{}("%cnoGtenvCell%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1")]
  symbol LblnoKCell{}() : SortKCellOpt{} [cellOptAbsent{}("KCell"), constructor{}(), format{}("%cnoKCell%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1")]
  symbol LblnoReturnTypeCell{}() : SortReturnTypeCellOpt{} [cellOptAbsent{}("ReturnTypeCell"), constructor{}(), format{}("%cnoReturnTypeCell%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1")]
  symbol LblnoTCell{}() : SortTCellOpt{} [cellOptAbsent{}("TCell"), constructor{}(), format{}("%cnoTCell%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1")]
  symbol LblnoTasksCell{}() : SortTasksCellOpt{} [cellOptAbsent{}("TasksCell"), constructor{}(), format{}("%cnoTasksCell%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1")]
  symbol LblnoTenvCell{}() : SortTenvCellOpt{} [cellOptAbsent{}("TenvCell"), constructor{}(), format{}("%cnoTenvCell%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1")]
  hooked-symbol LblnotBool'Unds'{}(SortBool{}) : SortBool{} [format{}("%cnotBool%r %1"), function{}(), functional{}(), group{}("boolOperation"), hook{}("BOOL.not"), klabel{}("notBool_"), latex{}("\\neg_{\\scriptstyle\\it Bool}{#1}"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1100,19,1100,179)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(Lbl'Unds'orElseBool'Unds'{}(),Lbl'Unds'orBool'Unds'{}(),Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'Unds'andThenBool'Unds'{}(),Lbl'Unds'impliesBool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}(),Lbl'Unds'andBool'Unds'{}(),Lbl'Unds'xorBool'Unds'{}()), right{}(), smt-hook{}("not"), symbol'Kywd'{}(), terminals{}("10"), total{}()]
  hooked-symbol LblordChar'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(SortString{}) : SortInt{} [format{}("%cordChar%r %c(%r %1 %c)%r"), function{}(), hook{}("STRING.ord"), klabel{}("ordChar"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1719,18,1719,70)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lblprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps{}(SortExps{}) : SortStmt{} [constructor{}(), format{}("%cprint%r %c(%r %1 %c)%r %c;%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(56,19,56,68)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), priorities{}(), right{}(), strict{}(""), terminals{}("11011")]
  symbol Lblproject'ColnHash'tempFile'Coln'fd{}(SortIOFile{}) : SortInt{} [format{}("%cfd%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'ColnHash'tempFile'Coln'path{}(SortIOFile{}) : SortString{} [format{}("%cpath%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'ColnHash'unknownIOError'Coln'errno{}(SortIOError{}) : SortInt{} [format{}("%cerrno%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'Block{}(SortK{}) : SortBlock{} [format{}("%cproject:Block%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'BlockOrStmtType{}(SortK{}) : SortBlockOrStmtType{} [format{}("%cproject:BlockOrStmtType%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'Bool{}(SortK{}) : SortBool{} [format{}("%cproject:Bool%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'CurrEnvVarCell{}(SortK{}) : SortCurrEnvVarCell{} [format{}("%cproject:CurrEnvVarCell%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'CurrEnvVarCellOpt{}(SortK{}) : SortCurrEnvVarCellOpt{} [format{}("%cproject:CurrEnvVarCellOpt%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'Exp{}(SortK{}) : SortExp{} [format{}("%cproject:Exp%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'Exps{}(SortK{}) : SortExps{} [format{}("%cproject:Exps%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'Float{}(SortK{}) : SortFloat{} [format{}("%cproject:Float%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'GeneratedCounterCell{}(SortK{}) : SortGeneratedCounterCell{} [format{}("%cproject:GeneratedCounterCell%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'GeneratedCounterCellOpt{}(SortK{}) : SortGeneratedCounterCellOpt{} [format{}("%cproject:GeneratedCounterCellOpt%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'GeneratedTopCell{}(SortK{}) : SortGeneratedTopCell{} [format{}("%cproject:GeneratedTopCell%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'GeneratedTopCellFragment{}(SortK{}) : SortGeneratedTopCellFragment{} [format{}("%cproject:GeneratedTopCellFragment%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'GtenvCell{}(SortK{}) : SortGtenvCell{} [format{}("%cproject:GtenvCell%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'GtenvCellOpt{}(SortK{}) : SortGtenvCellOpt{} [format{}("%cproject:GtenvCellOpt%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'IOError{}(SortK{}) : SortIOError{} [format{}("%cproject:IOError%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'IOFile{}(SortK{}) : SortIOFile{} [format{}("%cproject:IOFile%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'IOInt{}(SortK{}) : SortIOInt{} [format{}("%cproject:IOInt%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'IOString{}(SortK{}) : SortIOString{} [format{}("%cproject:IOString%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'Id{}(SortK{}) : SortId{} [format{}("%cproject:Id%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'Int{}(SortK{}) : SortInt{} [format{}("%cproject:Int%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'K{}(SortK{}) : SortK{} [format{}("%cproject:K%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'KCell{}(SortK{}) : SortKCell{} [format{}("%cproject:KCell%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'KCellOpt{}(SortK{}) : SortKCellOpt{} [format{}("%cproject:KCellOpt%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'KItem{}(SortK{}) : SortKItem{} [format{}("%cproject:KItem%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'KResult{}(SortK{}) : SortKResult{} [format{}("%cproject:KResult%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'LValue{}(SortK{}) : SortLValue{} [format{}("%cproject:LValue%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'List{}(SortK{}) : SortList{} [format{}("%cproject:List%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'Map{}(SortK{}) : SortMap{} [format{}("%cproject:Map%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'Param{}(SortK{}) : SortParam{} [format{}("%cproject:Param%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'Params{}(SortK{}) : SortParams{} [format{}("%cproject:Params%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'ReturnTypeCell{}(SortK{}) : SortReturnTypeCell{} [format{}("%cproject:ReturnTypeCell%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'ReturnTypeCellOpt{}(SortK{}) : SortReturnTypeCellOpt{} [format{}("%cproject:ReturnTypeCellOpt%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'Set{}(SortK{}) : SortSet{} [format{}("%cproject:Set%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'Stmt{}(SortK{}) : SortStmt{} [format{}("%cproject:Stmt%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'Stream{}(SortK{}) : SortStream{} [format{}("%cproject:Stream%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'String{}(SortK{}) : SortString{} [format{}("%cproject:String%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'TCell{}(SortK{}) : SortTCell{} [format{}("%cproject:TCell%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'TCellFragment{}(SortK{}) : SortTCellFragment{} [format{}("%cproject:TCellFragment%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'TCellOpt{}(SortK{}) : SortTCellOpt{} [format{}("%cproject:TCellOpt%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'TaskCell{}(SortK{}) : SortTaskCell{} [format{}("%cproject:TaskCell%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'TaskCellFragment{}(SortK{}) : SortTaskCellFragment{} [format{}("%cproject:TaskCellFragment%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'TaskCellSet{}(SortK{}) : SortTaskCellSet{} [format{}("%cproject:TaskCellSet%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'TasksCell{}(SortK{}) : SortTasksCell{} [format{}("%cproject:TasksCell%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'TasksCellFragment{}(SortK{}) : SortTasksCellFragment{} [format{}("%cproject:TasksCellFragment%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'TasksCellOpt{}(SortK{}) : SortTasksCellOpt{} [format{}("%cproject:TasksCellOpt%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'TenvCell{}(SortK{}) : SortTenvCell{} [format{}("%cproject:TenvCell%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'TenvCellOpt{}(SortK{}) : SortTenvCellOpt{} [format{}("%cproject:TenvCellOpt%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'Type{}(SortK{}) : SortType{} [format{}("%cproject:Type%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'Types{}(SortK{}) : SortTypes{} [format{}("%cproject:Types%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  hooked-symbol LblrandInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(SortInt{}) : SortInt{} [format{}("%crandInt%r %c(%r %1 %c)%r"), function{}(), hook{}("INT.rand"), impure{}(), klabel{}("randInt"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1328,18,1328,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lblread'LParRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp{}() : SortExp{} [constructor{}(), format{}("%cread%r %c(%r %c)%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(23,18,23,32)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), priorities{}(Lblspawn'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(), terminals{}("111")]
  symbol Lblrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(SortExp{}) : SortStmt{} [constructor{}(), format{}("%crelease%r %1 %c;%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(61,19,61,68)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), priorities{}(), right{}(), strict{}(""), terminals{}("101")]
  hooked-symbol LblremoveAll'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Set{}(SortMap{}, SortSet{}) : SortMap{} [format{}("%cremoveAll%r %c(%r %1 %c,%r %2 %c)%r"), function{}(), functional{}(), hook{}("MAP.removeAll"), klabel{}("removeAll"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(333,18,333,87)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101"), total{}()]
  symbol Lblrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(SortExp{}) : SortStmt{} [constructor{}(), format{}("%crendezvous%r %1 %c;%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(62,19,62,68)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), priorities{}(), right{}(), strict{}(""), terminals{}("101")]
  hooked-symbol Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int{}(SortString{}, SortString{}, SortString{}, SortInt{}) : SortString{} [format{}("%creplace%r %c(... %r haystack: %1 %c,%r needle: %2 %c,%r replacement: %3 %c,%r times: %4 %c)%r"), function{}(), hook{}("STRING.replace"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1829,21,1829,146)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101010101")]
  hooked-symbol LblreplaceAll'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String{}(SortString{}, SortString{}, SortString{}) : SortString{} [format{}("%creplaceAll%r %c(... %r haystack: %1 %c,%r needle: %2 %c,%r replacement: %3 %c)%r"), function{}(), functional{}(), hook{}("STRING.replaceAll"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1828,21,1828,149)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101"), total{}()]
  hooked-symbol LblreplaceFirst'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String{}(SortString{}, SortString{}, SortString{}) : SortString{} [format{}("%creplaceFirst%r %c(... %r haystack: %1 %c,%r needle: %2 %c,%r replacement: %3 %c)%r"), function{}(), functional{}(), hook{}("STRING.replaceFirst"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1830,21,1830,151)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101"), total{}()]
  symbol Lblreturn'SClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt{}() : SortStmt{} [constructor{}(), format{}("%creturn%r %c;%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(55,19,55,31)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), priorities{}(), right{}(), terminals{}("11")]
  symbol Lblreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(SortExp{}) : SortStmt{} [constructor{}(), format{}("%creturn%r %1 %c;%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(54,19,54,68)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), priorities{}(), right{}(), strict{}(""), terminals{}("101")]
  hooked-symbol LblrfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(SortString{}, SortString{}, SortInt{}) : SortInt{} [format{}("%crfindChar%r %c(... %r haystack: %1 %c,%r needles: %2 %c,%r index: %3 %c)%r"), function{}(), hook{}("STRING.rfindChar"), klabel{}("rfindChar"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1756,18,1756,117)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101")]
  hooked-symbol LblrfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(SortString{}, SortString{}, SortInt{}) : SortInt{} [format{}("%crfindString%r %c(... %r haystack: %1 %c,%r needle: %2 %c,%r index: %3 %c)%r"), function{}(), hook{}("STRING.rfind"), klabel{}("rfindString"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1745,18,1745,112)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101")]
  hooked-symbol LblsignExtendBitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}, SortInt{}) : SortInt{} [format{}("%csignExtendBitRangeInt%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}(), hook{}("INT.signExtendBitRange"), klabel{}("signExtendBitRangeInt"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1295,18,1295,113)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101")]
  hooked-symbol Lblsize'LParUndsRParUnds'LIST'Unds'Int'Unds'List{}(SortList{}) : SortInt{} [format{}("%csize%r %c(%r %1 %c)%r"), function{}(), functional{}(), hook{}("LIST.size"), klabel{}("sizeList"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1020,18,1020,117)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), smtlib{}("smt_seq_len"), terminals{}("1101"), total{}()]
  hooked-symbol Lblsize'LParUndsRParUnds'MAP'Unds'Int'Unds'Map{}(SortMap{}) : SortInt{} [format{}("%csize%r %c(%r %1 %c)%r"), function{}(), functional{}(), hook{}("MAP.size"), klabel{}("sizeMap"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(373,18,373,99)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  hooked-symbol Lblsize'LParUndsRParUnds'SET'Unds'Int'Unds'Set{}(SortSet{}) : SortInt{} [format{}("%csize%r %c(%r %1 %c)%r"), function{}(), functional{}(), hook{}("SET.size"), klabel{}("size"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(794,18,794,76)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblsizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(SortExp{}) : SortExp{} [constructor{}(), format{}("%csizeOf%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(22,18,22,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), priorities{}(Lblspawn'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(), strict{}(""), terminals{}("1101")]
  symbol Lblspawn'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(SortBlock{}) : SortExp{} [constructor{}(), format{}("%cspawn%r %1"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(42,18,42,31)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), priorities{}(Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(), terminals{}("10")]
  hooked-symbol LblsrandInt'LParUndsRParUnds'INT-COMMON'Unds'K'Unds'Int{}(SortInt{}) : SortK{} [format{}("%csrandInt%r %c(%r %1 %c)%r"), function{}(), hook{}("INT.srand"), impure{}(), klabel{}("srandInt"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1329,16,1329,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lblstmt'Unds'SIMPLE-TYPED-STATIC'Unds'BlockOrStmtType{}() : SortBlockOrStmtType{} [constructor{}(), format{}("%cstmt%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(80,40,80,46)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), priorities{}(), right{}(), terminals{}("1")]
  symbol Lblstring'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}() : SortType{} [constructor{}(), format{}("%cstring%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(5,45,5,53)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), priorities{}(Lbl'Unds'-'-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type'Unds'Types'Unds'Type{}()), right{}(), terminals{}("1")]
  hooked-symbol LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(SortString{}, SortInt{}, SortInt{}) : SortString{} [format{}("%csubstrString%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}(), functional{}(), hook{}("STRING.substr"), klabel{}("substrString"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1734,21,1734,117)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101"), total{}()]
  symbol Lblthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(SortExp{}) : SortStmt{} [constructor{}(), format{}("%cthrow%r %1 %c;%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(58,19,58,68)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), priorities{}(), right{}(), strict{}(""), terminals{}("101")]
  symbol Lbltry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block{}(SortBlock{}, SortParam{}, SortBlock{}) : SortStmt{} [constructor{}(), format{}("%ctry%r %1 %ccatch%r %c(%r %2 %c)%r %3"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(57,19,57,71)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), priorities{}(), right{}(), strict{}("1"), terminals{}("1011010")]
  hooked-symbol LblupdateList'LParUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'List{}(SortList{}, SortInt{}, SortList{}) : SortList{} [format{}("%cupdateList%r %c(... %r dest: %1 %c,%r index: %2 %c,%r src: %3 %c)%r"), function{}(), hook{}("LIST.updateAll"), klabel{}("updateList"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(984,19,984,97)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101")]
  hooked-symbol LblupdateMap'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Map{}(SortMap{}, SortMap{}) : SortMap{} [format{}("%cupdateMap%r %c(%r %1 %c,%r %2 %c)%r"), function{}(), functional{}(), hook{}("MAP.updateAll"), klabel{}("updateMap"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(324,18,324,87)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101"), total{}()]
  hooked-symbol Lblvalues'LParUndsRParUnds'MAP'Unds'List'Unds'Map{}(SortMap{}) : SortList{} [format{}("%cvalues%r %c(%r %1 %c)%r"), function{}(), hook{}("MAP.values"), klabel{}("values"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(365,19,365,77)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lblvoid'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}() : SortType{} [constructor{}(), format{}("%cvoid%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(5,19,5,25)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), priorities{}(Lbl'Unds'-'-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type'Unds'Types'Unds'Type{}()), right{}(), terminals{}("1")]
  symbol Lblwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(SortExp{}, SortBlock{}) : SortStmt{} [constructor{}(), format{}("%cwhile%r %c(%r %1 %c)%r %2"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(52,19,52,68)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), priorities{}(), right{}(), strict{}(""), terminals{}("11010")]
  symbol Lbl'LBraUndsRBraUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Block'Unds'Stmt{}(SortStmt{}) : SortBlock{} [constructor{}(), format{}("%c{%r %1 %c}%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(46,19,46,31)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), priorities{}(), right{}(), terminals{}("101")]
  symbol Lbl'LBraRBraUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Block{}() : SortBlock{} [constructor{}(), format{}("%c{%r %c}%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(45,20,45,27)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), priorities{}(), right{}(), terminals{}("11")]
  hooked-symbol Lbl'Tild'Int'Unds'{}(SortInt{}) : SortInt{} [format{}("%c~Int%r %1"), function{}(), functional{}(), hook{}("INT.not"), klabel{}("~Int_"), latex{}("\\mathop{\\sim_{\\scriptstyle\\it Int}}{#1}"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1228,18,1228,168)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds'divInt'Unds'{}(),Lbl'UndsPerc'Int'Unds'{}(),Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsSlsh'Int'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'UndsXor-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsStar'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}(),Lbl'Unds'modInt'Unds'{}(),Lbl'UndsXor-Perc'Int'UndsUnds'{}(),Lbl'Unds'-Int'Unds'{}()), right{}(), smtlib{}("notInt"), symbol'Kywd'{}(), terminals{}("10"), total{}()]

// generated axioms
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortIOString{}, SortKItem{}} (From:SortIOString{}))) [subsort{SortIOString{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortString{}, SortKItem{}} (From:SortString{}))) [subsort{SortString{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortCurrEnvVarCell{}, SortKItem{}} (From:SortCurrEnvVarCell{}))) [subsort{SortCurrEnvVarCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTCell{}, SortKItem{}} (From:SortTCell{}))) [subsort{SortTCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCurrEnvVarCellOpt{}, \equals{SortCurrEnvVarCellOpt{}, R} (Val:SortCurrEnvVarCellOpt{}, inj{SortCurrEnvVarCell{}, SortCurrEnvVarCellOpt{}} (From:SortCurrEnvVarCell{}))) [subsort{SortCurrEnvVarCell{}, SortCurrEnvVarCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortType{}, SortKItem{}} (From:SortType{}))) [subsort{SortType{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortKCellOpt{}, SortKItem{}} (From:SortKCellOpt{}))) [subsort{SortKCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTasksCellOpt{}, SortKItem{}} (From:SortTasksCellOpt{}))) [subsort{SortTasksCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortParams{}, SortKItem{}} (From:SortParams{}))) [subsort{SortParams{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortBlockOrStmtType{}, SortKItem{}} (From:SortBlockOrStmtType{}))) [subsort{SortBlockOrStmtType{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGeneratedCounterCellOpt{}, SortKItem{}} (From:SortGeneratedCounterCellOpt{}))) [subsort{SortGeneratedCounterCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortKResult{}, SortKItem{}} (From:SortKResult{}))) [subsort{SortKResult{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortGeneratedCounterCellOpt{}, \equals{SortGeneratedCounterCellOpt{}, R} (Val:SortGeneratedCounterCellOpt{}, inj{SortGeneratedCounterCell{}, SortGeneratedCounterCellOpt{}} (From:SortGeneratedCounterCell{}))) [subsort{SortGeneratedCounterCell{}, SortGeneratedCounterCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortReturnTypeCell{}, SortKItem{}} (From:SortReturnTypeCell{}))) [subsort{SortReturnTypeCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortKCell{}, SortKItem{}} (From:SortKCell{}))) [subsort{SortKCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTCellOpt{}, SortKItem{}} (From:SortTCellOpt{}))) [subsort{SortTCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortCurrEnvVarCellOpt{}, SortKItem{}} (From:SortCurrEnvVarCellOpt{}))) [subsort{SortCurrEnvVarCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKCellOpt{}, \equals{SortKCellOpt{}, R} (Val:SortKCellOpt{}, inj{SortKCell{}, SortKCellOpt{}} (From:SortKCell{}))) [subsort{SortKCell{}, SortKCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortSet{}, SortKItem{}} (From:SortSet{}))) [subsort{SortSet{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortIOError{}, SortKItem{}} (From:SortIOError{}))) [subsort{SortIOError{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTypes{}, SortKItem{}} (From:SortTypes{}))) [subsort{SortTypes{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortBlock{}, SortKItem{}} (From:SortBlock{}))) [subsort{SortBlock{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGeneratedCounterCell{}, SortKItem{}} (From:SortGeneratedCounterCell{}))) [subsort{SortGeneratedCounterCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortTCellOpt{}, \equals{SortTCellOpt{}, R} (Val:SortTCellOpt{}, inj{SortTCell{}, SortTCellOpt{}} (From:SortTCell{}))) [subsort{SortTCell{}, SortTCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortTaskCellSet{}, \equals{SortTaskCellSet{}, R} (Val:SortTaskCellSet{}, inj{SortTaskCell{}, SortTaskCellSet{}} (From:SortTaskCell{}))) [subsort{SortTaskCell{}, SortTaskCellSet{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTCellFragment{}, SortKItem{}} (From:SortTCellFragment{}))) [subsort{SortTCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTasksCellFragment{}, SortKItem{}} (From:SortTasksCellFragment{}))) [subsort{SortTasksCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGtenvCell{}, SortKItem{}} (From:SortGtenvCell{}))) [subsort{SortGtenvCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortExps{}, SortKItem{}} (From:SortExps{}))) [subsort{SortExps{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortReturnTypeCellOpt{}, SortKItem{}} (From:SortReturnTypeCellOpt{}))) [subsort{SortReturnTypeCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGtenvCellOpt{}, SortKItem{}} (From:SortGtenvCellOpt{}))) [subsort{SortGtenvCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortStream{}, SortKItem{}} (From:SortStream{}))) [subsort{SortStream{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortIOFile{}, SortKItem{}} (From:SortIOFile{}))) [subsort{SortIOFile{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGeneratedTopCell{}, SortKItem{}} (From:SortGeneratedTopCell{}))) [subsort{SortGeneratedTopCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortLValue{}, SortKItem{}} (From:SortLValue{}))) [subsort{SortLValue{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortIOInt{}, SortKItem{}} (From:SortIOInt{}))) [subsort{SortIOInt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTaskCell{}, SortKItem{}} (From:SortTaskCell{}))) [subsort{SortTaskCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortReturnTypeCellOpt{}, \equals{SortReturnTypeCellOpt{}, R} (Val:SortReturnTypeCellOpt{}, inj{SortReturnTypeCell{}, SortReturnTypeCellOpt{}} (From:SortReturnTypeCell{}))) [subsort{SortReturnTypeCell{}, SortReturnTypeCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTasksCell{}, SortKItem{}} (From:SortTasksCell{}))) [subsort{SortTasksCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortList{}, SortKItem{}} (From:SortList{}))) [subsort{SortList{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTaskCellSet{}, SortKItem{}} (From:SortTaskCellSet{}))) [subsort{SortTaskCellSet{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortId{}, SortKItem{}} (From:SortId{}))) [subsort{SortId{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFloat{}, SortKItem{}} (From:SortFloat{}))) [subsort{SortFloat{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortBool{}, SortKItem{}} (From:SortBool{}))) [subsort{SortBool{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortTasksCellOpt{}, \equals{SortTasksCellOpt{}, R} (Val:SortTasksCellOpt{}, inj{SortTasksCell{}, SortTasksCellOpt{}} (From:SortTasksCell{}))) [subsort{SortTasksCell{}, SortTasksCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortParam{}, SortKItem{}} (From:SortParam{}))) [subsort{SortParam{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTenvCell{}, SortKItem{}} (From:SortTenvCell{}))) [subsort{SortTenvCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortInt{}, SortKItem{}} (From:SortInt{}))) [subsort{SortInt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGeneratedTopCellFragment{}, SortKItem{}} (From:SortGeneratedTopCellFragment{}))) [subsort{SortGeneratedTopCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTaskCellFragment{}, SortKItem{}} (From:SortTaskCellFragment{}))) [subsort{SortTaskCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortExp{}, SortKItem{}} (From:SortExp{}))) [subsort{SortExp{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortStmt{}, SortKItem{}} (From:SortStmt{}))) [subsort{SortStmt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMap{}, SortKItem{}} (From:SortMap{}))) [subsort{SortMap{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortTenvCellOpt{}, \equals{SortTenvCellOpt{}, R} (Val:SortTenvCellOpt{}, inj{SortTenvCell{}, SortTenvCellOpt{}} (From:SortTenvCell{}))) [subsort{SortTenvCell{}, SortTenvCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTenvCellOpt{}, SortKItem{}} (From:SortTenvCellOpt{}))) [subsort{SortTenvCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortGtenvCellOpt{}, \equals{SortGtenvCellOpt{}, R} (Val:SortGtenvCellOpt{}, inj{SortGtenvCell{}, SortGtenvCellOpt{}} (From:SortGtenvCell{}))) [subsort{SortGtenvCell{}, SortGtenvCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, inj{SortInt{}, SortExp{}} (From:SortInt{}))) [subsort{SortInt{}, SortExp{}}()] // subsort
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, inj{SortBool{}, SortExp{}} (From:SortBool{}))) [subsort{SortBool{}, SortExp{}}()] // subsort
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, inj{SortString{}, SortExp{}} (From:SortString{}))) [subsort{SortString{}, SortExp{}}()] // subsort
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, inj{SortId{}, SortExp{}} (From:SortId{}))) [subsort{SortId{}, SortExp{}}()] // subsort
  axiom{R} \exists{R} (Val:SortLValue{}, \equals{SortLValue{}, R} (Val:SortLValue{}, inj{SortId{}, SortLValue{}} (From:SortId{}))) [subsort{SortId{}, SortLValue{}}()] // subsort
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, inj{SortLValue{}, SortExp{}} (From:SortLValue{}))) [subsort{SortLValue{}, SortExp{}}()] // subsort
  axiom{R} \exists{R} (Val:SortIOInt{}, \equals{SortIOInt{}, R} (Val:SortIOInt{}, inj{SortInt{}, SortIOInt{}} (From:SortInt{}))) [subsort{SortInt{}, SortIOInt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortIOInt{}, \equals{SortIOInt{}, R} (Val:SortIOInt{}, inj{SortIOError{}, SortIOInt{}} (From:SortIOError{}))) [subsort{SortIOError{}, SortIOInt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortIOString{}, \equals{SortIOString{}, R} (Val:SortIOString{}, inj{SortString{}, SortIOString{}} (From:SortString{}))) [subsort{SortString{}, SortIOString{}}()] // subsort
  axiom{R} \exists{R} (Val:SortIOString{}, \equals{SortIOString{}, R} (Val:SortIOString{}, inj{SortIOError{}, SortIOString{}} (From:SortIOError{}))) [subsort{SortIOError{}, SortIOString{}}()] // subsort
  axiom{R} \exists{R} (Val:SortIOFile{}, \equals{SortIOFile{}, R} (Val:SortIOFile{}, inj{SortIOError{}, SortIOFile{}} (From:SortIOError{}))) [subsort{SortIOError{}, SortIOFile{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortKConfigVar{}, SortKItem{}} (From:SortKConfigVar{}))) [subsort{SortKConfigVar{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, inj{SortBlock{}, SortStmt{}} (From:SortBlock{}))) [subsort{SortBlock{}, SortStmt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, inj{SortType{}, SortExp{}} (From:SortType{}))) [subsort{SortType{}, SortExp{}}()] // subsort
  axiom{R} \exists{R} (Val:SortExps{}, \equals{SortExps{}, R} (Val:SortExps{}, inj{SortTypes{}, SortExps{}} (From:SortTypes{}))) [subsort{SortTypes{}, SortExps{}}()] // subsort
  axiom{R} \exists{R} (Val:SortType{}, \equals{SortType{}, R} (Val:SortType{}, inj{SortBlockOrStmtType{}, SortType{}} (From:SortBlockOrStmtType{}))) [subsort{SortBlockOrStmtType{}, SortType{}}()] // subsort
  axiom{R} \exists{R} (Val:SortBlock{}, \equals{SortBlock{}, R} (Val:SortBlock{}, inj{SortBlockOrStmtType{}, SortBlock{}} (From:SortBlockOrStmtType{}))) [subsort{SortBlockOrStmtType{}, SortBlock{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKResult{}, \equals{SortKResult{}, R} (Val:SortKResult{}, inj{SortType{}, SortKResult{}} (From:SortType{}))) [subsort{SortType{}, SortKResult{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKResult{}, \equals{SortKResult{}, R} (Val:SortKResult{}, inj{SortTypes{}, SortKResult{}} (From:SortTypes{}))) [subsort{SortTypes{}, SortKResult{}}()] // subsort
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(K0:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{})), Lbl'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblread'LParRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), LblsizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblspawn'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'E2BIG{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EACCES{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EADDRINUSE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EADDRNOTAVAIL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EAFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EAGAIN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EALREADY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EBADF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EBUSY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ECHILD{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EACCES{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EADDRINUSE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EADDRNOTAVAIL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EAFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EAGAIN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EALREADY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EBADF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EBUSY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ECHILD{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EADDRINUSE{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EADDRNOTAVAIL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EAFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EAGAIN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EALREADY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EBADF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EBUSY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ECHILD{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EADDRNOTAVAIL{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EAFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EAGAIN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EALREADY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EBADF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EBUSY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ECHILD{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EAFNOSUPPORT{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EAGAIN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EALREADY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EBADF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EBUSY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ECHILD{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EAGAIN{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EALREADY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EBADF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EBUSY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ECHILD{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EALREADY{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EBADF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EBUSY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ECHILD{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EBADF{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EBUSY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ECHILD{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EBUSY{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ECHILD{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ECHILD{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ECONNABORTED{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ECONNREFUSED{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ECONNRESET{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EDEADLK{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EDESTADDRREQ{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EDOM{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EEXIST{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EFAULT{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EFBIG{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EHOSTDOWN{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EHOSTUNREACH{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EINPROGRESS{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EINTR{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EINVAL{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EIO{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EISCONN{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EISDIR{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ELOOP{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EMFILE{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EMLINK{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EMSGSIZE{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENAMETOOLONG{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENETDOWN{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENETRESET{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENETUNREACH{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENFILE{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOBUFS{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENODEV{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOENT{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOEXEC{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOLCK{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOMEM{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOPROTOOPT{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOSPC{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOSYS{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOTCONN{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOTDIR{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOTEMPTY{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOTSOCK{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOTTY{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENXIO{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EOF{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EOPNOTSUPP{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EOVERFLOW{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EPERM{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EPFNOSUPPORT{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EPIPE{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EPROTONOSUPPORT{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EPROTOTYPE{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ERANGE{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EROFS{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ESHUTDOWN{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESHUTDOWN{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESHUTDOWN{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESHUTDOWN{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESHUTDOWN{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESHUTDOWN{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESHUTDOWN{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESHUTDOWN{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESHUTDOWN{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ESOCKTNOSUPPORT{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESOCKTNOSUPPORT{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESOCKTNOSUPPORT{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESOCKTNOSUPPORT{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESOCKTNOSUPPORT{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESOCKTNOSUPPORT{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESOCKTNOSUPPORT{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESOCKTNOSUPPORT{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ESPIPE{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESPIPE{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESPIPE{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESPIPE{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESPIPE{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESPIPE{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESPIPE{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ESRCH{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESRCH{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESRCH{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESRCH{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESRCH{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESRCH{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ETIMEDOUT{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ETIMEDOUT{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ETIMEDOUT{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ETIMEDOUT{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ETIMEDOUT{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ETOOMANYREFS{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ETOOMANYREFS{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ETOOMANYREFS{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ETOOMANYREFS{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EWOULDBLOCK{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EWOULDBLOCK{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EWOULDBLOCK{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EXDEV{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EXDEV{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortStream{}, \equals{SortStream{}, R} (Val:SortStream{}, Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortStream{}} (\and{SortStream{}} (Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(X0:SortK{}), Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(Y0:SortK{})), Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStream{}} (\and{SortStream{}} (Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(X0:SortK{}), Lbl'Hash'istream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStream{}} (\and{SortStream{}} (Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(X0:SortK{}), Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStream{}} (\and{SortStream{}} (Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(X0:SortK{}), Lbl'Hash'parseInput'LParUndsCommUndsRParUnds'K-IO'Unds'Stream'Unds'String'Unds'String{}(Y0:SortString{}, Y1:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(K0:SortK{}, K1:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{})), Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}), \and{SortK{}} (X1:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(K0:SortK{}, K1:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{})), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}), \and{SortK{}} (X1:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(K0:SortK{}, K1:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{})), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}), \and{SortK{}} (X1:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(K0:SortK{}, K1:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{})), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}), \and{SortK{}} (X1:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezerltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(K0:SortK{}, K1:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{})), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}), \and{SortK{}} (X1:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R, SortSort} \exists{R} (Val:SortSort, \equals{SortSort, R} (Val:SortSort, Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortSort}(K0:SortBool{}, K1:SortSort, K2:SortSort))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStream{}, \equals{SortStream{}, R} (Val:SortStream{}, Lbl'Hash'istream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortStream{}} (\and{SortStream{}} (Lbl'Hash'istream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(X0:SortInt{}), Lbl'Hash'istream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(Y0:SortInt{})), Lbl'Hash'istream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStream{}} (\and{SortStream{}} (Lbl'Hash'istream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(X0:SortInt{}), Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStream{}} (\and{SortStream{}} (Lbl'Hash'istream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(X0:SortInt{}), Lbl'Hash'parseInput'LParUndsCommUndsRParUnds'K-IO'Unds'Stream'Unds'String'Unds'String{}(Y0:SortString{}, Y1:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortK{}, \equals{SortK{}, R} (Val:SortK{}, Lbl'Hash'log{}(K0:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortK{}, \equals{SortK{}, R} (Val:SortK{}, Lbl'Hash'logToFile{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStream{}, \equals{SortStream{}, R} (Val:SortStream{}, Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortStream{}} (\and{SortStream{}} (Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(X0:SortInt{}), Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(Y0:SortInt{})), Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStream{}} (\and{SortStream{}} (Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(X0:SortInt{}), Lbl'Hash'parseInput'LParUndsCommUndsRParUnds'K-IO'Unds'Stream'Unds'String'Unds'String{}(Y0:SortString{}, Y1:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortStream{}, \equals{SortStream{}, R} (Val:SortStream{}, Lbl'Hash'parseInput'LParUndsCommUndsRParUnds'K-IO'Unds'Stream'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{}\implies{SortStream{}} (\and{SortStream{}} (Lbl'Hash'parseInput'LParUndsCommUndsRParUnds'K-IO'Unds'Stream'Unds'String'Unds'String{}(X0:SortString{}, X1:SortString{}), Lbl'Hash'parseInput'LParUndsCommUndsRParUnds'K-IO'Unds'Stream'Unds'String'Unds'String{}(Y0:SortString{}, Y1:SortString{})), Lbl'Hash'parseInput'LParUndsCommUndsRParUnds'K-IO'Unds'Stream'Unds'String'Unds'String{}(\and{SortString{}} (X0:SortString{}, Y0:SortString{}), \and{SortString{}} (X1:SortString{}, Y1:SortString{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortK{}, \equals{SortK{}, R} (Val:SortK{}, Lbl'Hash'remove'LParUndsRParUnds'K-IO'Unds'K'Unds'String{}(K0:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Hash'stderr'Unds'K-IO'Unds'Int{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Hash'stdin'Unds'K-IO'Unds'Int{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Hash'stdout'Unds'K-IO'Unds'Int{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'systemResult{}(K0:SortInt{}, K1:SortString{}, K2:SortString{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'systemResult{}(X0:SortInt{}, X1:SortString{}, X2:SortString{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{})), Lbl'Hash'systemResult{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}), \and{SortString{}} (X1:SortString{}, Y1:SortString{}), \and{SortString{}} (X2:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortIOFile{}, \equals{SortIOFile{}, R} (Val:SortIOFile{}, Lbl'Hash'tempFile{}(K0:SortString{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortIOFile{}} (\and{SortIOFile{}} (Lbl'Hash'tempFile{}(X0:SortString{}, X1:SortInt{}), Lbl'Hash'tempFile{}(Y0:SortString{}, Y1:SortInt{})), Lbl'Hash'tempFile{}(\and{SortString{}} (X0:SortString{}, Y0:SortString{}), \and{SortInt{}} (X1:SortInt{}, Y1:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortK{}, \equals{SortK{}, R} (Val:SortK{}, Lbl'Hash'trace{}(K0:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortK{}, \equals{SortK{}, R} (Val:SortK{}, Lbl'Hash'traceK{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'unknownIOError{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'unknownIOError{}(X0:SortInt{}), Lbl'Hash'unknownIOError{}(Y0:SortInt{})), Lbl'Hash'unknownIOError{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(K0:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{})), Lbl'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblread'LParRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), LblsizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblspawn'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(K0:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{})), Lbl-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblread'LParRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), LblsizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblspawn'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortCurrEnvVarCell{}, \equals{SortCurrEnvVarCell{}, R} (Val:SortCurrEnvVarCell{}, Lbl'Stop'CurrEnvVarCell{}())) [functional{}()] // functional
  axiom{}\not{SortCurrEnvVarCell{}} (\and{SortCurrEnvVarCell{}} (Lbl'Stop'CurrEnvVarCell{}(), Lbl'-LT-'currEnvVar'-GT-'{}(Y0:SortSet{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortList{}, \equals{SortList{}, R} (Val:SortList{}, Lbl'Stop'List{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExps{}, \equals{SortExps{}, R} (Val:SortExps{}, Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps'QuotRBraUnds'Exps{}())) [functional{}()] // functional
  axiom{}\not{SortExps{}} (\and{SortExps{}} (Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps'QuotRBraUnds'Exps{}(), Lbl'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortParams{}, \equals{SortParams{}, R} (Val:SortParams{}, Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Params'Unds'Param'Unds'Params'QuotRBraUnds'Params{}())) [functional{}()] // functional
  axiom{}\not{SortParams{}} (\and{SortParams{}} (Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Params'Unds'Param'Unds'Params'QuotRBraUnds'Params{}(), Lbl'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Params'Unds'Param'Unds'Params{}(Y0:SortParam{}, Y1:SortParams{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortTypes{}, \equals{SortTypes{}, R} (Val:SortTypes{}, Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}())) [functional{}()] // functional
  axiom{}\not{SortTypes{}} (\and{SortTypes{}} (Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}(), Lbl'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types{}(Y0:SortType{}, Y1:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, Lbl'Stop'Map{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortReturnTypeCell{}, \equals{SortReturnTypeCell{}, R} (Val:SortReturnTypeCell{}, Lbl'Stop'ReturnTypeCell{}())) [functional{}()] // functional
  axiom{}\not{SortReturnTypeCell{}} (\and{SortReturnTypeCell{}} (Lbl'Stop'ReturnTypeCell{}(), Lbl'-LT-'returnType'-GT-'{}(Y0:SortType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, Lbl'Stop'Set{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortTenvCell{}, \equals{SortTenvCell{}, R} (Val:SortTenvCell{}, Lbl'Stop'TenvCell{}())) [functional{}()] // functional
  axiom{}\not{SortTenvCell{}} (\and{SortTenvCell{}} (Lbl'Stop'TenvCell{}(), Lbl'-LT-'tenv'-GT-'{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortTCell{}, \equals{SortTCell{}, R} (Val:SortTCell{}, Lbl'-LT-'T'-GT-'{}(K0:SortTasksCell{}, K1:SortGtenvCell{}))) [functional{}()] // functional
  axiom{}\implies{SortTCell{}} (\and{SortTCell{}} (Lbl'-LT-'T'-GT-'{}(X0:SortTasksCell{}, X1:SortGtenvCell{}), Lbl'-LT-'T'-GT-'{}(Y0:SortTasksCell{}, Y1:SortGtenvCell{})), Lbl'-LT-'T'-GT-'{}(\and{SortTasksCell{}} (X0:SortTasksCell{}, Y0:SortTasksCell{}), \and{SortGtenvCell{}} (X1:SortGtenvCell{}, Y1:SortGtenvCell{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTCellFragment{}, \equals{SortTCellFragment{}, R} (Val:SortTCellFragment{}, Lbl'-LT-'T'-GT-'-fragment{}(K0:SortTasksCellOpt{}, K1:SortGtenvCellOpt{}))) [functional{}()] // functional
  axiom{}\implies{SortTCellFragment{}} (\and{SortTCellFragment{}} (Lbl'-LT-'T'-GT-'-fragment{}(X0:SortTasksCellOpt{}, X1:SortGtenvCellOpt{}), Lbl'-LT-'T'-GT-'-fragment{}(Y0:SortTasksCellOpt{}, Y1:SortGtenvCellOpt{})), Lbl'-LT-'T'-GT-'-fragment{}(\and{SortTasksCellOpt{}} (X0:SortTasksCellOpt{}, Y0:SortTasksCellOpt{}), \and{SortGtenvCellOpt{}} (X1:SortGtenvCellOpt{}, Y1:SortGtenvCellOpt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortCurrEnvVarCell{}, \equals{SortCurrEnvVarCell{}, R} (Val:SortCurrEnvVarCell{}, Lbl'-LT-'currEnvVar'-GT-'{}(K0:SortSet{}))) [functional{}()] // functional
  axiom{}\implies{SortCurrEnvVarCell{}} (\and{SortCurrEnvVarCell{}} (Lbl'-LT-'currEnvVar'-GT-'{}(X0:SortSet{}), Lbl'-LT-'currEnvVar'-GT-'{}(Y0:SortSet{})), Lbl'-LT-'currEnvVar'-GT-'{}(\and{SortSet{}} (X0:SortSet{}, Y0:SortSet{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortGeneratedCounterCell{}, \equals{SortGeneratedCounterCell{}, R} (Val:SortGeneratedCounterCell{}, Lbl'-LT-'generatedCounter'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortGeneratedCounterCell{}} (\and{SortGeneratedCounterCell{}} (Lbl'-LT-'generatedCounter'-GT-'{}(X0:SortInt{}), Lbl'-LT-'generatedCounter'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'generatedCounter'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortGeneratedTopCell{}, \equals{SortGeneratedTopCell{}, R} (Val:SortGeneratedTopCell{}, Lbl'-LT-'generatedTop'-GT-'{}(K0:SortTCell{}, K1:SortGeneratedCounterCell{}))) [functional{}()] // functional
  axiom{}\implies{SortGeneratedTopCell{}} (\and{SortGeneratedTopCell{}} (Lbl'-LT-'generatedTop'-GT-'{}(X0:SortTCell{}, X1:SortGeneratedCounterCell{}), Lbl'-LT-'generatedTop'-GT-'{}(Y0:SortTCell{}, Y1:SortGeneratedCounterCell{})), Lbl'-LT-'generatedTop'-GT-'{}(\and{SortTCell{}} (X0:SortTCell{}, Y0:SortTCell{}), \and{SortGeneratedCounterCell{}} (X1:SortGeneratedCounterCell{}, Y1:SortGeneratedCounterCell{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortGeneratedTopCellFragment{}, \equals{SortGeneratedTopCellFragment{}, R} (Val:SortGeneratedTopCellFragment{}, Lbl'-LT-'generatedTop'-GT-'-fragment{}(K0:SortTCellOpt{}, K1:SortGeneratedCounterCellOpt{}))) [functional{}()] // functional
  axiom{}\implies{SortGeneratedTopCellFragment{}} (\and{SortGeneratedTopCellFragment{}} (Lbl'-LT-'generatedTop'-GT-'-fragment{}(X0:SortTCellOpt{}, X1:SortGeneratedCounterCellOpt{}), Lbl'-LT-'generatedTop'-GT-'-fragment{}(Y0:SortTCellOpt{}, Y1:SortGeneratedCounterCellOpt{})), Lbl'-LT-'generatedTop'-GT-'-fragment{}(\and{SortTCellOpt{}} (X0:SortTCellOpt{}, Y0:SortTCellOpt{}), \and{SortGeneratedCounterCellOpt{}} (X1:SortGeneratedCounterCellOpt{}, Y1:SortGeneratedCounterCellOpt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortGtenvCell{}, \equals{SortGtenvCell{}, R} (Val:SortGtenvCell{}, Lbl'-LT-'gtenv'-GT-'{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortGtenvCell{}} (\and{SortGtenvCell{}} (Lbl'-LT-'gtenv'-GT-'{}(X0:SortMap{}), Lbl'-LT-'gtenv'-GT-'{}(Y0:SortMap{})), Lbl'-LT-'gtenv'-GT-'{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortKCell{}, \equals{SortKCell{}, R} (Val:SortKCell{}, Lbl'-LT-'k'-GT-'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKCell{}} (\and{SortKCell{}} (Lbl'-LT-'k'-GT-'{}(X0:SortK{}), Lbl'-LT-'k'-GT-'{}(Y0:SortK{})), Lbl'-LT-'k'-GT-'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortReturnTypeCell{}, \equals{SortReturnTypeCell{}, R} (Val:SortReturnTypeCell{}, Lbl'-LT-'returnType'-GT-'{}(K0:SortType{}))) [functional{}()] // functional
  axiom{}\implies{SortReturnTypeCell{}} (\and{SortReturnTypeCell{}} (Lbl'-LT-'returnType'-GT-'{}(X0:SortType{}), Lbl'-LT-'returnType'-GT-'{}(Y0:SortType{})), Lbl'-LT-'returnType'-GT-'{}(\and{SortType{}} (X0:SortType{}, Y0:SortType{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTaskCell{}, \equals{SortTaskCell{}, R} (Val:SortTaskCell{}, Lbl'-LT-'task'-GT-'{}(K0:SortKCell{}, K1:SortTenvCell{}, K2:SortCurrEnvVarCell{}, K3:SortReturnTypeCell{}))) [functional{}()] // functional
  axiom{}\implies{SortTaskCell{}} (\and{SortTaskCell{}} (Lbl'-LT-'task'-GT-'{}(X0:SortKCell{}, X1:SortTenvCell{}, X2:SortCurrEnvVarCell{}, X3:SortReturnTypeCell{}), Lbl'-LT-'task'-GT-'{}(Y0:SortKCell{}, Y1:SortTenvCell{}, Y2:SortCurrEnvVarCell{}, Y3:SortReturnTypeCell{})), Lbl'-LT-'task'-GT-'{}(\and{SortKCell{}} (X0:SortKCell{}, Y0:SortKCell{}), \and{SortTenvCell{}} (X1:SortTenvCell{}, Y1:SortTenvCell{}), \and{SortCurrEnvVarCell{}} (X2:SortCurrEnvVarCell{}, Y2:SortCurrEnvVarCell{}), \and{SortReturnTypeCell{}} (X3:SortReturnTypeCell{}, Y3:SortReturnTypeCell{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTaskCellFragment{}, \equals{SortTaskCellFragment{}, R} (Val:SortTaskCellFragment{}, Lbl'-LT-'task'-GT-'-fragment{}(K0:SortKCellOpt{}, K1:SortTenvCellOpt{}, K2:SortCurrEnvVarCellOpt{}, K3:SortReturnTypeCellOpt{}))) [functional{}()] // functional
  axiom{}\implies{SortTaskCellFragment{}} (\and{SortTaskCellFragment{}} (Lbl'-LT-'task'-GT-'-fragment{}(X0:SortKCellOpt{}, X1:SortTenvCellOpt{}, X2:SortCurrEnvVarCellOpt{}, X3:SortReturnTypeCellOpt{}), Lbl'-LT-'task'-GT-'-fragment{}(Y0:SortKCellOpt{}, Y1:SortTenvCellOpt{}, Y2:SortCurrEnvVarCellOpt{}, Y3:SortReturnTypeCellOpt{})), Lbl'-LT-'task'-GT-'-fragment{}(\and{SortKCellOpt{}} (X0:SortKCellOpt{}, Y0:SortKCellOpt{}), \and{SortTenvCellOpt{}} (X1:SortTenvCellOpt{}, Y1:SortTenvCellOpt{}), \and{SortCurrEnvVarCellOpt{}} (X2:SortCurrEnvVarCellOpt{}, Y2:SortCurrEnvVarCellOpt{}), \and{SortReturnTypeCellOpt{}} (X3:SortReturnTypeCellOpt{}, Y3:SortReturnTypeCellOpt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTasksCell{}, \equals{SortTasksCell{}, R} (Val:SortTasksCell{}, Lbl'-LT-'tasks'-GT-'{}(K0:SortTaskCellSet{}))) [functional{}()] // functional
  axiom{}\implies{SortTasksCell{}} (\and{SortTasksCell{}} (Lbl'-LT-'tasks'-GT-'{}(X0:SortTaskCellSet{}), Lbl'-LT-'tasks'-GT-'{}(Y0:SortTaskCellSet{})), Lbl'-LT-'tasks'-GT-'{}(\and{SortTaskCellSet{}} (X0:SortTaskCellSet{}, Y0:SortTaskCellSet{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTasksCellFragment{}, \equals{SortTasksCellFragment{}, R} (Val:SortTasksCellFragment{}, Lbl'-LT-'tasks'-GT-'-fragment{}(K0:SortTaskCellSet{}))) [functional{}()] // functional
  axiom{}\implies{SortTasksCellFragment{}} (\and{SortTasksCellFragment{}} (Lbl'-LT-'tasks'-GT-'-fragment{}(X0:SortTaskCellSet{}), Lbl'-LT-'tasks'-GT-'-fragment{}(Y0:SortTaskCellSet{})), Lbl'-LT-'tasks'-GT-'-fragment{}(\and{SortTaskCellSet{}} (X0:SortTaskCellSet{}, Y0:SortTaskCellSet{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTenvCell{}, \equals{SortTenvCell{}, R} (Val:SortTenvCell{}, Lbl'-LT-'tenv'-GT-'{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortTenvCell{}} (\and{SortTenvCell{}} (Lbl'-LT-'tenv'-GT-'{}(X0:SortMap{}), Lbl'-LT-'tenv'-GT-'{}(Y0:SortMap{})), Lbl'-LT-'tenv'-GT-'{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblBool2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Bool{}(K0:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblFloat2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Float{}(K0:SortFloat{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblId2String'LParUndsRParUnds'ID-COMMON'Unds'String'Unds'Id{}(K0:SortId{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblInt2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortList{}, \equals{SortList{}, R} (Val:SortList{}, LblListItem{}(K0:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, LblMap'Coln'update{}(K0:SortMap{}, K1:SortKItem{}, K2:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, LblSet'Coln'difference{}(K0:SortSet{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblSet'Coln'in{}(K0:SortKItem{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, LblSetItem{}(K0:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortId{}, \equals{SortId{}, R} (Val:SortId{}, LblString2Id'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'String{}(K0:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'LParRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), LblsizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblspawn'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'LParRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), LblsizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblspawn'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'LParRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), LblsizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblspawn'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'UndsAnd-'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(K0:SortExp{}, K1:SortExps{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{})), Lbl'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExps{}} (X1:SortExps{}, Y1:SortExps{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lblltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lblread'LParRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), LblsizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lblspawn'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'UndsStar'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'LParRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), LblsizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblspawn'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'UndsPlus'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'LParRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), LblsizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblspawn'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortExps{}, \equals{SortExps{}, R} (Val:SortExps{}, Lbl'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(K0:SortExp{}, K1:SortExps{}))) [functional{}()] // functional
  axiom{}\implies{SortExps{}} (\and{SortExps{}} (Lbl'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{})), Lbl'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExps{}} (X1:SortExps{}, Y1:SortExps{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortParams{}, \equals{SortParams{}, R} (Val:SortParams{}, Lbl'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Params'Unds'Param'Unds'Params{}(K0:SortParam{}, K1:SortParams{}))) [functional{}()] // functional
  axiom{}\implies{SortParams{}} (\and{SortParams{}} (Lbl'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Params'Unds'Param'Unds'Params{}(X0:SortParam{}, X1:SortParams{}), Lbl'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Params'Unds'Param'Unds'Params{}(Y0:SortParam{}, Y1:SortParams{})), Lbl'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Params'Unds'Param'Unds'Params{}(\and{SortParam{}} (X0:SortParam{}, Y0:SortParam{}), \and{SortParams{}} (X1:SortParams{}, Y1:SortParams{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTypes{}, \equals{SortTypes{}, R} (Val:SortTypes{}, Lbl'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types{}(K0:SortType{}, K1:SortTypes{}))) [functional{}()] // functional
  axiom{}\implies{SortTypes{}} (\and{SortTypes{}} (Lbl'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types{}(X0:SortType{}, X1:SortTypes{}), Lbl'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types{}(Y0:SortType{}, Y1:SortTypes{})), Lbl'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types{}(\and{SortType{}} (X0:SortType{}, Y0:SortType{}), \and{SortTypes{}} (X1:SortTypes{}, Y1:SortTypes{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortType{}, \equals{SortType{}, R} (Val:SortType{}, Lbl'Unds'-'-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type'Unds'Types'Unds'Type{}(K0:SortTypes{}, K1:SortType{}))) [functional{}()] // functional
  axiom{}\implies{SortType{}} (\and{SortType{}} (Lbl'Unds'-'-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type'Unds'Types'Unds'Type{}(X0:SortTypes{}, X1:SortType{}), Lbl'Unds'-'-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type'Unds'Types'Unds'Type{}(Y0:SortTypes{}, Y1:SortType{})), Lbl'Unds'-'-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type'Unds'Types'Unds'Type{}(\and{SortTypes{}} (X0:SortTypes{}, Y0:SortTypes{}), \and{SortType{}} (X1:SortType{}, Y1:SortType{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortType{}} (\and{SortType{}} (Lbl'Unds'-'-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type'Unds'Types'Unds'Type{}(X0:SortTypes{}, X1:SortType{}), Lbl'UndsLSqBRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type'Unds'Type{}(Y0:SortType{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortType{}} (\and{SortType{}} (Lbl'Unds'-'-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type'Unds'Types'Unds'Type{}(X0:SortTypes{}, X1:SortType{}), Lblbool'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortType{}} (\and{SortType{}} (Lbl'Unds'-'-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type'Unds'Types'Unds'Type{}(X0:SortTypes{}, X1:SortType{}), Lblint'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortType{}} (\and{SortType{}} (Lbl'Unds'-'-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type'Unds'Types'Unds'Type{}(X0:SortTypes{}, X1:SortType{}), Lblstring'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortType{}} (\and{SortType{}} (Lbl'Unds'-'-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type'Unds'Types'Unds'Type{}(X0:SortTypes{}, X1:SortType{}), Lblvoid'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Unds'-Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, Lbl'Unds'-Map'UndsUnds'MAP'Unds'Map'Unds'Map'Unds'Map{}(K0:SortMap{}, K1:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'LParRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), LblsizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblspawn'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'LParRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), LblsizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblspawn'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lbl'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(K0:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lbl'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{})), Lbl'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lbl'UndsUndsLParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Id'Unds'Params'Unds'Block{}(Y0:SortType{}, Y1:SortId{}, Y2:SortParams{}, Y3:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lbl'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(Y0:SortStmt{}, Y1:SortStmt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblacquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lbljoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps{}(Y0:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblreturn'SClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lbltry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block{}(Y0:SortBlock{}, Y1:SortParam{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-Eqls'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-Eqls'Map'UndsUnds'MAP'Unds'Bool'Unds'Map'Unds'Map{}(K0:SortMap{}, K1:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-Eqls'Set'UndsUnds'SET'Unds'Bool'Unds'Set'Unds'Set{}(K0:SortSet{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'LParRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), LblsizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblspawn'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'LParRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), LblsizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblspawn'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsSlshEqls'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsSlshEqls'K'Unds'{}(K0:SortK{}, K1:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsEqls'Bool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsEqls'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsEqls'K'Unds'{}(K0:SortK{}, K1:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'LParRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), LblsizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblspawn'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'LParRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), LblsizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblspawn'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-GT-Eqls'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-GT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'LParRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), LblsizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblspawn'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-GT-'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-GT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'LParRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), LblsizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblspawn'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \equals{SortList{}, R} (Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(K1:SortList{},K2:SortList{}),K3:SortList{}),Lbl'Unds'List'Unds'{}(K1:SortList{},Lbl'Unds'List'Unds'{}(K2:SortList{},K3:SortList{}))) [assoc{}()] // associativity
  axiom{R}\equals{SortList{}, R} (Lbl'Unds'List'Unds'{}(K:SortList{},Lbl'Stop'List{}()),K:SortList{}) [unit{}()] // right unit
  axiom{R}\equals{SortList{}, R} (Lbl'Unds'List'Unds'{}(Lbl'Stop'List{}(),K:SortList{}),K:SortList{}) [unit{}()] // left unit
  axiom{R} \exists{R} (Val:SortList{}, \equals{SortList{}, R} (Val:SortList{}, Lbl'Unds'List'Unds'{}(K0:SortList{}, K1:SortList{}))) [functional{}()] // functional
  axiom{R} \equals{SortMap{}, R} (Lbl'Unds'Map'Unds'{}(Lbl'Unds'Map'Unds'{}(K1:SortMap{},K2:SortMap{}),K3:SortMap{}),Lbl'Unds'Map'Unds'{}(K1:SortMap{},Lbl'Unds'Map'Unds'{}(K2:SortMap{},K3:SortMap{}))) [assoc{}()] // associativity
  axiom{R}\equals{SortMap{}, R} (Lbl'Unds'Map'Unds'{}(K:SortMap{},Lbl'Stop'Map{}()),K:SortMap{}) [unit{}()] // right unit
  axiom{R}\equals{SortMap{}, R} (Lbl'Unds'Map'Unds'{}(Lbl'Stop'Map{}(),K:SortMap{}),K:SortMap{}) [unit{}()] // left unit
  axiom{R} \equals{SortSet{}, R} (Lbl'Unds'Set'Unds'{}(Lbl'Unds'Set'Unds'{}(K1:SortSet{},K2:SortSet{}),K3:SortSet{}),Lbl'Unds'Set'Unds'{}(K1:SortSet{},Lbl'Unds'Set'Unds'{}(K2:SortSet{},K3:SortSet{}))) [assoc{}()] // associativity
  axiom{R} \equals{SortSet{}, R} (Lbl'Unds'Set'Unds'{}(K:SortSet{},K:SortSet{}),K:SortSet{}) [idem{}()] // idempotency
  axiom{R}\equals{SortSet{}, R} (Lbl'Unds'Set'Unds'{}(K:SortSet{},Lbl'Stop'Set{}()),K:SortSet{}) [unit{}()] // right unit
  axiom{R}\equals{SortSet{}, R} (Lbl'Unds'Set'Unds'{}(Lbl'Stop'Set{}(),K:SortSet{}),K:SortSet{}) [unit{}()] // left unit
  axiom{R} \equals{SortTaskCellSet{}, R} (Lbl'Unds'TaskCellSet'Unds'{}(Lbl'Unds'TaskCellSet'Unds'{}(K1:SortTaskCellSet{},K2:SortTaskCellSet{}),K3:SortTaskCellSet{}),Lbl'Unds'TaskCellSet'Unds'{}(K1:SortTaskCellSet{},Lbl'Unds'TaskCellSet'Unds'{}(K2:SortTaskCellSet{},K3:SortTaskCellSet{}))) [assoc{}()] // associativity
  axiom{R} \equals{SortTaskCellSet{}, R} (Lbl'Unds'TaskCellSet'Unds'{}(K:SortTaskCellSet{},K:SortTaskCellSet{}),K:SortTaskCellSet{}) [idem{}()] // idempotency
  axiom{R}\equals{SortTaskCellSet{}, R} (Lbl'Unds'TaskCellSet'Unds'{}(K:SortTaskCellSet{},Lbl'Stop'TaskCellSet{}()),K:SortTaskCellSet{}) [unit{}()] // right unit
  axiom{R}\equals{SortTaskCellSet{}, R} (Lbl'Unds'TaskCellSet'Unds'{}(Lbl'Stop'TaskCellSet{}(),K:SortTaskCellSet{}),K:SortTaskCellSet{}) [unit{}()] // left unit
  axiom{R} \exists{R} (Val:SortType{}, \equals{SortType{}, R} (Val:SortType{}, Lbl'UndsLSqBRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type'Unds'Type{}(K0:SortType{}))) [functional{}()] // functional
  axiom{}\implies{SortType{}} (\and{SortType{}} (Lbl'UndsLSqBRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type'Unds'Type{}(X0:SortType{}), Lbl'UndsLSqBRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type'Unds'Type{}(Y0:SortType{})), Lbl'UndsLSqBRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type'Unds'Type{}(\and{SortType{}} (X0:SortType{}, Y0:SortType{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortType{}} (\and{SortType{}} (Lbl'UndsLSqBRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type'Unds'Type{}(X0:SortType{}), Lblbool'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortType{}} (\and{SortType{}} (Lbl'UndsLSqBRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type'Unds'Type{}(X0:SortType{}), Lblint'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortType{}} (\and{SortType{}} (Lbl'UndsLSqBRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type'Unds'Type{}(X0:SortType{}), Lblstring'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortType{}} (\and{SortType{}} (Lbl'UndsLSqBRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type'Unds'Type{}(X0:SortType{}), Lblvoid'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, Lbl'UndsLSqBUnds-LT-'-undef'RSqB'{}(K0:SortMap{}, K1:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(K0:SortExp{}, K1:SortExps{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{})), Lbl'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExps{}} (X1:SortExps{}, Y1:SortExps{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lblltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lblread'LParRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), LblsizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lblspawn'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'UndsLSqBUndsRSqB'orDefault'UndsUnds'MAP'Unds'KItem'Unds'Map'Unds'KItem'Unds'KItem{}(K0:SortMap{}, K1:SortKItem{}, K2:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lbl'UndsUndsLParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Id'Unds'Params'Unds'Block{}(K0:SortType{}, K1:SortId{}, K2:SortParams{}, K3:SortBlock{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsLParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Id'Unds'Params'Unds'Block{}(X0:SortType{}, X1:SortId{}, X2:SortParams{}, X3:SortBlock{}), Lbl'UndsUndsLParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Id'Unds'Params'Unds'Block{}(Y0:SortType{}, Y1:SortId{}, Y2:SortParams{}, Y3:SortBlock{})), Lbl'UndsUndsLParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Id'Unds'Params'Unds'Block{}(\and{SortType{}} (X0:SortType{}, Y0:SortType{}), \and{SortId{}} (X1:SortId{}, Y1:SortId{}), \and{SortParams{}} (X2:SortParams{}, Y2:SortParams{}), \and{SortBlock{}} (X3:SortBlock{}, Y3:SortBlock{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsLParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Id'Unds'Params'Unds'Block{}(X0:SortType{}, X1:SortId{}, X2:SortParams{}, X3:SortBlock{}), Lbl'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(Y0:SortStmt{}, Y1:SortStmt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsLParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Id'Unds'Params'Unds'Block{}(X0:SortType{}, X1:SortId{}, X2:SortParams{}, X3:SortBlock{}), Lblacquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsLParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Id'Unds'Params'Unds'Block{}(X0:SortType{}, X1:SortId{}, X2:SortParams{}, X3:SortBlock{}), Lblif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsLParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Id'Unds'Params'Unds'Block{}(X0:SortType{}, X1:SortId{}, X2:SortParams{}, X3:SortBlock{}), Lbljoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsLParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Id'Unds'Params'Unds'Block{}(X0:SortType{}, X1:SortId{}, X2:SortParams{}, X3:SortBlock{}), Lblprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps{}(Y0:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsLParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Id'Unds'Params'Unds'Block{}(X0:SortType{}, X1:SortId{}, X2:SortParams{}, X3:SortBlock{}), Lblrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsLParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Id'Unds'Params'Unds'Block{}(X0:SortType{}, X1:SortId{}, X2:SortParams{}, X3:SortBlock{}), Lblrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsLParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Id'Unds'Params'Unds'Block{}(X0:SortType{}, X1:SortId{}, X2:SortParams{}, X3:SortBlock{}), Lblreturn'SClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsLParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Id'Unds'Params'Unds'Block{}(X0:SortType{}, X1:SortId{}, X2:SortParams{}, X3:SortBlock{}), Lblreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsLParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Id'Unds'Params'Unds'Block{}(X0:SortType{}, X1:SortId{}, X2:SortParams{}, X3:SortBlock{}), Lblthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsLParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Id'Unds'Params'Unds'Block{}(X0:SortType{}, X1:SortId{}, X2:SortParams{}, X3:SortBlock{}), Lbltry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block{}(Y0:SortBlock{}, Y1:SortParam{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsLParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Id'Unds'Params'Unds'Block{}(X0:SortType{}, X1:SortId{}, X2:SortParams{}, X3:SortBlock{}), Lblwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lbl'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps{}(K0:SortType{}, K1:SortExps{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortParam{}, \equals{SortParam{}, R} (Val:SortParam{}, Lbl'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Param'Unds'Type'Unds'Id{}(K0:SortType{}, K1:SortId{}))) [functional{}()] // functional
  axiom{}\implies{SortParam{}} (\and{SortParam{}} (Lbl'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Param'Unds'Type'Unds'Id{}(X0:SortType{}, X1:SortId{}), Lbl'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Param'Unds'Type'Unds'Id{}(Y0:SortType{}, Y1:SortId{})), Lbl'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Param'Unds'Type'Unds'Id{}(\and{SortType{}} (X0:SortType{}, Y0:SortType{}), \and{SortId{}} (X1:SortId{}, Y1:SortId{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lbl'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(K0:SortStmt{}, K1:SortStmt{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}), Lbl'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(Y0:SortStmt{}, Y1:SortStmt{})), Lbl'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(\and{SortStmt{}} (X0:SortStmt{}, Y0:SortStmt{}), \and{SortStmt{}} (X1:SortStmt{}, Y1:SortStmt{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}), Lblacquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}), Lblif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}), Lbljoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}), Lblprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps{}(Y0:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}), Lblrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}), Lblrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}), Lblreturn'SClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}), Lblreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}), Lblthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}), Lbltry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block{}(Y0:SortBlock{}, Y1:SortParam{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}), Lblwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'andBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'andThenBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'impliesBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'in'UndsUnds'LIST'Unds'Bool'Unds'KItem'Unds'List{}(K0:SortKItem{}, K1:SortList{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(K0:SortKItem{}, K1:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'orBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'orElseBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'xorBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Unds'xorInt'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, Lbl'UndsPipe'-'-GT-Unds'{}(K0:SortKItem{}, K1:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'UndsPipe'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(K0:SortSet{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'LParRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), LblsizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblspawn'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lblacquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(K0:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lblacquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblacquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{})), Lblacquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblacquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblacquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lbljoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblacquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps{}(Y0:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblacquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblacquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblacquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblreturn'SClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblacquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblacquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblacquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lbltry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block{}(Y0:SortBlock{}, Y1:SortParam{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblacquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBlockOrStmtType{}, \equals{SortBlockOrStmtType{}, R} (Val:SortBlockOrStmtType{}, Lblblock'Unds'SIMPLE-TYPED-STATIC'Unds'BlockOrStmtType{}())) [functional{}()] // functional
  axiom{}\not{SortBlockOrStmtType{}} (\and{SortBlockOrStmtType{}} (Lblblock'Unds'SIMPLE-TYPED-STATIC'Unds'BlockOrStmtType{}(), Lblstmt'Unds'SIMPLE-TYPED-STATIC'Unds'BlockOrStmtType{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortType{}, \equals{SortType{}, R} (Val:SortType{}, Lblbool'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}())) [functional{}()] // functional
  axiom{}\not{SortType{}} (\and{SortType{}} (Lblbool'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}(), Lblint'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortType{}} (\and{SortType{}} (Lblbool'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}(), Lblstring'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortType{}} (\and{SortType{}} (Lblbool'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}(), Lblvoid'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lblfor'LParUndsUndsSClnUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Exp'Unds'Exp'Unds'Block{}(K0:SortStmt{}, K1:SortExp{}, K2:SortExp{}, K3:SortBlock{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortId{}, \equals{SortId{}, R} (Val:SortId{}, LblfreshId'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lblif'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(K0:SortExp{}, K1:SortBlock{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lblif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(K0:SortExp{}, K1:SortBlock{}, K2:SortBlock{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lblif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(X0:SortExp{}, X1:SortBlock{}, X2:SortBlock{}), Lblif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}, Y2:SortBlock{})), Lblif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortBlock{}} (X1:SortBlock{}, Y1:SortBlock{}), \and{SortBlock{}} (X2:SortBlock{}, Y2:SortBlock{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(X0:SortExp{}, X1:SortBlock{}, X2:SortBlock{}), Lbljoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(X0:SortExp{}, X1:SortBlock{}, X2:SortBlock{}), Lblprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps{}(Y0:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(X0:SortExp{}, X1:SortBlock{}, X2:SortBlock{}), Lblrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(X0:SortExp{}, X1:SortBlock{}, X2:SortBlock{}), Lblrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(X0:SortExp{}, X1:SortBlock{}, X2:SortBlock{}), Lblreturn'SClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(X0:SortExp{}, X1:SortBlock{}, X2:SortBlock{}), Lblreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(X0:SortExp{}, X1:SortBlock{}, X2:SortBlock{}), Lblthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(X0:SortExp{}, X1:SortBlock{}, X2:SortBlock{}), Lbltry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block{}(Y0:SortBlock{}, Y1:SortParam{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(X0:SortExp{}, X1:SortBlock{}, X2:SortBlock{}), Lblwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortType{}, \equals{SortType{}, R} (Val:SortType{}, Lblint'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}())) [functional{}()] // functional
  axiom{}\not{SortType{}} (\and{SortType{}} (Lblint'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}(), Lblstring'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortType{}} (\and{SortType{}} (Lblint'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}(), Lblvoid'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, LblintersectSet'LParUndsCommUndsRParUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(K0:SortSet{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisBlock{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisBlockOrStmtType{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisBool{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisCurrEnvVarCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisCurrEnvVarCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisExp{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisExps{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisFloat{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisGeneratedCounterCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisGeneratedCounterCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisGeneratedTopCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisGeneratedTopCellFragment{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisGtenvCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisGtenvCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisIOError{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisIOFile{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisIOInt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisIOString{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisId{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisInt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisK{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisKCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisKCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisKConfigVar{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisKItem{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisKResult{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisLValue{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisList{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisMap{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisParam{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisParams{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisReturnTypeCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisReturnTypeCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisSet{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisStmt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisStream{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisString{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTCellFragment{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTaskCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTaskCellFragment{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTaskCellSet{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTasksCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTasksCellFragment{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTasksCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTenvCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTenvCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisType{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTypes{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lbljoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(K0:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lbljoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lbljoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{})), Lbljoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbljoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps{}(Y0:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbljoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbljoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbljoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblreturn'SClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbljoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbljoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbljoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lbltry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block{}(Y0:SortBlock{}, Y1:SortParam{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbljoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(K0:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lblltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp{}(K0:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lblltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp{}(Y0:SortExp{})), Lblltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lblltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblread'LParRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lblltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp{}(X0:SortExp{}), LblsizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lblltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblspawn'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortCurrEnvVarCellOpt{}, \equals{SortCurrEnvVarCellOpt{}, R} (Val:SortCurrEnvVarCellOpt{}, LblnoCurrEnvVarCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortGeneratedCounterCellOpt{}, \equals{SortGeneratedCounterCellOpt{}, R} (Val:SortGeneratedCounterCellOpt{}, LblnoGeneratedCounterCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortGtenvCellOpt{}, \equals{SortGtenvCellOpt{}, R} (Val:SortGtenvCellOpt{}, LblnoGtenvCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortKCellOpt{}, \equals{SortKCellOpt{}, R} (Val:SortKCellOpt{}, LblnoKCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortReturnTypeCellOpt{}, \equals{SortReturnTypeCellOpt{}, R} (Val:SortReturnTypeCellOpt{}, LblnoReturnTypeCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortTCellOpt{}, \equals{SortTCellOpt{}, R} (Val:SortTCellOpt{}, LblnoTCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortTasksCellOpt{}, \equals{SortTasksCellOpt{}, R} (Val:SortTasksCellOpt{}, LblnoTasksCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortTenvCellOpt{}, \equals{SortTenvCellOpt{}, R} (Val:SortTenvCellOpt{}, LblnoTenvCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblnotBool'Unds'{}(K0:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lblprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps{}(K0:SortExps{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lblprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps{}(X0:SortExps{}), Lblprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps{}(Y0:SortExps{})), Lblprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps{}(\and{SortExps{}} (X0:SortExps{}, Y0:SortExps{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps{}(X0:SortExps{}), Lblrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps{}(X0:SortExps{}), Lblrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps{}(X0:SortExps{}), Lblreturn'SClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps{}(X0:SortExps{}), Lblreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps{}(X0:SortExps{}), Lblthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps{}(X0:SortExps{}), Lbltry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block{}(Y0:SortBlock{}, Y1:SortParam{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps{}(X0:SortExps{}), Lblwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lblread'LParRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [functional{}()] // functional
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lblread'LParRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp{}(), LblsizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lblread'LParRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp{}(), Lblspawn'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lblrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(K0:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lblrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{})), Lblrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblreturn'SClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lbltry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block{}(Y0:SortBlock{}, Y1:SortParam{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, LblremoveAll'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Set{}(K0:SortMap{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lblrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(K0:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lblrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{})), Lblrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblreturn'SClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lbltry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block{}(Y0:SortBlock{}, Y1:SortParam{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblreplaceAll'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}, K2:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblreplaceFirst'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}, K2:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lblreturn'SClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt{}())) [functional{}()] // functional
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblreturn'SClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt{}(), Lblreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblreturn'SClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt{}(), Lblthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblreturn'SClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt{}(), Lbltry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block{}(Y0:SortBlock{}, Y1:SortParam{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblreturn'SClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt{}(), Lblwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lblreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(K0:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lblreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{})), Lblreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lbltry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block{}(Y0:SortBlock{}, Y1:SortParam{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lblsize'LParUndsRParUnds'LIST'Unds'Int'Unds'List{}(K0:SortList{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lblsize'LParUndsRParUnds'MAP'Unds'Int'Unds'Map{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lblsize'LParUndsRParUnds'SET'Unds'Int'Unds'Set{}(K0:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, LblsizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(K0:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (LblsizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), LblsizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{})), LblsizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (LblsizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblspawn'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lblspawn'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(K0:SortBlock{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lblspawn'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(X0:SortBlock{}), Lblspawn'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{})), Lblspawn'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(\and{SortBlock{}} (X0:SortBlock{}, Y0:SortBlock{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortBlockOrStmtType{}, \equals{SortBlockOrStmtType{}, R} (Val:SortBlockOrStmtType{}, Lblstmt'Unds'SIMPLE-TYPED-STATIC'Unds'BlockOrStmtType{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortType{}, \equals{SortType{}, R} (Val:SortType{}, Lblstring'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}())) [functional{}()] // functional
  axiom{}\not{SortType{}} (\and{SortType{}} (Lblstring'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}(), Lblvoid'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(K0:SortString{}, K1:SortInt{}, K2:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lblthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(K0:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lblthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{})), Lblthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lbltry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block{}(Y0:SortBlock{}, Y1:SortParam{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lbltry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block{}(K0:SortBlock{}, K1:SortParam{}, K2:SortBlock{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lbltry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block{}(X0:SortBlock{}, X1:SortParam{}, X2:SortBlock{}), Lbltry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block{}(Y0:SortBlock{}, Y1:SortParam{}, Y2:SortBlock{})), Lbltry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block{}(\and{SortBlock{}} (X0:SortBlock{}, Y0:SortBlock{}), \and{SortParam{}} (X1:SortParam{}, Y1:SortParam{}), \and{SortBlock{}} (X2:SortBlock{}, Y2:SortBlock{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbltry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block{}(X0:SortBlock{}, X1:SortParam{}, X2:SortBlock{}), Lblwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, LblupdateMap'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Map{}(K0:SortMap{}, K1:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortType{}, \equals{SortType{}, R} (Val:SortType{}, Lblvoid'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lblwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(K0:SortExp{}, K1:SortBlock{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lblwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(X0:SortExp{}, X1:SortBlock{}), Lblwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{})), Lblwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortBlock{}} (X1:SortBlock{}, Y1:SortBlock{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortBlock{}, \equals{SortBlock{}, R} (Val:SortBlock{}, Lbl'LBraUndsRBraUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Block'Unds'Stmt{}(K0:SortStmt{}))) [functional{}()] // functional
  axiom{}\implies{SortBlock{}} (\and{SortBlock{}} (Lbl'LBraUndsRBraUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Block'Unds'Stmt{}(X0:SortStmt{}), Lbl'LBraUndsRBraUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Block'Unds'Stmt{}(Y0:SortStmt{})), Lbl'LBraUndsRBraUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Block'Unds'Stmt{}(\and{SortStmt{}} (X0:SortStmt{}, Y0:SortStmt{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortBlock{}} (\and{SortBlock{}} (Lbl'LBraUndsRBraUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Block'Unds'Stmt{}(X0:SortStmt{}), Lbl'LBraRBraUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Block{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBlock{}, \equals{SortBlock{}, R} (Val:SortBlock{}, Lbl'LBraRBraUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Block{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Tild'Int'Unds'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{} \or{SortCurrEnvVarCellOpt{}} (LblnoCurrEnvVarCell{}(), \exists{SortCurrEnvVarCellOpt{}} (Val:SortCurrEnvVarCell{}, inj{SortCurrEnvVarCell{}, SortCurrEnvVarCellOpt{}} (Val:SortCurrEnvVarCell{})), \bottom{SortCurrEnvVarCellOpt{}}()) [constructor{}()] // no junk
  axiom{} \or{SortReturnTypeCellOpt{}} (LblnoReturnTypeCell{}(), \exists{SortReturnTypeCellOpt{}} (Val:SortReturnTypeCell{}, inj{SortReturnTypeCell{}, SortReturnTypeCellOpt{}} (Val:SortReturnTypeCell{})), \bottom{SortReturnTypeCellOpt{}}()) [constructor{}()] // no junk
  axiom{} \or{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, \exists{SortKItem{}} (X1:SortK{}, Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(X0:SortK{}, X1:SortK{}))), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), \exists{SortKItem{}} (X0:SortK{}, \exists{SortKItem{}} (X1:SortK{}, Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}))), \exists{SortKItem{}} (X0:SortK{}, \exists{SortKItem{}} (X1:SortK{}, Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(X0:SortK{}, X1:SortK{}))), \exists{SortKItem{}} (X0:SortK{}, \exists{SortKItem{}} (X1:SortK{}, Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(X0:SortK{}, X1:SortK{}))), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), \exists{SortKItem{}} (X0:SortK{}, \exists{SortKItem{}} (X1:SortK{}, Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}))), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortInt{}, \exists{SortKItem{}} (X1:SortString{}, \exists{SortKItem{}} (X2:SortString{}, Lbl'Hash'systemResult{}(X0:SortInt{}, X1:SortString{}, X2:SortString{})))), \exists{SortKItem{}} (Val:SortCurrEnvVarCellOpt{}, inj{SortCurrEnvVarCellOpt{}, SortKItem{}} (Val:SortCurrEnvVarCellOpt{})), \exists{SortKItem{}} (Val:SortReturnTypeCellOpt{}, inj{SortReturnTypeCellOpt{}, SortKItem{}} (Val:SortReturnTypeCellOpt{})), \exists{SortKItem{}} (Val:SortTenvCellOpt{}, inj{SortTenvCellOpt{}, SortKItem{}} (Val:SortTenvCellOpt{})), \exists{SortKItem{}} (Val:SortTaskCellFragment{}, inj{SortTaskCellFragment{}, SortKItem{}} (Val:SortTaskCellFragment{})), \exists{SortKItem{}} (Val:SortList{}, inj{SortList{}, SortKItem{}} (Val:SortList{})), \exists{SortKItem{}} (Val:SortGtenvCellOpt{}, inj{SortGtenvCellOpt{}, SortKItem{}} (Val:SortGtenvCellOpt{})), \exists{SortKItem{}} (Val:SortTaskCell{}, inj{SortTaskCell{}, SortKItem{}} (Val:SortTaskCell{})), \exists{SortKItem{}} (Val:SortTypes{}, inj{SortTypes{}, SortKItem{}} (Val:SortTypes{})), \exists{SortKItem{}} (Val:SortTCellOpt{}, inj{SortTCellOpt{}, SortKItem{}} (Val:SortTCellOpt{})), \exists{SortKItem{}} (Val:SortTCellFragment{}, inj{SortTCellFragment{}, SortKItem{}} (Val:SortTCellFragment{})), \exists{SortKItem{}} (Val:SortString{}, inj{SortString{}, SortKItem{}} (Val:SortString{})), \exists{SortKItem{}} (Val:SortCurrEnvVarCell{}, inj{SortCurrEnvVarCell{}, SortKItem{}} (Val:SortCurrEnvVarCell{})), \exists{SortKItem{}} (Val:SortKConfigVar{}, inj{SortKConfigVar{}, SortKItem{}} (Val:SortKConfigVar{})), \exists{SortKItem{}} (Val:SortIOInt{}, inj{SortIOInt{}, SortKItem{}} (Val:SortIOInt{})), \exists{SortKItem{}} (Val:SortTCell{}, inj{SortTCell{}, SortKItem{}} (Val:SortTCell{})), \exists{SortKItem{}} (Val:SortExp{}, inj{SortExp{}, SortKItem{}} (Val:SortExp{})), \exists{SortKItem{}} (Val:SortBlockOrStmtType{}, inj{SortBlockOrStmtType{}, SortKItem{}} (Val:SortBlockOrStmtType{})), \exists{SortKItem{}} (Val:SortTenvCell{}, inj{SortTenvCell{}, SortKItem{}} (Val:SortTenvCell{})), \exists{SortKItem{}} (Val:SortGeneratedCounterCellOpt{}, inj{SortGeneratedCounterCellOpt{}, SortKItem{}} (Val:SortGeneratedCounterCellOpt{})), \exists{SortKItem{}} (Val:SortParam{}, inj{SortParam{}, SortKItem{}} (Val:SortParam{})), \exists{SortKItem{}} (Val:SortGeneratedCounterCell{}, inj{SortGeneratedCounterCell{}, SortKItem{}} (Val:SortGeneratedCounterCell{})), \exists{SortKItem{}} (Val:SortId{}, inj{SortId{}, SortKItem{}} (Val:SortId{})), \exists{SortKItem{}} (Val:SortStream{}, inj{SortStream{}, SortKItem{}} (Val:SortStream{})), \exists{SortKItem{}} (Val:SortBool{}, inj{SortBool{}, SortKItem{}} (Val:SortBool{})), \exists{SortKItem{}} (Val:SortKCell{}, inj{SortKCell{}, SortKItem{}} (Val:SortKCell{})), \exists{SortKItem{}} (Val:SortIOFile{}, inj{SortIOFile{}, SortKItem{}} (Val:SortIOFile{})), \exists{SortKItem{}} (Val:SortKResult{}, inj{SortKResult{}, SortKItem{}} (Val:SortKResult{})), \exists{SortKItem{}} (Val:SortMap{}, inj{SortMap{}, SortKItem{}} (Val:SortMap{})), \exists{SortKItem{}} (Val:SortParams{}, inj{SortParams{}, SortKItem{}} (Val:SortParams{})), \exists{SortKItem{}} (Val:SortLValue{}, inj{SortLValue{}, SortKItem{}} (Val:SortLValue{})), \exists{SortKItem{}} (Val:SortKCellOpt{}, inj{SortKCellOpt{}, SortKItem{}} (Val:SortKCellOpt{})), \exists{SortKItem{}} (Val:SortStmt{}, inj{SortStmt{}, SortKItem{}} (Val:SortStmt{})), \exists{SortKItem{}} (Val:SortTaskCellSet{}, inj{SortTaskCellSet{}, SortKItem{}} (Val:SortTaskCellSet{})), \exists{SortKItem{}} (Val:SortInt{}, inj{SortInt{}, SortKItem{}} (Val:SortInt{})), \exists{SortKItem{}} (Val:SortFloat{}, inj{SortFloat{}, SortKItem{}} (Val:SortFloat{})), \exists{SortKItem{}} (Val:SortTasksCell{}, inj{SortTasksCell{}, SortKItem{}} (Val:SortTasksCell{})), \exists{SortKItem{}} (Val:SortType{}, inj{SortType{}, SortKItem{}} (Val:SortType{})), \exists{SortKItem{}} (Val:SortGeneratedTopCell{}, inj{SortGeneratedTopCell{}, SortKItem{}} (Val:SortGeneratedTopCell{})), \exists{SortKItem{}} (Val:SortTasksCellFragment{}, inj{SortTasksCellFragment{}, SortKItem{}} (Val:SortTasksCellFragment{})), \exists{SortKItem{}} (Val:SortBlock{}, inj{SortBlock{}, SortKItem{}} (Val:SortBlock{})), \exists{SortKItem{}} (Val:SortSet{}, inj{SortSet{}, SortKItem{}} (Val:SortSet{})), \exists{SortKItem{}} (Val:SortExps{}, inj{SortExps{}, SortKItem{}} (Val:SortExps{})), \exists{SortKItem{}} (Val:SortIOString{}, inj{SortIOString{}, SortKItem{}} (Val:SortIOString{})), \exists{SortKItem{}} (Val:SortTasksCellOpt{}, inj{SortTasksCellOpt{}, SortKItem{}} (Val:SortTasksCellOpt{})), \exists{SortKItem{}} (Val:SortGeneratedTopCellFragment{}, inj{SortGeneratedTopCellFragment{}, SortKItem{}} (Val:SortGeneratedTopCellFragment{})), \exists{SortKItem{}} (Val:SortReturnTypeCell{}, inj{SortReturnTypeCell{}, SortKItem{}} (Val:SortReturnTypeCell{})), \exists{SortKItem{}} (Val:SortIOError{}, inj{SortIOError{}, SortKItem{}} (Val:SortIOError{})), \exists{SortKItem{}} (Val:SortGtenvCell{}, inj{SortGtenvCell{}, SortKItem{}} (Val:SortGtenvCell{})), \bottom{SortKItem{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTenvCellOpt{}} (LblnoTenvCell{}(), \exists{SortTenvCellOpt{}} (Val:SortTenvCell{}, inj{SortTenvCell{}, SortTenvCellOpt{}} (Val:SortTenvCell{})), \bottom{SortTenvCellOpt{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTaskCellFragment{}} (\exists{SortTaskCellFragment{}} (X0:SortKCellOpt{}, \exists{SortTaskCellFragment{}} (X1:SortTenvCellOpt{}, \exists{SortTaskCellFragment{}} (X2:SortCurrEnvVarCellOpt{}, \exists{SortTaskCellFragment{}} (X3:SortReturnTypeCellOpt{}, Lbl'-LT-'task'-GT-'-fragment{}(X0:SortKCellOpt{}, X1:SortTenvCellOpt{}, X2:SortCurrEnvVarCellOpt{}, X3:SortReturnTypeCellOpt{}))))), \bottom{SortTaskCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortGtenvCellOpt{}} (LblnoGtenvCell{}(), \exists{SortGtenvCellOpt{}} (Val:SortGtenvCell{}, inj{SortGtenvCell{}, SortGtenvCellOpt{}} (Val:SortGtenvCell{})), \bottom{SortGtenvCellOpt{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTaskCell{}} (\exists{SortTaskCell{}} (X0:SortKCell{}, \exists{SortTaskCell{}} (X1:SortTenvCell{}, \exists{SortTaskCell{}} (X2:SortCurrEnvVarCell{}, \exists{SortTaskCell{}} (X3:SortReturnTypeCell{}, Lbl'-LT-'task'-GT-'{}(X0:SortKCell{}, X1:SortTenvCell{}, X2:SortCurrEnvVarCell{}, X3:SortReturnTypeCell{}))))), \bottom{SortTaskCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTypes{}} (Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}(), \exists{SortTypes{}} (X0:SortType{}, \exists{SortTypes{}} (X1:SortTypes{}, Lbl'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types{}(X0:SortType{}, X1:SortTypes{}))), \bottom{SortTypes{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTCellOpt{}} (LblnoTCell{}(), \exists{SortTCellOpt{}} (Val:SortTCell{}, inj{SortTCell{}, SortTCellOpt{}} (Val:SortTCell{})), \bottom{SortTCellOpt{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTCellFragment{}} (\exists{SortTCellFragment{}} (X0:SortTasksCellOpt{}, \exists{SortTCellFragment{}} (X1:SortGtenvCellOpt{}, Lbl'-LT-'T'-GT-'-fragment{}(X0:SortTasksCellOpt{}, X1:SortGtenvCellOpt{}))), \bottom{SortTCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortString{}} (\top{SortString{}}(), \bottom{SortString{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortCurrEnvVarCell{}} (Lbl'Stop'CurrEnvVarCell{}(), \exists{SortCurrEnvVarCell{}} (X0:SortSet{}, Lbl'-LT-'currEnvVar'-GT-'{}(X0:SortSet{})), \bottom{SortCurrEnvVarCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortKConfigVar{}} (\top{SortKConfigVar{}}(), \bottom{SortKConfigVar{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortIOInt{}} (\exists{SortIOInt{}} (Val:SortInt{}, inj{SortInt{}, SortIOInt{}} (Val:SortInt{})), \exists{SortIOInt{}} (Val:SortIOError{}, inj{SortIOError{}, SortIOInt{}} (Val:SortIOError{})), \bottom{SortIOInt{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTCell{}} (\exists{SortTCell{}} (X0:SortTasksCell{}, \exists{SortTCell{}} (X1:SortGtenvCell{}, Lbl'-LT-'T'-GT-'{}(X0:SortTasksCell{}, X1:SortGtenvCell{}))), \bottom{SortTCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortExp{}} (\exists{SortExp{}} (X0:SortExp{}, Lbl'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{})), \exists{SortExp{}} (X0:SortExp{}, Lbl'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{})), \exists{SortExp{}} (X0:SortExp{}, Lbl-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{})), \exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExps{}, Lbl'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}))), \exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExps{}, Lbl'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}))), \exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \exists{SortExp{}} (X0:SortExp{}, Lblltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp{}(X0:SortExp{})), Lblread'LParRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp{}(), \exists{SortExp{}} (X0:SortExp{}, LblsizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{})), \exists{SortExp{}} (X0:SortBlock{}, Lblspawn'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(X0:SortBlock{})), \exists{SortExp{}} (Val:SortString{}, inj{SortString{}, SortExp{}} (Val:SortString{})), \exists{SortExp{}} (Val:SortBlockOrStmtType{}, inj{SortBlockOrStmtType{}, SortExp{}} (Val:SortBlockOrStmtType{})), \exists{SortExp{}} (Val:SortId{}, inj{SortId{}, SortExp{}} (Val:SortId{})), \exists{SortExp{}} (Val:SortBool{}, inj{SortBool{}, SortExp{}} (Val:SortBool{})), \exists{SortExp{}} (Val:SortLValue{}, inj{SortLValue{}, SortExp{}} (Val:SortLValue{})), \exists{SortExp{}} (Val:SortInt{}, inj{SortInt{}, SortExp{}} (Val:SortInt{})), \exists{SortExp{}} (Val:SortType{}, inj{SortType{}, SortExp{}} (Val:SortType{})), \bottom{SortExp{}}()) [constructor{}()] // no junk
  axiom{} \or{SortBlockOrStmtType{}} (Lblblock'Unds'SIMPLE-TYPED-STATIC'Unds'BlockOrStmtType{}(), Lblstmt'Unds'SIMPLE-TYPED-STATIC'Unds'BlockOrStmtType{}(), \bottom{SortBlockOrStmtType{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTenvCell{}} (Lbl'Stop'TenvCell{}(), \exists{SortTenvCell{}} (X0:SortMap{}, Lbl'-LT-'tenv'-GT-'{}(X0:SortMap{})), \bottom{SortTenvCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortGeneratedCounterCellOpt{}} (LblnoGeneratedCounterCell{}(), \exists{SortGeneratedCounterCellOpt{}} (Val:SortGeneratedCounterCell{}, inj{SortGeneratedCounterCell{}, SortGeneratedCounterCellOpt{}} (Val:SortGeneratedCounterCell{})), \bottom{SortGeneratedCounterCellOpt{}}()) [constructor{}()] // no junk
  axiom{} \or{SortParam{}} (\exists{SortParam{}} (X0:SortType{}, \exists{SortParam{}} (X1:SortId{}, Lbl'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Param'Unds'Type'Unds'Id{}(X0:SortType{}, X1:SortId{}))), \bottom{SortParam{}}()) [constructor{}()] // no junk
  axiom{} \or{SortGeneratedCounterCell{}} (\exists{SortGeneratedCounterCell{}} (X0:SortInt{}, Lbl'-LT-'generatedCounter'-GT-'{}(X0:SortInt{})), \bottom{SortGeneratedCounterCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortId{}} (\top{SortId{}}(), \bottom{SortId{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortStream{}} (\exists{SortStream{}} (X0:SortK{}, Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(X0:SortK{})), \exists{SortStream{}} (X0:SortInt{}, Lbl'Hash'istream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(X0:SortInt{})), \exists{SortStream{}} (X0:SortInt{}, Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(X0:SortInt{})), \exists{SortStream{}} (X0:SortString{}, \exists{SortStream{}} (X1:SortString{}, Lbl'Hash'parseInput'LParUndsCommUndsRParUnds'K-IO'Unds'Stream'Unds'String'Unds'String{}(X0:SortString{}, X1:SortString{}))), \bottom{SortStream{}}()) [constructor{}()] // no junk
  axiom{} \or{SortBool{}} (\top{SortBool{}}(), \bottom{SortBool{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortKCell{}} (\exists{SortKCell{}} (X0:SortK{}, Lbl'-LT-'k'-GT-'{}(X0:SortK{})), \bottom{SortKCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortIOFile{}} (\exists{SortIOFile{}} (X0:SortString{}, \exists{SortIOFile{}} (X1:SortInt{}, Lbl'Hash'tempFile{}(X0:SortString{}, X1:SortInt{}))), \exists{SortIOFile{}} (Val:SortIOError{}, inj{SortIOError{}, SortIOFile{}} (Val:SortIOError{})), \bottom{SortIOFile{}}()) [constructor{}()] // no junk
  axiom{} \or{SortKResult{}} (\exists{SortKResult{}} (Val:SortTypes{}, inj{SortTypes{}, SortKResult{}} (Val:SortTypes{})), \exists{SortKResult{}} (Val:SortBlockOrStmtType{}, inj{SortBlockOrStmtType{}, SortKResult{}} (Val:SortBlockOrStmtType{})), \exists{SortKResult{}} (Val:SortType{}, inj{SortType{}, SortKResult{}} (Val:SortType{})), \bottom{SortKResult{}}()) [constructor{}()] // no junk
  axiom{} \or{SortParams{}} (Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Params'Unds'Param'Unds'Params'QuotRBraUnds'Params{}(), \exists{SortParams{}} (X0:SortParam{}, \exists{SortParams{}} (X1:SortParams{}, Lbl'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Params'Unds'Param'Unds'Params{}(X0:SortParam{}, X1:SortParams{}))), \bottom{SortParams{}}()) [constructor{}()] // no junk
  axiom{} \or{SortLValue{}} (\exists{SortLValue{}} (Val:SortId{}, inj{SortId{}, SortLValue{}} (Val:SortId{})), \bottom{SortLValue{}}()) [constructor{}()] // no junk
  axiom{} \or{SortKCellOpt{}} (LblnoKCell{}(), \exists{SortKCellOpt{}} (Val:SortKCell{}, inj{SortKCell{}, SortKCellOpt{}} (Val:SortKCell{})), \bottom{SortKCellOpt{}}()) [constructor{}()] // no junk
  axiom{} \or{SortStmt{}} (\exists{SortStmt{}} (X0:SortExp{}, Lbl'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{})), \exists{SortStmt{}} (X0:SortType{}, \exists{SortStmt{}} (X1:SortId{}, \exists{SortStmt{}} (X2:SortParams{}, \exists{SortStmt{}} (X3:SortBlock{}, Lbl'UndsUndsLParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Id'Unds'Params'Unds'Block{}(X0:SortType{}, X1:SortId{}, X2:SortParams{}, X3:SortBlock{}))))), \exists{SortStmt{}} (X0:SortType{}, \exists{SortStmt{}} (X1:SortExps{}, Lbl'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps{}(X0:SortType{}, X1:SortExps{}))), \exists{SortStmt{}} (X0:SortStmt{}, \exists{SortStmt{}} (X1:SortStmt{}, Lbl'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}))), \exists{SortStmt{}} (X0:SortExp{}, Lblacquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{})), \exists{SortStmt{}} (X0:SortStmt{}, \exists{SortStmt{}} (X1:SortExp{}, \exists{SortStmt{}} (X2:SortExp{}, \exists{SortStmt{}} (X3:SortBlock{}, Lblfor'LParUndsUndsSClnUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Exp'Unds'Exp'Unds'Block{}(X0:SortStmt{}, X1:SortExp{}, X2:SortExp{}, X3:SortBlock{}))))), \exists{SortStmt{}} (X0:SortExp{}, \exists{SortStmt{}} (X1:SortBlock{}, Lblif'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(X0:SortExp{}, X1:SortBlock{}))), \exists{SortStmt{}} (X0:SortExp{}, \exists{SortStmt{}} (X1:SortBlock{}, \exists{SortStmt{}} (X2:SortBlock{}, Lblif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(X0:SortExp{}, X1:SortBlock{}, X2:SortBlock{})))), \exists{SortStmt{}} (X0:SortExp{}, Lbljoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{})), \exists{SortStmt{}} (X0:SortExps{}, Lblprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps{}(X0:SortExps{})), \exists{SortStmt{}} (X0:SortExp{}, Lblrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{})), \exists{SortStmt{}} (X0:SortExp{}, Lblrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{})), Lblreturn'SClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt{}(), \exists{SortStmt{}} (X0:SortExp{}, Lblreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{})), \exists{SortStmt{}} (X0:SortExp{}, Lblthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{})), \exists{SortStmt{}} (X0:SortBlock{}, \exists{SortStmt{}} (X1:SortParam{}, \exists{SortStmt{}} (X2:SortBlock{}, Lbltry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block{}(X0:SortBlock{}, X1:SortParam{}, X2:SortBlock{})))), \exists{SortStmt{}} (X0:SortExp{}, \exists{SortStmt{}} (X1:SortBlock{}, Lblwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(X0:SortExp{}, X1:SortBlock{}))), \exists{SortStmt{}} (Val:SortBlockOrStmtType{}, inj{SortBlockOrStmtType{}, SortStmt{}} (Val:SortBlockOrStmtType{})), \exists{SortStmt{}} (Val:SortBlock{}, inj{SortBlock{}, SortStmt{}} (Val:SortBlock{})), \bottom{SortStmt{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTaskCellSet{}} (\exists{SortTaskCellSet{}} (Val:SortTaskCell{}, inj{SortTaskCell{}, SortTaskCellSet{}} (Val:SortTaskCell{})), \bottom{SortTaskCellSet{}}()) [constructor{}()] // no junk
  axiom{} \or{SortInt{}} (\top{SortInt{}}(), \bottom{SortInt{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortFloat{}} (\top{SortFloat{}}(), \bottom{SortFloat{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortTasksCell{}} (\exists{SortTasksCell{}} (X0:SortTaskCellSet{}, Lbl'-LT-'tasks'-GT-'{}(X0:SortTaskCellSet{})), \bottom{SortTasksCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortType{}} (\exists{SortType{}} (X0:SortTypes{}, \exists{SortType{}} (X1:SortType{}, Lbl'Unds'-'-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type'Unds'Types'Unds'Type{}(X0:SortTypes{}, X1:SortType{}))), \exists{SortType{}} (X0:SortType{}, Lbl'UndsLSqBRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type'Unds'Type{}(X0:SortType{})), Lblbool'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}(), Lblint'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}(), Lblstring'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}(), Lblvoid'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}(), \exists{SortType{}} (Val:SortBlockOrStmtType{}, inj{SortBlockOrStmtType{}, SortType{}} (Val:SortBlockOrStmtType{})), \bottom{SortType{}}()) [constructor{}()] // no junk
  axiom{} \or{SortGeneratedTopCell{}} (\exists{SortGeneratedTopCell{}} (X0:SortTCell{}, \exists{SortGeneratedTopCell{}} (X1:SortGeneratedCounterCell{}, Lbl'-LT-'generatedTop'-GT-'{}(X0:SortTCell{}, X1:SortGeneratedCounterCell{}))), \bottom{SortGeneratedTopCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTasksCellFragment{}} (\exists{SortTasksCellFragment{}} (X0:SortTaskCellSet{}, Lbl'-LT-'tasks'-GT-'-fragment{}(X0:SortTaskCellSet{})), \bottom{SortTasksCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortBlock{}} (\exists{SortBlock{}} (X0:SortStmt{}, Lbl'LBraUndsRBraUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Block'Unds'Stmt{}(X0:SortStmt{})), Lbl'LBraRBraUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Block{}(), \exists{SortBlock{}} (Val:SortBlockOrStmtType{}, inj{SortBlockOrStmtType{}, SortBlock{}} (Val:SortBlockOrStmtType{})), \bottom{SortBlock{}}()) [constructor{}()] // no junk
  axiom{} \or{SortExps{}} (Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps'QuotRBraUnds'Exps{}(), \exists{SortExps{}} (X0:SortExp{}, \exists{SortExps{}} (X1:SortExps{}, Lbl'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}))), \exists{SortExps{}} (Val:SortTypes{}, inj{SortTypes{}, SortExps{}} (Val:SortTypes{})), \bottom{SortExps{}}()) [constructor{}()] // no junk
  axiom{} \or{SortIOString{}} (\exists{SortIOString{}} (Val:SortString{}, inj{SortString{}, SortIOString{}} (Val:SortString{})), \exists{SortIOString{}} (Val:SortIOError{}, inj{SortIOError{}, SortIOString{}} (Val:SortIOError{})), \bottom{SortIOString{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTasksCellOpt{}} (LblnoTasksCell{}(), \exists{SortTasksCellOpt{}} (Val:SortTasksCell{}, inj{SortTasksCell{}, SortTasksCellOpt{}} (Val:SortTasksCell{})), \bottom{SortTasksCellOpt{}}()) [constructor{}()] // no junk
  axiom{} \or{SortGeneratedTopCellFragment{}} (\exists{SortGeneratedTopCellFragment{}} (X0:SortTCellOpt{}, \exists{SortGeneratedTopCellFragment{}} (X1:SortGeneratedCounterCellOpt{}, Lbl'-LT-'generatedTop'-GT-'-fragment{}(X0:SortTCellOpt{}, X1:SortGeneratedCounterCellOpt{}))), \bottom{SortGeneratedTopCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortReturnTypeCell{}} (Lbl'Stop'ReturnTypeCell{}(), \exists{SortReturnTypeCell{}} (X0:SortType{}, Lbl'-LT-'returnType'-GT-'{}(X0:SortType{})), \bottom{SortReturnTypeCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EACCES{}(), Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EAGAIN{}(), Lbl'Hash'EALREADY{}(), Lbl'Hash'EBADF{}(), Lbl'Hash'EBUSY{}(), Lbl'Hash'ECHILD{}(), Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EDEADLK{}(), Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EDOM{}(), Lbl'Hash'EEXIST{}(), Lbl'Hash'EFAULT{}(), Lbl'Hash'EFBIG{}(), Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EINTR{}(), Lbl'Hash'EINVAL{}(), Lbl'Hash'EIO{}(), Lbl'Hash'EISCONN{}(), Lbl'Hash'EISDIR{}(), Lbl'Hash'ELOOP{}(), Lbl'Hash'EMFILE{}(), Lbl'Hash'EMLINK{}(), Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ENOSPC{}(), Lbl'Hash'ENOSYS{}(), Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ENOTTY{}(), Lbl'Hash'ENXIO{}(), Lbl'Hash'EOF{}(), Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'EPERM{}(), Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'EPIPE{}(), Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'ERANGE{}(), Lbl'Hash'EROFS{}(), Lbl'Hash'ESHUTDOWN{}(), Lbl'Hash'ESOCKTNOSUPPORT{}(), Lbl'Hash'ESPIPE{}(), Lbl'Hash'ESRCH{}(), Lbl'Hash'ETIMEDOUT{}(), Lbl'Hash'ETOOMANYREFS{}(), Lbl'Hash'EWOULDBLOCK{}(), Lbl'Hash'EXDEV{}(), \exists{SortIOError{}} (X0:SortInt{}, Lbl'Hash'unknownIOError{}(X0:SortInt{})), \bottom{SortIOError{}}()) [constructor{}()] // no junk
  axiom{} \or{SortGtenvCell{}} (\exists{SortGtenvCell{}} (X0:SortMap{}, Lbl'-LT-'gtenv'-GT-'{}(X0:SortMap{})), \bottom{SortGtenvCell{}}()) [constructor{}()] // no junk
  axiom{R} \equals{SortExps{}, R} (Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps'QuotRBraUnds'Exps{}(), inj{SortTypes{}, SortExps{}} (Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}())) [overload{}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps'QuotRBraUnds'Exps{}(), Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}())] // overloaded production
  axiom{R} \equals{SortExps{}, R} (Lbl'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(inj{SortType{}, SortExp{}} (K0:SortType{}),inj{SortTypes{}, SortExps{}} (K1:SortTypes{})), inj{SortTypes{}, SortExps{}} (Lbl'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types{}(K0:SortType{},K1:SortTypes{}))) [overload{}(Lbl'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(), Lbl'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types{}())] // overloaded production

// rules
// rule `#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`{K}(C,B1,_Gen0)=>B1 requires C ensures #token("true","Bool") [UNIQUE_ID(2b32069ac3f589174502fa507ebc88fab7c902854c0a9baa8ab09beb551232e2), org.kframework.attributes.Location(Location(2304,8,2304,59)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        VarC:SortBool{},
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarC:SortBool{}
          ),\and{R} (
          \in{SortK{}, R} (
            X1:SortK{},
            VarB1:SortK{}
          ),\and{R} (
          \in{SortK{}, R} (
            X2:SortK{},
            Var'Unds'Gen0:SortK{}
          ),
          \top{R} ()
        )))),
    \equals{SortK{},R} (
      Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortK{}}(X0:SortBool{},X1:SortK{},X2:SortK{}),
     \and{SortK{}} (
       VarB1:SortK{},
        \top{SortK{}}())))
  [UNIQUE'Unds'ID{}("2b32069ac3f589174502fa507ebc88fab7c902854c0a9baa8ab09beb551232e2"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2304,8,2304,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]")]

// rule `#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`{K}(C,_Gen0,B2)=>B2 requires `notBool_`(C) ensures #token("true","Bool") [UNIQUE_ID(651bff3fa53d464ac7dd7aa77e1ef6071e14c959eb6df97baa325e2ad300daaa), org.kframework.attributes.Location(Location(2305,8,2305,67)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        LblnotBool'Unds'{}(VarC:SortBool{}),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarC:SortBool{}
          ),\and{R} (
          \in{SortK{}, R} (
            X1:SortK{},
            Var'Unds'Gen0:SortK{}
          ),\and{R} (
          \in{SortK{}, R} (
            X2:SortK{},
            VarB2:SortK{}
          ),
          \top{R} ()
        )))),
    \equals{SortK{},R} (
      Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortK{}}(X0:SortBool{},X1:SortK{},X2:SortK{}),
     \and{SortK{}} (
       VarB2:SortK{},
        \top{SortK{}}())))
  [UNIQUE'Unds'ID{}("651bff3fa53d464ac7dd7aa77e1ef6071e14c959eb6df97baa325e2ad300daaa"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2305,8,2305,67)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]")]

// rule `#open(_)_K-IO_IOInt_String`(S)=>`#open(_,_)_K-IO_IOInt_String_String`(S,#token("\"r+\"","String")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7ad2779cd54b9009119458217cae5138026cc4ff244e54c28e64db21100f63d9), org.kframework.attributes.Location(Location(2479,8,2479,48)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarS:SortString{}
          ),
          \top{R} ()
        )),
    \equals{SortIOInt{},R} (
      Lbl'Hash'open'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'String{}(X0:SortString{}),
     \and{SortIOInt{}} (
       Lbl'Hash'open'LParUndsCommUndsRParUnds'K-IO'Unds'IOInt'Unds'String'Unds'String{}(VarS:SortString{},\dv{SortString{}}("r+")),
        \top{SortIOInt{}}())))
  [UNIQUE'Unds'ID{}("7ad2779cd54b9009119458217cae5138026cc4ff244e54c28e64db21100f63d9"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2479,8,2479,48)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `#stderr_K-IO_Int`(.KList)=>#token("2","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(75e0a8082acda4cf1e29caa6aaafb7f9a421e16421a41f2006943d6fab17a162), org.kframework.attributes.Location(Location(2576,8,2576,20)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortInt{},R} (
      Lbl'Hash'stderr'Unds'K-IO'Unds'Int{}(),
     \and{SortInt{}} (
       \dv{SortInt{}}("2"),
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("75e0a8082acda4cf1e29caa6aaafb7f9a421e16421a41f2006943d6fab17a162"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2576,8,2576,20)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `#stdin_K-IO_Int`(.KList)=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c7ffdc9908c28a954521816d680f4e5ec44a679c7231a8dd09d4700f50b6d8c3), org.kframework.attributes.Location(Location(2574,8,2574,19)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortInt{},R} (
      Lbl'Hash'stdin'Unds'K-IO'Unds'Int{}(),
     \and{SortInt{}} (
       \dv{SortInt{}}("0"),
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("c7ffdc9908c28a954521816d680f4e5ec44a679c7231a8dd09d4700f50b6d8c3"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2574,8,2574,19)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `#stdout_K-IO_Int`(.KList)=>#token("1","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4ad4f379ff9db687ff9dfd1b15052edbcd3342a2ed262ecdd38c769e177a592c), org.kframework.attributes.Location(Location(2575,8,2575,20)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortInt{},R} (
      Lbl'Hash'stdout'Unds'K-IO'Unds'Int{}(),
     \and{SortInt{}} (
       \dv{SortInt{}}("1"),
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("4ad4f379ff9db687ff9dfd1b15052edbcd3342a2ed262ecdd38c769e177a592c"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2575,8,2575,20)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer!__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`!__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(b8dc60332d81448a31a8e27f90f36e6a2630dd155bd31a138e0cc460ecaaa49f), cool, cool-like, label(SIMPLE-TYPED-STATIC-SYNTAX.!__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp1-cool), org.kframework.attributes.Location(Location(38,18,38,50)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("b8dc60332d81448a31a8e27f90f36e6a2630dd155bd31a138e0cc460ecaaa49f"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX.!__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(38,18,38,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer-__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`-__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(7f6991a8a7587d6e986ca342e748150a8228390de3ed4b79ef51b8b4e590a09d), cool, cool-like, label(SIMPLE-TYPED-STATIC-SYNTAX.-__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp1-cool), org.kframework.attributes.Location(Location(21,18,21,50)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("7f6991a8a7587d6e986ca342e748150a8228390de3ed4b79ef51b8b4e590a09d"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX.-__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(21,18,21,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_!=__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_!=__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(7af0fefea9790e00cc69f0de598e1a349893c58e05fc12439696f05deaa5133f), cool, cool-like, label(SIMPLE-TYPED-STATIC-SYNTAX._!=__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1-cool), non-assoc, org.kframework.attributes.Location(Location(37,18,37,61)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("7af0fefea9790e00cc69f0de598e1a349893c58e05fc12439696f05deaa5133f"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX._!=__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1-cool"), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(37,18,37,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_!=__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_!=__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(49aba6c8a3076810fa69ae1e6096506768e7a9848d5a929e6e1db7b3260b1a47), cool, cool-like, label(SIMPLE-TYPED-STATIC-SYNTAX._!=__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp2-cool), non-assoc, org.kframework.attributes.Location(Location(37,18,37,61)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("49aba6c8a3076810fa69ae1e6096506768e7a9848d5a929e6e1db7b3260b1a47"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX._!=__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp2-cool"), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(37,18,37,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_%__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_%__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(1ed0457fc10bf9d3bd8062d5ed66b8eabb76cab4fe0c50602725fbdac7baa8a0), cool, cool-like, label(SIMPLE-TYPED-STATIC-SYNTAX._%__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1-cool), left, org.kframework.attributes.Location(Location(27,18,27,56)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("1ed0457fc10bf9d3bd8062d5ed66b8eabb76cab4fe0c50602725fbdac7baa8a0"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX._%__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1-cool"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(27,18,27,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_%__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_%__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(bbbb502eb5b2edf5b141d685a73bff6f18f59845ef0c9ecbbaf324578bff4383), cool, cool-like, label(SIMPLE-TYPED-STATIC-SYNTAX._%__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp2-cool), left, org.kframework.attributes.Location(Location(27,18,27,56)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("bbbb502eb5b2edf5b141d685a73bff6f18f59845ef0c9ecbbaf324578bff4383"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX._%__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp2-cool"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(27,18,27,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_&&__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_&&__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(38d1359d5ae95e5583023d0fbda2954208266c92048b2ec112037c61b4120531), cool, cool-like, label(SIMPLE-TYPED-STATIC-SYNTAX._&&__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1-cool), left, org.kframework.attributes.Location(Location(40,18,40,56)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("38d1359d5ae95e5583023d0fbda2954208266c92048b2ec112037c61b4120531"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX._&&__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1-cool"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(40,18,40,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_&&__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_&&__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(5f439ec6f68a3312c6125800fa968d883cd5b536eb5773fdfd31f7c00a522dad), cool, cool-like, label(SIMPLE-TYPED-STATIC-SYNTAX._&&__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp2-cool), left, org.kframework.attributes.Location(Location(40,18,40,56)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("5f439ec6f68a3312c6125800fa968d883cd5b536eb5773fdfd31f7c00a522dad"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX._&&__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp2-cool"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(40,18,40,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_(_)_SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exps0_`(inj{Exps,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_(_)_SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exps`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(7d152f2a0cfa3772b1cd9926596effe362e444366300440676cf12774b2b96fb), cool, cool-like, label(SIMPLE-TYPED-STATIC-SYNTAX._(_)_SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exps1-cool), org.kframework.attributes.Location(Location(20,18,20,50)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarK1:SortExps{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(VarHOLE:SortExp{},VarK1:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("7d152f2a0cfa3772b1cd9926596effe362e444366300440676cf12774b2b96fb"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX._(_)_SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exps1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(20,18,20,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exps,KItem}(HOLE)~>`#freezer_(_)_SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exps1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_(_)_SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exps`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exps,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(cbdc5a09b4a2749a2662e35c277a38eafec45076347394385fd69ac331e6c3eb), cool, cool-like, label(SIMPLE-TYPED-STATIC-SYNTAX._(_)_SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exps2-cool), org.kframework.attributes.Location(Location(20,18,20,50)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),kseq{}(Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(VarK0:SortExp{},VarHOLE:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("cbdc5a09b4a2749a2662e35c277a38eafec45076347394385fd69ac331e6c3eb"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX._(_)_SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exps2-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(20,18,20,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_*__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_*__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(ca40c5f95abb8892e385de0c7e7b3074b5f110606dbd63587b1c6ed8c46ca01a), cool, cool-like, label(SIMPLE-TYPED-STATIC-SYNTAX._*__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1-cool), left, org.kframework.attributes.Location(Location(25,18,25,56)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("ca40c5f95abb8892e385de0c7e7b3074b5f110606dbd63587b1c6ed8c46ca01a"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX._*__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1-cool"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(25,18,25,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_*__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_*__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(d29b41087d186f4be242654230d402fb0827a36b1ae385797cd6bf0bd1569e70), cool, cool-like, label(SIMPLE-TYPED-STATIC-SYNTAX._*__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp2-cool), left, org.kframework.attributes.Location(Location(25,18,25,56)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("d29b41087d186f4be242654230d402fb0827a36b1ae385797cd6bf0bd1569e70"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX._*__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp2-cool"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(25,18,25,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_+__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_+__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(641bb50f8829438b6c2a81ff7c3128f03a0e12e32e052d5efacfdc9db5a6ae2e), cool, cool-like, label(SIMPLE-TYPED-STATIC-SYNTAX._+__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1-cool), left, org.kframework.attributes.Location(Location(29,18,29,56)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("641bb50f8829438b6c2a81ff7c3128f03a0e12e32e052d5efacfdc9db5a6ae2e"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX._+__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1-cool"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(29,18,29,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_+__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_+__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(233fa1fda2672234b7b7e39fb5756e50230ebf39d60b706b84ade1c82925f122), cool, cool-like, label(SIMPLE-TYPED-STATIC-SYNTAX._+__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp2-cool), left, org.kframework.attributes.Location(Location(29,18,29,56)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("233fa1fda2672234b7b7e39fb5756e50230ebf39d60b706b84ade1c82925f122"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX._+__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp2-cool"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(29,18,29,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_,__SIMPLE-TYPED-STATIC-SYNTAX_Exps_Exp_Exps0_`(inj{Exps,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exps,KItem}(`_,__SIMPLE-TYPED-STATIC-SYNTAX_Exps_Exp_Exps`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(68f003b3eaae6e4f71eda48be4b44ba5fbaa66e9f2a1965e328d098c7a9fd85a), cool, cool-like, klabel(exps), label(SIMPLE-TYPED-STATIC-SYNTAX.exps1-cool), org.kframework.attributes.Location(Location(44,19,44,64)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict, userList(*)]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarK1:SortExps{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(Lbl'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(VarHOLE:SortExp{},VarK1:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("68f003b3eaae6e4f71eda48be4b44ba5fbaa66e9f2a1965e328d098c7a9fd85a"), cool{}(), cool-like{}(), klabel{}("exps"), label{}("SIMPLE-TYPED-STATIC-SYNTAX.exps1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(44,19,44,64)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}(""), userList{}("*")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exps,KItem}(HOLE)~>`#freezer_,__SIMPLE-TYPED-STATIC-SYNTAX_Exps_Exp_Exps1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exps,KItem}(`_,__SIMPLE-TYPED-STATIC-SYNTAX_Exps_Exp_Exps`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exps,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(2e830dcb3b287dc4cdabc230b4fbe06a358a874e0ee230d726fb816bbca1d64a), cool, cool-like, klabel(exps), label(SIMPLE-TYPED-STATIC-SYNTAX.exps2-cool), org.kframework.attributes.Location(Location(44,19,44,64)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict, userList(*)]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),kseq{}(Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(Lbl'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(VarK0:SortExp{},VarHOLE:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("2e830dcb3b287dc4cdabc230b4fbe06a358a874e0ee230d726fb816bbca1d64a"), cool{}(), cool-like{}(), klabel{}("exps"), label{}("SIMPLE-TYPED-STATIC-SYNTAX.exps2-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(44,19,44,64)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}(""), userList{}("*")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_-__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_-__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(24790871712e1e294a98eb279e0f9b09c831c7b9d6063b80ff274889b33fd535), cool, cool-like, label(SIMPLE-TYPED-STATIC-SYNTAX._-__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1-cool), left, org.kframework.attributes.Location(Location(30,18,30,56)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("24790871712e1e294a98eb279e0f9b09c831c7b9d6063b80ff274889b33fd535"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX._-__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1-cool"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(30,18,30,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_-__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_-__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(535dd6e03adb86cee067c523961c5834bc671e5761726803f264ffd4b031701b), cool, cool-like, label(SIMPLE-TYPED-STATIC-SYNTAX._-__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp2-cool), left, org.kframework.attributes.Location(Location(30,18,30,56)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("535dd6e03adb86cee067c523961c5834bc671e5761726803f264ffd4b031701b"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX._-__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp2-cool"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(30,18,30,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_/__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_/__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(798b2d6ac07b1cdd6c84bfea22ae8bed4bfa49f86009b7478e6872e44c3cb068), cool, cool-like, label(SIMPLE-TYPED-STATIC-SYNTAX._/__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1-cool), left, org.kframework.attributes.Location(Location(26,18,26,56)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("798b2d6ac07b1cdd6c84bfea22ae8bed4bfa49f86009b7478e6872e44c3cb068"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX._/__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1-cool"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(26,18,26,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_/__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_/__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(f36838c8af6b59ee1e72d15e7dae2193c9d97f141f49c598829beb7e428388b4), cool, cool-like, label(SIMPLE-TYPED-STATIC-SYNTAX._/__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp2-cool), left, org.kframework.attributes.Location(Location(26,18,26,56)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("f36838c8af6b59ee1e72d15e7dae2193c9d97f141f49c598829beb7e428388b4"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX._/__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp2-cool"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(26,18,26,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`_;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(84711038735a4ffa496cea3143831696b5f067815db7b323497b6f744f7128a4), cool, cool-like, label(SIMPLE-TYPED-STATIC-SYNTAX._;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp1-cool), org.kframework.attributes.Location(Location(49,19,49,68)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("84711038735a4ffa496cea3143831696b5f067815db7b323497b6f744f7128a4"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX._;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(49,19,49,68)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_<=__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_<=__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(b909ca6e2fe64121003261108caee9fabb87fade09fd0a9496dab7a52bd2d9b8), cool, cool-like, label(SIMPLE-TYPED-STATIC-SYNTAX._<=__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1-cool), non-assoc, org.kframework.attributes.Location(Location(33,18,33,61)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("b909ca6e2fe64121003261108caee9fabb87fade09fd0a9496dab7a52bd2d9b8"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX._<=__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1-cool"), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(33,18,33,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_<=__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_<=__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(5e15bddbd634b3509394493fe1d45e603fa907c24bbe4f1946c900a8caef0e3f), cool, cool-like, label(SIMPLE-TYPED-STATIC-SYNTAX._<=__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp2-cool), non-assoc, org.kframework.attributes.Location(Location(33,18,33,61)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("5e15bddbd634b3509394493fe1d45e603fa907c24bbe4f1946c900a8caef0e3f"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX._<=__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp2-cool"), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(33,18,33,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_<__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_<__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(5b4afbf126ead03e68ef2c3f6333bc7d1f957ae33dafcb01dc477bb982684086), cool, cool-like, label(SIMPLE-TYPED-STATIC-SYNTAX._<__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1-cool), non-assoc, org.kframework.attributes.Location(Location(32,18,32,61)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("5b4afbf126ead03e68ef2c3f6333bc7d1f957ae33dafcb01dc477bb982684086"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX._<__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1-cool"), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(32,18,32,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_<__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_<__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(6f0147cd4df2595e581cf987195640f0c1eb37c828e80193a27b3147b480062a), cool, cool-like, label(SIMPLE-TYPED-STATIC-SYNTAX._<__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp2-cool), non-assoc, org.kframework.attributes.Location(Location(32,18,32,61)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("6f0147cd4df2595e581cf987195640f0c1eb37c828e80193a27b3147b480062a"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX._<__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp2-cool"), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(32,18,32,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_==__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_==__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(e6707771273f8edf76c791a2584de3c7d919d4d55e829ddfef0c833aa64ec5c4), cool, cool-like, label(SIMPLE-TYPED-STATIC-SYNTAX._==__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1-cool), non-assoc, org.kframework.attributes.Location(Location(36,18,36,61)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("e6707771273f8edf76c791a2584de3c7d919d4d55e829ddfef0c833aa64ec5c4"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX._==__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1-cool"), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(36,18,36,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_==__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_==__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(59eaa96be99d6ed478209e76ade635f9d7a998659aa901ad6c574c523bc998dc), cool, cool-like, label(SIMPLE-TYPED-STATIC-SYNTAX._==__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp2-cool), non-assoc, org.kframework.attributes.Location(Location(36,18,36,61)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("59eaa96be99d6ed478209e76ade635f9d7a998659aa901ad6c574c523bc998dc"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX._==__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp2-cool"), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(36,18,36,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_=__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_=__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(8c0886e16f0cd011eef32310f810b23adb4d40ad71d18503f128639872d93ba2), cool, cool-like, label(SIMPLE-TYPED-STATIC-SYNTAX._=__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp2-cool), org.kframework.attributes.Location(Location(43,18,43,60)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), right, strict(2)]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("8c0886e16f0cd011eef32310f810b23adb4d40ad71d18503f128639872d93ba2"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX._=__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp2-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(43,18,43,60)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), right{}(), strict{}("2")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_>=__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_>=__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(7de6fa2eb4c638a00aa157090d6483fc9e243dc9ceb4b50f7760652a6500e3ec), cool, cool-like, label(SIMPLE-TYPED-STATIC-SYNTAX._>=__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1-cool), non-assoc, org.kframework.attributes.Location(Location(35,18,35,61)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("7de6fa2eb4c638a00aa157090d6483fc9e243dc9ceb4b50f7760652a6500e3ec"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX._>=__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1-cool"), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(35,18,35,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_>=__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_>=__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(b30d8a0ba02bfab5624afcbdab990aeb9c3117836278f690dbd373b8357e9e79), cool, cool-like, label(SIMPLE-TYPED-STATIC-SYNTAX._>=__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp2-cool), non-assoc, org.kframework.attributes.Location(Location(35,18,35,61)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("b30d8a0ba02bfab5624afcbdab990aeb9c3117836278f690dbd373b8357e9e79"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX._>=__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp2-cool"), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(35,18,35,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_>__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_>__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(8879eef14f710f41e1697cfd0059b8d74d981dcfb3537b1b384d75fdd36efa00), cool, cool-like, label(SIMPLE-TYPED-STATIC-SYNTAX._>__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1-cool), non-assoc, org.kframework.attributes.Location(Location(34,18,34,61)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("8879eef14f710f41e1697cfd0059b8d74d981dcfb3537b1b384d75fdd36efa00"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX._>__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1-cool"), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(34,18,34,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_>__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_>__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(94275d183090f8ab2ec23c34d70a14f14f03675e3c9603c131028061cf450e69), cool, cool-like, label(SIMPLE-TYPED-STATIC-SYNTAX._>__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp2-cool), non-assoc, org.kframework.attributes.Location(Location(34,18,34,61)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("94275d183090f8ab2ec23c34d70a14f14f03675e3c9603c131028061cf450e69"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX._>__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp2-cool"), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(34,18,34,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_[_]_SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exps0_`(inj{Exps,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_[_]_SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exps`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(90166a16db148cb77e08f90ad436da4bb9f1691f30d838e28bada8292a0f62e6), cool, cool-like, label(SIMPLE-TYPED-STATIC-SYNTAX._[_]_SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exps1-cool), org.kframework.attributes.Location(Location(19,18,19,50)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarK1:SortExps{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(VarHOLE:SortExp{},VarK1:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("90166a16db148cb77e08f90ad436da4bb9f1691f30d838e28bada8292a0f62e6"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX._[_]_SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exps1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(19,18,19,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exps,KItem}(HOLE)~>`#freezer_[_]_SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exps1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_[_]_SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exps`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exps,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(6c888bb7922b7f9161d8bf9bfd4bab7dbb51b9673b805aaa866fcc088778d67e), cool, cool-like, label(SIMPLE-TYPED-STATIC-SYNTAX._[_]_SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exps2-cool), org.kframework.attributes.Location(Location(19,18,19,50)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),kseq{}(Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(VarK0:SortExp{},VarHOLE:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("6c888bb7922b7f9161d8bf9bfd4bab7dbb51b9673b805aaa866fcc088778d67e"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX._[_]_SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exps2-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(19,18,19,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exps,KItem}(HOLE)~>`#freezer__;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Type_Exps2_`(inj{Type,KItem}(_Gen0),inj{Exp,KItem}(_Gen1))~>_DotVar4),_Gen2,_Gen3,_Gen4)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`__;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Type_Exps`(_Gen0,`_,__SIMPLE-TYPED-STATIC-SYNTAX_Exps_Exp_Exps`(`_[_]_SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exps`(_Gen1,HOLE),inj{Types,Exps}(`.List{"_,__SIMPLE-TYPED-STATIC-SYNTAX_Types_Type_Types"}_Types`(.KList)))))~>_DotVar4),_Gen2,_Gen3,_Gen4)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exps,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(e638ba11170bd7b73339e53cc9ddb03019f1c15ad027096c24ced4b0301b3541), cool, cool-like, org.kframework.attributes.Location(Location(121,11,121,37)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),kseq{}(Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(kseq{}(inj{SortType{}, SortKItem{}}(Var'Unds'Gen0:SortType{}),dotk{}()),kseq{}(inj{SortExp{}, SortKItem{}}(Var'Unds'Gen1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen2:SortTenvCell{},Var'Unds'Gen3:SortCurrEnvVarCell{},Var'Unds'Gen4:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps{}(Var'Unds'Gen0:SortType{},Lbl'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(Lbl'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Var'Unds'Gen1:SortExp{},VarHOLE:SortExps{}),inj{SortTypes{}, SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}())))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen2:SortTenvCell{},Var'Unds'Gen3:SortCurrEnvVarCell{},Var'Unds'Gen4:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("e638ba11170bd7b73339e53cc9ddb03019f1c15ad027096c24ced4b0301b3541"), cool{}(), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(121,11,121,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(HOLE)~>`#freezer___SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Stmt_Stmt0_`(inj{Stmt,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`___SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Stmt_Stmt`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Stmt,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(40e7eeb12a2a7989d50afe47d3fd6bb871f77bcd867d38440a6c67a7f36b8ee5), cool, cool-like, label(SIMPLE-TYPED-STATIC-SYNTAX.___SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Stmt_Stmt1-cool), org.kframework.attributes.Location(Location(63,19,63,75)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), right, seqstrict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(VarHOLE:SortStmt{}),kseq{}(Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(VarK1:SortStmt{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortStmt{}, SortKItem{}}(VarHOLE:SortStmt{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(VarHOLE:SortStmt{},VarK1:SortStmt{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("40e7eeb12a2a7989d50afe47d3fd6bb871f77bcd867d38440a6c67a7f36b8ee5"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX.___SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Stmt_Stmt1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(63,19,63,75)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), right{}(), seqstrict{}()]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(HOLE)~>`#freezer___SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Stmt_Stmt1_`(inj{Stmt,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`___SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Stmt_Stmt`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Stmt,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(e26e78065c6c680ba60dca697e0c4e4c65099463fa4ddb5d4e0c343dd64cb01e), cool, cool-like, label(SIMPLE-TYPED-STATIC-SYNTAX.___SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Stmt_Stmt2-cool), org.kframework.attributes.Location(Location(63,19,63,75)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), right, seqstrict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(VarHOLE:SortStmt{}),kseq{}(Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(VarK0:SortStmt{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortStmt{}, SortKItem{}}(VarHOLE:SortStmt{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(VarK0:SortStmt{},VarHOLE:SortStmt{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("e26e78065c6c680ba60dca697e0c4e4c65099463fa4ddb5d4e0c343dd64cb01e"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX.___SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Stmt_Stmt2-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(63,19,63,75)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), right{}(), seqstrict{}()]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_||__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_||__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(e3104fbfc6393547bdaae3ded8fd1f0bbb8e915e8dbf148f36a7e12273564ba6), cool, cool-like, label(SIMPLE-TYPED-STATIC-SYNTAX._||__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1-cool), left, org.kframework.attributes.Location(Location(41,18,41,56)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("e3104fbfc6393547bdaae3ded8fd1f0bbb8e915e8dbf148f36a7e12273564ba6"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX._||__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1-cool"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(41,18,41,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_||__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_||__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(1a1d6cc2fa64ac3a3060507c0c3101682fd2ab1037cec485fffb4d532195e8c8), cool, cool-like, label(SIMPLE-TYPED-STATIC-SYNTAX._||__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp2-cool), left, org.kframework.attributes.Location(Location(41,18,41,56)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("1a1d6cc2fa64ac3a3060507c0c3101682fd2ab1037cec485fffb4d532195e8c8"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX._||__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp2-cool"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(41,18,41,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezeracquire_;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`acquire_;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(bb58788972ebbafeaf836ab82c02f8c3c1738292fc35c0009a80ddba7a27d9e5), cool, cool-like, label(SIMPLE-TYPED-STATIC-SYNTAX.acquire_;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp1-cool), org.kframework.attributes.Location(Location(60,19,60,68)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblacquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("bb58788972ebbafeaf836ab82c02f8c3c1738292fc35c0009a80ddba7a27d9e5"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX.acquire_;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(60,19,60,68)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerif(_)_else__SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp_Block_Block0_`(inj{Block,KItem}(K1),inj{Block,KItem}(K2))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`if(_)_else__SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp_Block_Block`(HOLE,K1,K2))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(1d49d5f2396340bc882e0db329e78643348515af2550c6f2840de3948b121e48), avoid, cool, cool-like, label(SIMPLE-TYPED-STATIC-SYNTAX.if(_)_else__SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp_Block_Block1-cool), org.kframework.attributes.Location(Location(50,19,50,75)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(kseq{}(inj{SortBlock{}, SortKItem{}}(VarK1:SortBlock{}),dotk{}()),kseq{}(inj{SortBlock{}, SortKItem{}}(VarK2:SortBlock{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(VarHOLE:SortExp{},VarK1:SortBlock{},VarK2:SortBlock{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("1d49d5f2396340bc882e0db329e78643348515af2550c6f2840de3948b121e48"), avoid{}(), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX.if(_)_else__SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp_Block_Block1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(50,19,50,75)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Block,KItem}(HOLE)~>`#freezerif(_)_else__SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp_Block_Block1_`(inj{Exp,KItem}(K0),inj{Block,KItem}(K2))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`if(_)_else__SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp_Block_Block`(K0,HOLE,K2))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Block,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(fd8f48e45777f3059e54ae020a375f6bef12bfc9dc7aaa13d5ec61319d75f9cb), avoid, cool, cool-like, label(SIMPLE-TYPED-STATIC-SYNTAX.if(_)_else__SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp_Block_Block2-cool), org.kframework.attributes.Location(Location(50,19,50,75)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlock{}, SortKItem{}}(VarHOLE:SortBlock{}),kseq{}(Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}()),kseq{}(inj{SortBlock{}, SortKItem{}}(VarK2:SortBlock{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortBlock{}, SortKItem{}}(VarHOLE:SortBlock{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(VarK0:SortExp{},VarHOLE:SortBlock{},VarK2:SortBlock{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("fd8f48e45777f3059e54ae020a375f6bef12bfc9dc7aaa13d5ec61319d75f9cb"), avoid{}(), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX.if(_)_else__SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp_Block_Block2-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(50,19,50,75)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Block,KItem}(HOLE)~>`#freezerif(_)_else__SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp_Block_Block2_`(inj{Exp,KItem}(K0),inj{Block,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`if(_)_else__SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp_Block_Block`(K0,K1,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Block,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(f9dc84505129ef30a1a0e25bf7156643eedaf1926492aa0ee77e58562854e205), avoid, cool, cool-like, label(SIMPLE-TYPED-STATIC-SYNTAX.if(_)_else__SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp_Block_Block3-cool), org.kframework.attributes.Location(Location(50,19,50,75)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlock{}, SortKItem{}}(VarHOLE:SortBlock{}),kseq{}(Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}()),kseq{}(inj{SortBlock{}, SortKItem{}}(VarK1:SortBlock{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortBlock{}, SortKItem{}}(VarHOLE:SortBlock{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(VarK0:SortExp{},VarK1:SortBlock{},VarHOLE:SortBlock{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("f9dc84505129ef30a1a0e25bf7156643eedaf1926492aa0ee77e58562854e205"), avoid{}(), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX.if(_)_else__SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp_Block_Block3-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(50,19,50,75)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerjoin_;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`join_;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(4b1681805d75cd2dbf1aed77ce49ba75c9647c3d547b3eb13a61a91d50792089), cool, cool-like, label(SIMPLE-TYPED-STATIC-SYNTAX.join_;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp1-cool), org.kframework.attributes.Location(Location(59,19,59,68)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbljoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("4b1681805d75cd2dbf1aed77ce49ba75c9647c3d547b3eb13a61a91d50792089"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX.join_;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(59,19,59,68)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerltype(_)_SIMPLE-TYPED-STATIC_Exp_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`ltype(_)_SIMPLE-TYPED-STATIC_Exp_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(82859227f1e6bd28c99179767f5ad0703cdde521efe143d649d3d1a38a1d0091), cool, cool-like, org.kframework.attributes.Location(Location(231,11,231,46)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lblltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("82859227f1e6bd28c99179767f5ad0703cdde521efe143d649d3d1a38a1d0091"), cool{}(), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(231,11,231,46)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exps,KItem}(HOLE)~>`#freezerprint(_);_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exps0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`print(_);_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exps`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exps,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(1b17cf685873afe43220528edc1ccd4eb4c93b2b19acc4ae1f4a9b4b6d21ee01), cool, cool-like, label(SIMPLE-TYPED-STATIC-SYNTAX.print(_);_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exps1-cool), org.kframework.attributes.Location(Location(56,19,56,68)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),kseq{}(Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps{}(VarHOLE:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("1b17cf685873afe43220528edc1ccd4eb4c93b2b19acc4ae1f4a9b4b6d21ee01"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX.print(_);_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exps1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(56,19,56,68)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerrelease_;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`release_;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(374c9b8e308db498ab06e3421fe47ab0d87f52cc255a3e334eb04871f502819b), cool, cool-like, label(SIMPLE-TYPED-STATIC-SYNTAX.release_;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp1-cool), org.kframework.attributes.Location(Location(61,19,61,68)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("374c9b8e308db498ab06e3421fe47ab0d87f52cc255a3e334eb04871f502819b"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX.release_;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(61,19,61,68)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerrendezvous_;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`rendezvous_;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(8a2ca546040ab6f9f8699bfacf02bc86cc16d07de15ff5017c2bfb9241df5c45), cool, cool-like, label(SIMPLE-TYPED-STATIC-SYNTAX.rendezvous_;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp1-cool), org.kframework.attributes.Location(Location(62,19,62,68)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("8a2ca546040ab6f9f8699bfacf02bc86cc16d07de15ff5017c2bfb9241df5c45"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX.rendezvous_;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(62,19,62,68)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerreturn_;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`return_;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(ebcfbb32e0784ca2c125b6dedc11f1bacfd3becd7e8edb15b4e9cf8e7f8b9688), cool, cool-like, label(SIMPLE-TYPED-STATIC-SYNTAX.return_;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp1-cool), org.kframework.attributes.Location(Location(54,19,54,68)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("ebcfbb32e0784ca2c125b6dedc11f1bacfd3becd7e8edb15b4e9cf8e7f8b9688"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX.return_;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(54,19,54,68)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezersizeOf(_)_SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`sizeOf(_)_SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(7b98dbc9ae1c14b98b700fa62e6174f275aced041333874534c2d1db13ed781e), cool, cool-like, label(SIMPLE-TYPED-STATIC-SYNTAX.sizeOf(_)_SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp1-cool), org.kframework.attributes.Location(Location(22,18,22,50)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(LblsizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("7b98dbc9ae1c14b98b700fa62e6174f275aced041333874534c2d1db13ed781e"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX.sizeOf(_)_SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(22,18,22,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerthrow_;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`throw_;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(331da2b4d3d4b78ea8a2f09bdf8abf44d995467c725a49f1fbdc5a1712bb90e1), cool, cool-like, label(SIMPLE-TYPED-STATIC-SYNTAX.throw_;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp1-cool), org.kframework.attributes.Location(Location(58,19,58,68)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("331da2b4d3d4b78ea8a2f09bdf8abf44d995467c725a49f1fbdc5a1712bb90e1"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX.throw_;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(58,19,58,68)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Block,KItem}(HOLE)~>`#freezertry_catch(_)__SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Block_Param_Block0_`(inj{Param,KItem}(K1),inj{Block,KItem}(K2))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`try_catch(_)__SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Block_Param_Block`(HOLE,K1,K2))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Block,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(0aad7dd5fcb12d0c90e0a67f4f3f7abe360164b875e5a2e7e97ca94c0d0856c1), cool, cool-like, label(SIMPLE-TYPED-STATIC-SYNTAX.try_catch(_)__SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Block_Param_Block1-cool), org.kframework.attributes.Location(Location(57,19,57,71)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict(1)]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlock{}, SortKItem{}}(VarHOLE:SortBlock{}),kseq{}(Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(kseq{}(inj{SortParam{}, SortKItem{}}(VarK1:SortParam{}),dotk{}()),kseq{}(inj{SortBlock{}, SortKItem{}}(VarK2:SortBlock{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortBlock{}, SortKItem{}}(VarHOLE:SortBlock{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbltry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block{}(VarHOLE:SortBlock{},VarK1:SortParam{},VarK2:SortBlock{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("0aad7dd5fcb12d0c90e0a67f4f3f7abe360164b875e5a2e7e97ca94c0d0856c1"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX.try_catch(_)__SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Block_Param_Block1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(57,19,57,71)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("1")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerwhile(_)__SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp_Block0_`(inj{Block,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`while(_)__SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp_Block`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(270ca1f7ab6a6459ff00618dfd9702a9c783f1991c02279fb3a4b81a1c401794), cool, cool-like, label(SIMPLE-TYPED-STATIC-SYNTAX.while(_)__SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp_Block1-cool), org.kframework.attributes.Location(Location(52,19,52,68)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(kseq{}(inj{SortBlock{}, SortKItem{}}(VarK1:SortBlock{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(VarHOLE:SortExp{},VarK1:SortBlock{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("270ca1f7ab6a6459ff00618dfd9702a9c783f1991c02279fb3a4b81a1c401794"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX.while(_)__SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp_Block1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(52,19,52,68)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Block,KItem}(HOLE)~>`#freezerwhile(_)__SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp_Block1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`while(_)__SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp_Block`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Block,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(255d8db9bc26bbd4d3d85d1dafba465e11d0c1364ec7e7556f8b6707fc80354b), cool, cool-like, label(SIMPLE-TYPED-STATIC-SYNTAX.while(_)__SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp_Block2-cool), org.kframework.attributes.Location(Location(52,19,52,68)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlock{}, SortKItem{}}(VarHOLE:SortBlock{}),kseq{}(Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortBlock{}, SortKItem{}}(VarHOLE:SortBlock{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(VarK0:SortExp{},VarHOLE:SortBlock{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("255d8db9bc26bbd4d3d85d1dafba465e11d0c1364ec7e7556f8b6707fc80354b"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX.while(_)__SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp_Block2-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(52,19,52,68)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Id,KItem}(X)~>_DotVar4),`.TenvCell`(.KList),`<currEnvVar>`(Phi),`.ReturnTypeCell`(.KList))),_DotVar3)),`<gtenv>`(`_Map_`(`_|->_`(inj{Id,KItem}(X),T),_DotVar2)) #as _Gen3),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(T~>_DotVar4),`.TenvCell`(.KList),`<currEnvVar>`(Phi),`.ReturnTypeCell`(.KList))),_DotVar3)),_Gen3),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5f946c6a0fbf713ddc36fde69dcfd14b84e130b9a8030cedd8d993ff896d0a57), cool-like, org.kframework.attributes.Location(Location(148,8,148,106)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarX:SortId{}),Var'Unds'DotVar4:SortK{})),Lbl'Stop'TenvCell{}(),Lbl'-LT-'currEnvVar'-GT-'{}(VarPhi:SortSet{}),Lbl'Stop'ReturnTypeCell{}())),Var'Unds'DotVar3:SortTaskCellSet{})),\and{SortGtenvCell{}}(Lbl'-LT-'gtenv'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarX:SortId{}),VarT:SortKItem{}),Var'Unds'DotVar2:SortMap{})),Var'Unds'Gen3:SortGtenvCell{})),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(VarT:SortKItem{},Var'Unds'DotVar4:SortK{})),Lbl'Stop'TenvCell{}(),Lbl'-LT-'currEnvVar'-GT-'{}(VarPhi:SortSet{}),Lbl'Stop'ReturnTypeCell{}())),Var'Unds'DotVar3:SortTaskCellSet{})),Var'Unds'Gen3:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("5f946c6a0fbf713ddc36fde69dcfd14b84e130b9a8030cedd8d993ff896d0a57"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(148,8,148,106)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Id,KItem}(X)~>_DotVar4),`<tenv>`(`_Map_`(`_|->_`(inj{Id,KItem}(X),T),_DotVar5)),_Gen0,_Gen1)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(T~>_DotVar4),`<tenv>`(`_Map_`(`_|->_`(inj{Id,KItem}(X),T),_DotVar5)),_Gen0,_Gen1)),_DotVar2)),_DotVar1),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(95f6ee58c267097a0adde39f07eb233ebf9950f55b9fb86c45eb6dfb89d57940), cool-like, org.kframework.attributes.Location(Location(143,8,143,58)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarX:SortId{}),Var'Unds'DotVar4:SortK{})),Lbl'-LT-'tenv'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarX:SortId{}),VarT:SortKItem{}),Var'Unds'DotVar5:SortMap{})),Var'Unds'Gen0:SortCurrEnvVarCell{},Var'Unds'Gen1:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(VarT:SortKItem{},Var'Unds'DotVar4:SortK{})),Lbl'-LT-'tenv'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarX:SortId{}),VarT:SortKItem{}),Var'Unds'DotVar5:SortMap{})),Var'Unds'Gen0:SortCurrEnvVarCell{},Var'Unds'Gen1:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("95f6ee58c267097a0adde39f07eb233ebf9950f55b9fb86c45eb6dfb89d57940"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(143,8,143,58)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Id,KItem}(X)~>_DotVar5),`<tenv>`(Rho),_Gen0,_Gen1)),_DotVar3)),`<gtenv>`(`_Map_`(`_|->_`(inj{Id,KItem}(X),T),_DotVar2)) #as _Gen5),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(T~>_DotVar5),`<tenv>`(Rho),_Gen0,_Gen1)),_DotVar3)),_Gen5),_DotVar0) requires `notBool_`(`Set:in`(inj{Id,KItem}(X),`keys(_)_MAP_Set_Map`(Rho))) ensures #token("true","Bool") [UNIQUE_ID(879a7a8c000c43f07fb841c19eb37f06b6e082d207917259a9f223dfbb8595c6), cool-like, org.kframework.attributes.Location(Location(145,8,146,37)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarX:SortId{}),Var'Unds'DotVar5:SortK{})),Lbl'-LT-'tenv'-GT-'{}(VarRho:SortMap{}),Var'Unds'Gen0:SortCurrEnvVarCell{},Var'Unds'Gen1:SortReturnTypeCell{})),Var'Unds'DotVar3:SortTaskCellSet{})),\and{SortGtenvCell{}}(Lbl'-LT-'gtenv'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarX:SortId{}),VarT:SortKItem{}),Var'Unds'DotVar2:SortMap{})),Var'Unds'Gen5:SortGtenvCell{})),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        LblnotBool'Unds'{}(LblSet'Coln'in{}(inj{SortId{}, SortKItem{}}(VarX:SortId{}),Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map{}(VarRho:SortMap{}))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(VarT:SortKItem{},Var'Unds'DotVar5:SortK{})),Lbl'-LT-'tenv'-GT-'{}(VarRho:SortMap{}),Var'Unds'Gen0:SortCurrEnvVarCell{},Var'Unds'Gen1:SortReturnTypeCell{})),Var'Unds'DotVar3:SortTaskCellSet{})),Var'Unds'Gen5:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("879a7a8c000c43f07fb841c19eb37f06b6e082d207917259a9f223dfbb8595c6"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(145,8,146,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{BlockOrStmtType,KItem}(_Gen0)),`<tenv>`(_Gen1),`<currEnvVar>`(_Gen2),_DotVar3)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(_DotVar2),_DotVar1),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(182e7a99a86a334c54be4836bc259c03437c0772cfd100b9167649a04ca13d98), org.kframework.attributes.Location(Location(137,8,137,109)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlockOrStmtType{}, SortKItem{}}(Var'Unds'Gen0:SortBlockOrStmtType{}),dotk{}())),Lbl'-LT-'tenv'-GT-'{}(Var'Unds'Gen1:SortMap{}),Lbl'-LT-'currEnvVar'-GT-'{}(Var'Unds'Gen2:SortSet{}),Var'Unds'DotVar3:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Var'Unds'DotVar2:SortTaskCellSet{}),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("182e7a99a86a334c54be4836bc259c03437c0772cfd100b9167649a04ca13d98"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(137,8,137,109)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Bool,KItem}(_Gen0)~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Type,KItem}(`bool_SIMPLE-TYPED-STATIC-SYNTAX_Type`(.KList))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c38bca0818448c0df2dc3559baf588fcaffdab3da06404f3c0ae388eba0c60a7), cool-like, org.kframework.attributes.Location(Location(140,8,140,22)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBool{}, SortKItem{}}(Var'Unds'Gen0:SortBool{}),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortTenvCell{},Var'Unds'Gen2:SortCurrEnvVarCell{},Var'Unds'Gen3:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortType{}, SortKItem{}}(Lblbool'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortTenvCell{},Var'Unds'Gen2:SortCurrEnvVarCell{},Var'Unds'Gen3:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("c38bca0818448c0df2dc3559baf588fcaffdab3da06404f3c0ae388eba0c60a7"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(140,8,140,22)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Int,KItem}(_Gen0)~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Type,KItem}(`int_SIMPLE-TYPED-STATIC-SYNTAX_Type`(.KList))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3beb79de1d473b08e291b234ba8a42deb574d8a77b2c642a86fa993fb553f538), cool-like, org.kframework.attributes.Location(Location(139,8,139,20)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInt{}, SortKItem{}}(Var'Unds'Gen0:SortInt{}),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortTenvCell{},Var'Unds'Gen2:SortCurrEnvVarCell{},Var'Unds'Gen3:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortType{}, SortKItem{}}(Lblint'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortTenvCell{},Var'Unds'Gen2:SortCurrEnvVarCell{},Var'Unds'Gen3:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("3beb79de1d473b08e291b234ba8a42deb574d8a77b2c642a86fa993fb553f538"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(139,8,139,20)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{String,KItem}(_Gen0)~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Type,KItem}(`string_SIMPLE-TYPED-STATIC-SYNTAX_Type`(.KList))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(51c4f836bdfebaff8acd79c339e1d6b3c4b8e23f48d568c145f25c9e322a9e22), cool-like, org.kframework.attributes.Location(Location(141,8,141,26)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortString{}, SortKItem{}}(Var'Unds'Gen0:SortString{}),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortTenvCell{},Var'Unds'Gen2:SortCurrEnvVarCell{},Var'Unds'Gen3:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortType{}, SortKItem{}}(Lblstring'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortTenvCell{},Var'Unds'Gen2:SortCurrEnvVarCell{},Var'Unds'Gen3:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("51c4f836bdfebaff8acd79c339e1d6b3c4b8e23f48d568c145f25c9e322a9e22"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(141,8,141,26)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`!__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer!__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(cbca5fb4157d246bfef21a0df652ffea32305f591a605c9dd26898012fb50ad5), heat, label(SIMPLE-TYPED-STATIC-SYNTAX.!__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp1-heat), org.kframework.attributes.Location(Location(38,18,38,50)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("cbca5fb4157d246bfef21a0df652ffea32305f591a605c9dd26898012fb50ad5"), heat{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX.!__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(38,18,38,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`!__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp`(inj{Type,Exp}(`bool_SIMPLE-TYPED-STATIC-SYNTAX_Type`(.KList))))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Type,KItem}(`bool_SIMPLE-TYPED-STATIC-SYNTAX_Type`(.KList))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(81fc888c67b9ee8973265053ba1fa87f3be172c6f79ffdda9bb04cf076e9e3e6), org.kframework.attributes.Location(Location(168,8,168,22)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'BangUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(inj{SortType{}, SortExp{}}(Lblbool'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortType{}, SortKItem{}}(Lblbool'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("81fc888c67b9ee8973265053ba1fa87f3be172c6f79ffdda9bb04cf076e9e3e6"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,8,168,22)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`++__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`ltype(_)_SIMPLE-TYPED-STATIC_Exp_Exp`(HOLE))~>`#freezer++__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(ff003f73cb0f410cfcff5812376872f081817cbdf4b64981714d77041c0f4dec), heat, org.kframework.attributes.Location(Location(150,11,150,34)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lblltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{})),kseq{}(Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("ff003f73cb0f410cfcff5812376872f081817cbdf4b64981714d77041c0f4dec"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(150,11,150,34)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`++__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp`(inj{Type,Exp}(`int_SIMPLE-TYPED-STATIC-SYNTAX_Type`(.KList))))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Type,KItem}(`int_SIMPLE-TYPED-STATIC-SYNTAX_Type`(.KList))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b8e242ec7a2d102e240cd139701f90477a1931328415e93d36dcfc3d1f0dd449), org.kframework.attributes.Location(Location(151,8,151,21)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(inj{SortType{}, SortExp{}}(Lblint'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortType{}, SortKItem{}}(Lblint'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("b8e242ec7a2d102e240cd139701f90477a1931328415e93d36dcfc3d1f0dd449"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(151,8,151,21)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`-__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer-__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(769c61809d3a9f29f09a8d1ac5971344f2ce77cda3ecf23f2568b9d881a57de1), heat, label(SIMPLE-TYPED-STATIC-SYNTAX.-__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp1-heat), org.kframework.attributes.Location(Location(21,18,21,50)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("769c61809d3a9f29f09a8d1ac5971344f2ce77cda3ecf23f2568b9d881a57de1"), heat{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX.-__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(21,18,21,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`-__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp`(inj{Type,Exp}(`int_SIMPLE-TYPED-STATIC-SYNTAX_Type`(.KList))))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Type,KItem}(`int_SIMPLE-TYPED-STATIC-SYNTAX_Type`(.KList))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(bbfa722f69811d6991f3867ea988eea0d003aaa700b60c12616af2c355367921), org.kframework.attributes.Location(Location(159,8,159,20)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(inj{SortType{}, SortExp{}}(Lblint'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortType{}, SortKItem{}}(Lblint'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("bbfa722f69811d6991f3867ea988eea0d003aaa700b60c12616af2c355367921"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(159,8,159,20)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_!=__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_!=__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(4712f7eb543f2762fdbeac8ce1b78e4691cc32171f65298989ab135314703655), heat, label(SIMPLE-TYPED-STATIC-SYNTAX._!=__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1-heat), non-assoc, org.kframework.attributes.Location(Location(37,18,37,61)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("4712f7eb543f2762fdbeac8ce1b78e4691cc32171f65298989ab135314703655"), heat{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX._!=__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1-heat"), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(37,18,37,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_!=__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_!=__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(417caf6bb810a4e03a3257e188791c3c0b6471b3d079a7a054d778b312b35cf0), heat, label(SIMPLE-TYPED-STATIC-SYNTAX._!=__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp2-heat), non-assoc, org.kframework.attributes.Location(Location(37,18,37,61)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("417caf6bb810a4e03a3257e188791c3c0b6471b3d079a7a054d778b312b35cf0"), heat{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX._!=__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp2-heat"), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(37,18,37,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_!=__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(inj{Type,Exp}(T),inj{Type,Exp}(T)))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Type,KItem}(`bool_SIMPLE-TYPED-STATIC-SYNTAX_Type`(.KList))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5adddaf7ed1e8f9ec579ee6c105d2cb886604b15e52954254b60b47eb5a1d74d), org.kframework.attributes.Location(Location(165,8,165,27)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortType{}, SortExp{}}(VarT:SortType{}),inj{SortType{}, SortExp{}}(VarT:SortType{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortType{}, SortKItem{}}(Lblbool'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("5adddaf7ed1e8f9ec579ee6c105d2cb886604b15e52954254b60b47eb5a1d74d"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(165,8,165,27)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_%__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_%__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(e9027ab9d8b123320d516646964dc2c31d42cfce1f7baa68b0ff047e5eb97157), heat, label(SIMPLE-TYPED-STATIC-SYNTAX._%__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1-heat), left, org.kframework.attributes.Location(Location(27,18,27,56)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("e9027ab9d8b123320d516646964dc2c31d42cfce1f7baa68b0ff047e5eb97157"), heat{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX._%__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1-heat"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(27,18,27,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_%__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_%__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(b26666811076f349237fbb256b73ab04632fb7aa76cddc4195fa041b0505751c), heat, label(SIMPLE-TYPED-STATIC-SYNTAX._%__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp2-heat), left, org.kframework.attributes.Location(Location(27,18,27,56)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("b26666811076f349237fbb256b73ab04632fb7aa76cddc4195fa041b0505751c"), heat{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX._%__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp2-heat"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(27,18,27,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_%__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(inj{Type,Exp}(`int_SIMPLE-TYPED-STATIC-SYNTAX_Type`(.KList)),inj{Type,Exp}(`int_SIMPLE-TYPED-STATIC-SYNTAX_Type`(.KList))))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Type,KItem}(`int_SIMPLE-TYPED-STATIC-SYNTAX_Type`(.KList))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(05d4822d8fb21a4a581d396b4d4dc1e4da511ac449bef0c441d3307a414b1b56), org.kframework.attributes.Location(Location(158,8,158,24)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPercUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortType{}, SortExp{}}(Lblint'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}()),inj{SortType{}, SortExp{}}(Lblint'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortType{}, SortKItem{}}(Lblint'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("05d4822d8fb21a4a581d396b4d4dc1e4da511ac449bef0c441d3307a414b1b56"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(158,8,158,24)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_&&__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_&&__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(06328acb054ee794341e0c0efa585ad528efbad80147461eabca8b7cc7e59d7e), heat, label(SIMPLE-TYPED-STATIC-SYNTAX._&&__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1-heat), left, org.kframework.attributes.Location(Location(40,18,40,56)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("06328acb054ee794341e0c0efa585ad528efbad80147461eabca8b7cc7e59d7e"), heat{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX._&&__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1-heat"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(40,18,40,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_&&__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_&&__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(d7334e090e8c46079c9e06151087282e2856ae4d1d173d3e54cec0d34a6eb1e1), heat, label(SIMPLE-TYPED-STATIC-SYNTAX._&&__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp2-heat), left, org.kframework.attributes.Location(Location(40,18,40,56)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("d7334e090e8c46079c9e06151087282e2856ae4d1d173d3e54cec0d34a6eb1e1"), heat{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX._&&__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp2-heat"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(40,18,40,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_&&__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(inj{Type,Exp}(`bool_SIMPLE-TYPED-STATIC-SYNTAX_Type`(.KList)),inj{Type,Exp}(`bool_SIMPLE-TYPED-STATIC-SYNTAX_Type`(.KList))))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Type,KItem}(`bool_SIMPLE-TYPED-STATIC-SYNTAX_Type`(.KList))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(57c79ee3ba33c34518f0079e1cd045882a38625775eae363a07f05df685ec751), org.kframework.attributes.Location(Location(166,8,166,28)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortType{}, SortExp{}}(Lblbool'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}()),inj{SortType{}, SortExp{}}(Lblbool'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortType{}, SortKItem{}}(Lblbool'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("57c79ee3ba33c34518f0079e1cd045882a38625775eae363a07f05df685ec751"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(166,8,166,28)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_(_)_SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exps`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_(_)_SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exps0_`(inj{Exps,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(61017104841493bcf09a2d25a4bb01589c1cccfdf8c60a2a3bbd83eca41f57e3), heat, label(SIMPLE-TYPED-STATIC-SYNTAX._(_)_SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exps1-heat), org.kframework.attributes.Location(Location(20,18,20,50)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(VarHOLE:SortExp{},VarK1:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarK1:SortExps{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("61017104841493bcf09a2d25a4bb01589c1cccfdf8c60a2a3bbd83eca41f57e3"), heat{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX._(_)_SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exps1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(20,18,20,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_(_)_SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exps`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exps,KItem}(HOLE)~>`#freezer_(_)_SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exps1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exps,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(6e8e28df20aaccc3fc3f15d6658001b37f8bce94611232c93727269c5f7995f1), heat, label(SIMPLE-TYPED-STATIC-SYNTAX._(_)_SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exps2-heat), org.kframework.attributes.Location(Location(20,18,20,50)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(VarK0:SortExp{},VarHOLE:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),kseq{}(Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("6e8e28df20aaccc3fc3f15d6658001b37f8bce94611232c93727269c5f7995f1"), heat{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX._(_)_SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exps2-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(20,18,20,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_(_)_SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exps`(inj{Type,Exp}(`_->__SIMPLE-TYPED-STATIC-SYNTAX_Type_Types_Type`(Ts,T)),inj{Types,Exps}(Ts)))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Type,KItem}(T)~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_=/=K_`(inj{Types,KItem}(Ts),inj{Types,KItem}(`.List{"_,__SIMPLE-TYPED-STATIC-SYNTAX_Types_Type_Types"}_Types`(.KList))) ensures #token("true","Bool") [UNIQUE_ID(0c67f389b7bb78a579fb85f8525d9f7c9700afbfcf7bc01e3d93e76e3c7cfbf0), org.kframework.attributes.Location(Location(187,8,187,56)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(inj{SortType{}, SortExp{}}(Lbl'Unds'-'-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type'Unds'Types'Unds'Type{}(VarTs:SortTypes{},VarT:SortType{})),inj{SortTypes{}, SortExps{}}(VarTs:SortTypes{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'UndsEqlsSlshEqls'K'Unds'{}(kseq{}(inj{SortTypes{}, SortKItem{}}(VarTs:SortTypes{}),dotk{}()),kseq{}(inj{SortTypes{}, SortKItem{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}()),dotk{}())),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortType{}, SortKItem{}}(VarT:SortType{}),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("0c67f389b7bb78a579fb85f8525d9f7c9700afbfcf7bc01e3d93e76e3c7cfbf0"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(187,8,187,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_(_)_SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exps`(inj{Type,Exp}(`_->__SIMPLE-TYPED-STATIC-SYNTAX_Type_Types_Type`(`_,__SIMPLE-TYPED-STATIC-SYNTAX_Types_Type_Types`(`void_SIMPLE-TYPED-STATIC-SYNTAX_Type`(.KList),`.List{"_,__SIMPLE-TYPED-STATIC-SYNTAX_Types_Type_Types"}_Types`(.KList)),T)),inj{Types,Exps}(`.List{"_,__SIMPLE-TYPED-STATIC-SYNTAX_Types_Type_Types"}_Types`(.KList))))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Type,KItem}(T)~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(793d16ae85a2e172bfd22aee1e447af8d46edcddad43a1a52913fcc326f39c66), org.kframework.attributes.Location(Location(188,8,188,32)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(inj{SortType{}, SortExp{}}(Lbl'Unds'-'-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type'Unds'Types'Unds'Type{}(Lbl'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types{}(Lblvoid'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}(),Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}()),VarT:SortType{})),inj{SortTypes{}, SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortType{}, SortKItem{}}(VarT:SortType{}),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("793d16ae85a2e172bfd22aee1e447af8d46edcddad43a1a52913fcc326f39c66"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(188,8,188,32)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_*__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_*__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(be1049571e46f3cf870d47c8cc370e8d80c7e4694fa0655d1e6b57e00f49b71c), heat, label(SIMPLE-TYPED-STATIC-SYNTAX._*__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1-heat), left, org.kframework.attributes.Location(Location(25,18,25,56)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("be1049571e46f3cf870d47c8cc370e8d80c7e4694fa0655d1e6b57e00f49b71c"), heat{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX._*__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1-heat"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(25,18,25,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_*__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_*__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(02b25867158047a8390b6e0efcaac59ac199064ffcf117b5df67a964c7893067), heat, label(SIMPLE-TYPED-STATIC-SYNTAX._*__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp2-heat), left, org.kframework.attributes.Location(Location(25,18,25,56)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("02b25867158047a8390b6e0efcaac59ac199064ffcf117b5df67a964c7893067"), heat{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX._*__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp2-heat"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(25,18,25,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_*__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(inj{Type,Exp}(`int_SIMPLE-TYPED-STATIC-SYNTAX_Type`(.KList)),inj{Type,Exp}(`int_SIMPLE-TYPED-STATIC-SYNTAX_Type`(.KList))))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Type,KItem}(`int_SIMPLE-TYPED-STATIC-SYNTAX_Type`(.KList))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0e7fbcff1740f3c10afb849b6312ed53543c1da6ec89ad9354cca847f38f42dc), org.kframework.attributes.Location(Location(156,8,156,24)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsStarUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortType{}, SortExp{}}(Lblint'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}()),inj{SortType{}, SortExp{}}(Lblint'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortType{}, SortKItem{}}(Lblint'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("0e7fbcff1740f3c10afb849b6312ed53543c1da6ec89ad9354cca847f38f42dc"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(156,8,156,24)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_+__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_+__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(1a4a3b0c056ce0f335e41b37c360fc314ed04609941ae84f0583af8869799415), heat, label(SIMPLE-TYPED-STATIC-SYNTAX._+__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1-heat), left, org.kframework.attributes.Location(Location(29,18,29,56)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("1a4a3b0c056ce0f335e41b37c360fc314ed04609941ae84f0583af8869799415"), heat{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX._+__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1-heat"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(29,18,29,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_+__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_+__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(1dd31f1f1044990cbd8fb7cf3c5770f594f41e7fb90eab1fa017ea3133b048e7), heat, label(SIMPLE-TYPED-STATIC-SYNTAX._+__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp2-heat), left, org.kframework.attributes.Location(Location(29,18,29,56)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("1dd31f1f1044990cbd8fb7cf3c5770f594f41e7fb90eab1fa017ea3133b048e7"), heat{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX._+__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp2-heat"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(29,18,29,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_+__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(inj{Type,Exp}(`int_SIMPLE-TYPED-STATIC-SYNTAX_Type`(.KList)),inj{Type,Exp}(`int_SIMPLE-TYPED-STATIC-SYNTAX_Type`(.KList))))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Type,KItem}(`int_SIMPLE-TYPED-STATIC-SYNTAX_Type`(.KList))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e3ab8c4ba051b6443bf971b3db311c5de6b36de8ef833954276f751639359451), org.kframework.attributes.Location(Location(153,8,153,24)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortType{}, SortExp{}}(Lblint'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}()),inj{SortType{}, SortExp{}}(Lblint'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortType{}, SortKItem{}}(Lblint'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("e3ab8c4ba051b6443bf971b3db311c5de6b36de8ef833954276f751639359451"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(153,8,153,24)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_+__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(inj{Type,Exp}(`string_SIMPLE-TYPED-STATIC-SYNTAX_Type`(.KList)),inj{Type,Exp}(`string_SIMPLE-TYPED-STATIC-SYNTAX_Type`(.KList))))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Type,KItem}(`string_SIMPLE-TYPED-STATIC-SYNTAX_Type`(.KList))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(74ee799992faa856d17c1ee2d105f1f5ad9145dd97b2ffd019c8f7ee1276a8fc), org.kframework.attributes.Location(Location(154,8,154,33)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortType{}, SortExp{}}(Lblstring'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}()),inj{SortType{}, SortExp{}}(Lblstring'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortType{}, SortKItem{}}(Lblstring'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("74ee799992faa856d17c1ee2d105f1f5ad9145dd97b2ffd019c8f7ee1276a8fc"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(154,8,154,33)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exps,KItem}(`_,__SIMPLE-TYPED-STATIC-SYNTAX_Exps_Exp_Exps`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_,__SIMPLE-TYPED-STATIC-SYNTAX_Exps_Exp_Exps0_`(inj{Exps,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(0ae969582b6c18cc03ed4e3251961422a91f40fb99500ad3d14fd6d0699653a9), heat, klabel(exps), label(SIMPLE-TYPED-STATIC-SYNTAX.exps1-heat), org.kframework.attributes.Location(Location(44,19,44,64)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict, userList(*)]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(Lbl'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(VarHOLE:SortExp{},VarK1:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarK1:SortExps{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("0ae969582b6c18cc03ed4e3251961422a91f40fb99500ad3d14fd6d0699653a9"), heat{}(), klabel{}("exps"), label{}("SIMPLE-TYPED-STATIC-SYNTAX.exps1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(44,19,44,64)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}(""), userList{}("*")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exps,KItem}(`_,__SIMPLE-TYPED-STATIC-SYNTAX_Exps_Exp_Exps`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exps,KItem}(HOLE)~>`#freezer_,__SIMPLE-TYPED-STATIC-SYNTAX_Exps_Exp_Exps1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exps,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(bed0ec5250e3148e1050ebd5a743428947c22adace7cc30012a85de2659ea3dd), heat, klabel(exps), label(SIMPLE-TYPED-STATIC-SYNTAX.exps2-heat), org.kframework.attributes.Location(Location(44,19,44,64)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict, userList(*)]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(Lbl'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(VarK0:SortExp{},VarHOLE:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),kseq{}(Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("bed0ec5250e3148e1050ebd5a743428947c22adace7cc30012a85de2659ea3dd"), heat{}(), klabel{}("exps"), label{}("SIMPLE-TYPED-STATIC-SYNTAX.exps2-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(44,19,44,64)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}(""), userList{}("*")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_-__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_-__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(83c225eb2d6503c35937077d57c868b0e08f8e2502fddc6a4cf859ac8fa85820), heat, label(SIMPLE-TYPED-STATIC-SYNTAX._-__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1-heat), left, org.kframework.attributes.Location(Location(30,18,30,56)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("83c225eb2d6503c35937077d57c868b0e08f8e2502fddc6a4cf859ac8fa85820"), heat{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX._-__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1-heat"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(30,18,30,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_-__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_-__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(05937602d8d879f20ccb31ada63f595348c4647bcb356c1d8cee8223fd86d09b), heat, label(SIMPLE-TYPED-STATIC-SYNTAX._-__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp2-heat), left, org.kframework.attributes.Location(Location(30,18,30,56)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("05937602d8d879f20ccb31ada63f595348c4647bcb356c1d8cee8223fd86d09b"), heat{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX._-__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp2-heat"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(30,18,30,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_-__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(inj{Type,Exp}(`int_SIMPLE-TYPED-STATIC-SYNTAX_Type`(.KList)),inj{Type,Exp}(`int_SIMPLE-TYPED-STATIC-SYNTAX_Type`(.KList))))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Type,KItem}(`int_SIMPLE-TYPED-STATIC-SYNTAX_Type`(.KList))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ba272ed249b1175d86a1969da75f6337bdf050760a15fdf9972dcdf06499d81d), org.kframework.attributes.Location(Location(155,8,155,24)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortType{}, SortExp{}}(Lblint'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}()),inj{SortType{}, SortExp{}}(Lblint'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortType{}, SortKItem{}}(Lblint'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("ba272ed249b1175d86a1969da75f6337bdf050760a15fdf9972dcdf06499d81d"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(155,8,155,24)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_/__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_/__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(51c02ab1544670b7c0d254a69da73e16e872617360dff0377dfba5657f879b6f), heat, label(SIMPLE-TYPED-STATIC-SYNTAX._/__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1-heat), left, org.kframework.attributes.Location(Location(26,18,26,56)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("51c02ab1544670b7c0d254a69da73e16e872617360dff0377dfba5657f879b6f"), heat{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX._/__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1-heat"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(26,18,26,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_/__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_/__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(17ff86645c7432a623c1ae7a8acd8173233e2f181231a6f328602b5b7b3db242), heat, label(SIMPLE-TYPED-STATIC-SYNTAX._/__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp2-heat), left, org.kframework.attributes.Location(Location(26,18,26,56)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("17ff86645c7432a623c1ae7a8acd8173233e2f181231a6f328602b5b7b3db242"), heat{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX._/__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp2-heat"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(26,18,26,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_/__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(inj{Type,Exp}(`int_SIMPLE-TYPED-STATIC-SYNTAX_Type`(.KList)),inj{Type,Exp}(`int_SIMPLE-TYPED-STATIC-SYNTAX_Type`(.KList))))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Type,KItem}(`int_SIMPLE-TYPED-STATIC-SYNTAX_Type`(.KList))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ac3d3c10af04123d52a788d2da69f1c38ca7f037a5564e1c07d49222d26ef0d0), org.kframework.attributes.Location(Location(157,8,157,24)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortType{}, SortExp{}}(Lblint'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}()),inj{SortType{}, SortExp{}}(Lblint'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortType{}, SortKItem{}}(Lblint'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("ac3d3c10af04123d52a788d2da69f1c38ca7f037a5564e1c07d49222d26ef0d0"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(157,8,157,24)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`_;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(aac8387505c6e7e072dc7d4d12ef4796ec612e6dc186784a1dd6f955a3ca1eb2), heat, label(SIMPLE-TYPED-STATIC-SYNTAX._;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp1-heat), org.kframework.attributes.Location(Location(49,19,49,68)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("aac8387505c6e7e072dc7d4d12ef4796ec612e6dc186784a1dd6f955a3ca1eb2"), heat{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX._;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(49,19,49,68)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`_;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp`(inj{Type,Exp}(_Gen0)))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{BlockOrStmtType,KItem}(`stmt_SIMPLE-TYPED-STATIC_BlockOrStmtType`(.KList))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a1374b255822aa440432539a0f1987572d59d4a9644083719ea1df00ad677116), org.kframework.attributes.Location(Location(198,8,198,23)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(inj{SortType{}, SortExp{}}(Var'Unds'Gen0:SortType{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortTenvCell{},Var'Unds'Gen2:SortCurrEnvVarCell{},Var'Unds'Gen3:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlockOrStmtType{}, SortKItem{}}(Lblstmt'Unds'SIMPLE-TYPED-STATIC'Unds'BlockOrStmtType{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortTenvCell{},Var'Unds'Gen2:SortCurrEnvVarCell{},Var'Unds'Gen3:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("a1374b255822aa440432539a0f1987572d59d4a9644083719ea1df00ad677116"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(198,8,198,23)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_<=__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_<=__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(8ae34232c360bc4e7540ceed3926e4013180c52f2f697e09c6350456a7878f21), heat, label(SIMPLE-TYPED-STATIC-SYNTAX._<=__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1-heat), non-assoc, org.kframework.attributes.Location(Location(33,18,33,61)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("8ae34232c360bc4e7540ceed3926e4013180c52f2f697e09c6350456a7878f21"), heat{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX._<=__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1-heat"), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(33,18,33,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_<=__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_<=__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(c269c1f06483a51fb7e910bcb509246a38446c817356fc1764ec15e3684a6096), heat, label(SIMPLE-TYPED-STATIC-SYNTAX._<=__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp2-heat), non-assoc, org.kframework.attributes.Location(Location(33,18,33,61)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("c269c1f06483a51fb7e910bcb509246a38446c817356fc1764ec15e3684a6096"), heat{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX._<=__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp2-heat"), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(33,18,33,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_<=__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(inj{Type,Exp}(`int_SIMPLE-TYPED-STATIC-SYNTAX_Type`(.KList)),inj{Type,Exp}(`int_SIMPLE-TYPED-STATIC-SYNTAX_Type`(.KList))))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Type,KItem}(`bool_SIMPLE-TYPED-STATIC-SYNTAX_Type`(.KList))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a4a76413cdef28b6734e28ef965e4d02021a267edb06e4d8462e3f58e7b6d08a), org.kframework.attributes.Location(Location(161,8,161,26)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortType{}, SortExp{}}(Lblint'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}()),inj{SortType{}, SortExp{}}(Lblint'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortType{}, SortKItem{}}(Lblbool'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("a4a76413cdef28b6734e28ef965e4d02021a267edb06e4d8462e3f58e7b6d08a"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(161,8,161,26)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_<__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_<__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(e40106ca946dfbeb2f2e836fa255353504b4efdd04b2b83b10cf3dea2bb797e4), heat, label(SIMPLE-TYPED-STATIC-SYNTAX._<__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1-heat), non-assoc, org.kframework.attributes.Location(Location(32,18,32,61)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("e40106ca946dfbeb2f2e836fa255353504b4efdd04b2b83b10cf3dea2bb797e4"), heat{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX._<__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1-heat"), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(32,18,32,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_<__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_<__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(d0d129b507ee272d1e38e56f47614437934871055c5053e9f05cee9391574943), heat, label(SIMPLE-TYPED-STATIC-SYNTAX._<__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp2-heat), non-assoc, org.kframework.attributes.Location(Location(32,18,32,61)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("d0d129b507ee272d1e38e56f47614437934871055c5053e9f05cee9391574943"), heat{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX._<__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp2-heat"), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(32,18,32,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_<__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(inj{Type,Exp}(`int_SIMPLE-TYPED-STATIC-SYNTAX_Type`(.KList)),inj{Type,Exp}(`int_SIMPLE-TYPED-STATIC-SYNTAX_Type`(.KList))))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Type,KItem}(`bool_SIMPLE-TYPED-STATIC-SYNTAX_Type`(.KList))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e0148e7ea1cfe8e27a467ba9ea06b3b688f58a756e3e78ad78758a36876c88f3), org.kframework.attributes.Location(Location(160,8,160,25)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortType{}, SortExp{}}(Lblint'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}()),inj{SortType{}, SortExp{}}(Lblint'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortType{}, SortKItem{}}(Lblbool'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("e0148e7ea1cfe8e27a467ba9ea06b3b688f58a756e3e78ad78758a36876c88f3"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(160,8,160,25)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_==__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_==__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(7e0881270e2377e31e3db93d4eec920df0742d85a3bf0fa3636b1b5c430b9ddd), heat, label(SIMPLE-TYPED-STATIC-SYNTAX._==__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1-heat), non-assoc, org.kframework.attributes.Location(Location(36,18,36,61)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("7e0881270e2377e31e3db93d4eec920df0742d85a3bf0fa3636b1b5c430b9ddd"), heat{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX._==__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1-heat"), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(36,18,36,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_==__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_==__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(692477386122cf7760e76585b8a4589286251ec3b777908f5c043e33120d8d03), heat, label(SIMPLE-TYPED-STATIC-SYNTAX._==__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp2-heat), non-assoc, org.kframework.attributes.Location(Location(36,18,36,61)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("692477386122cf7760e76585b8a4589286251ec3b777908f5c043e33120d8d03"), heat{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX._==__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp2-heat"), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(36,18,36,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_==__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(inj{Type,Exp}(T),inj{Type,Exp}(T)))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Type,KItem}(`bool_SIMPLE-TYPED-STATIC-SYNTAX_Type`(.KList))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(43c9a203c89af6fb3d8ec0a2c5a52048740785885cfdaad9fcd04ed8c63b8f6a), org.kframework.attributes.Location(Location(164,8,164,27)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortType{}, SortExp{}}(VarT:SortType{}),inj{SortType{}, SortExp{}}(VarT:SortType{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortType{}, SortKItem{}}(Lblbool'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("43c9a203c89af6fb3d8ec0a2c5a52048740785885cfdaad9fcd04ed8c63b8f6a"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(164,8,164,27)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_=__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(HOLE,_Gen0))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`ltype(_)_SIMPLE-TYPED-STATIC_Exp_Exp`(HOLE))~>`#freezer_=__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(_Gen0))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(922b26e9342d91672ff1ec8f7bff5759223e3f01427ffad1449c0c2af1168cab), heat, org.kframework.attributes.Location(Location(184,11,184,36)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},Var'Unds'Gen0:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortTenvCell{},Var'Unds'Gen2:SortCurrEnvVarCell{},Var'Unds'Gen3:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lblltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{})),kseq{}(Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Var'Unds'Gen0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortTenvCell{},Var'Unds'Gen2:SortCurrEnvVarCell{},Var'Unds'Gen3:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("922b26e9342d91672ff1ec8f7bff5759223e3f01427ffad1449c0c2af1168cab"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(184,11,184,36)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_=__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_=__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(ad9696a4930c9b2194b1b41cbc3354c1dc2be51066620f80f920feea9f5e738c), heat, label(SIMPLE-TYPED-STATIC-SYNTAX._=__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp2-heat), org.kframework.attributes.Location(Location(43,18,43,60)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), right, strict(2)]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("ad9696a4930c9b2194b1b41cbc3354c1dc2be51066620f80f920feea9f5e738c"), heat{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX._=__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp2-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(43,18,43,60)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), right{}(), strict{}("2")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_=__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(inj{Type,Exp}(T),inj{Type,Exp}(T)))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Type,KItem}(T)~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f2e77373c70858c92554a27c51f2a623a93bfe107ed1e73e1fb182ea6298702d), org.kframework.attributes.Location(Location(185,8,185,23)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortType{}, SortExp{}}(VarT:SortType{}),inj{SortType{}, SortExp{}}(VarT:SortType{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortType{}, SortKItem{}}(VarT:SortType{}),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("f2e77373c70858c92554a27c51f2a623a93bfe107ed1e73e1fb182ea6298702d"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(185,8,185,23)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_>=__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_>=__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(07e682bc7cf0697b8f3a2b54f6a93467a456252c79ba7e036f164a3d92f6c7d3), heat, label(SIMPLE-TYPED-STATIC-SYNTAX._>=__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1-heat), non-assoc, org.kframework.attributes.Location(Location(35,18,35,61)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("07e682bc7cf0697b8f3a2b54f6a93467a456252c79ba7e036f164a3d92f6c7d3"), heat{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX._>=__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1-heat"), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(35,18,35,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_>=__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_>=__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(53052d660515a47091caf1e9442a983d138cfc59cad2dde44f8e4e9682b60409), heat, label(SIMPLE-TYPED-STATIC-SYNTAX._>=__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp2-heat), non-assoc, org.kframework.attributes.Location(Location(35,18,35,61)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("53052d660515a47091caf1e9442a983d138cfc59cad2dde44f8e4e9682b60409"), heat{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX._>=__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp2-heat"), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(35,18,35,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_>=__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(inj{Type,Exp}(`int_SIMPLE-TYPED-STATIC-SYNTAX_Type`(.KList)),inj{Type,Exp}(`int_SIMPLE-TYPED-STATIC-SYNTAX_Type`(.KList))))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Type,KItem}(`bool_SIMPLE-TYPED-STATIC-SYNTAX_Type`(.KList))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0ffd9917a38ece7e514714a978be18f8b77b1a9e2afa09d811c474071849314b), org.kframework.attributes.Location(Location(163,8,163,26)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortType{}, SortExp{}}(Lblint'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}()),inj{SortType{}, SortExp{}}(Lblint'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortType{}, SortKItem{}}(Lblbool'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("0ffd9917a38ece7e514714a978be18f8b77b1a9e2afa09d811c474071849314b"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(163,8,163,26)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_>__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_>__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(c6d913005e48670682f1d1149f0c96a032a780bc26a4759d4bfb1830e9cec141), heat, label(SIMPLE-TYPED-STATIC-SYNTAX._>__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1-heat), non-assoc, org.kframework.attributes.Location(Location(34,18,34,61)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("c6d913005e48670682f1d1149f0c96a032a780bc26a4759d4bfb1830e9cec141"), heat{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX._>__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1-heat"), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(34,18,34,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_>__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_>__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(9b01fb0016c8de9b7dcf6deb6d581f4983763a80755599bf55c40d2facdd2569), heat, label(SIMPLE-TYPED-STATIC-SYNTAX._>__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp2-heat), non-assoc, org.kframework.attributes.Location(Location(34,18,34,61)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("9b01fb0016c8de9b7dcf6deb6d581f4983763a80755599bf55c40d2facdd2569"), heat{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX._>__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp2-heat"), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(34,18,34,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_>__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(inj{Type,Exp}(`int_SIMPLE-TYPED-STATIC-SYNTAX_Type`(.KList)),inj{Type,Exp}(`int_SIMPLE-TYPED-STATIC-SYNTAX_Type`(.KList))))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Type,KItem}(`bool_SIMPLE-TYPED-STATIC-SYNTAX_Type`(.KList))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(322faf9393415cb11d49c6bce8a9b11ca8b26570ddca198951d6b1e0765c16aa), org.kframework.attributes.Location(Location(162,8,162,25)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortType{}, SortExp{}}(Lblint'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}()),inj{SortType{}, SortExp{}}(Lblint'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortType{}, SortKItem{}}(Lblbool'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("322faf9393415cb11d49c6bce8a9b11ca8b26570ddca198951d6b1e0765c16aa"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(162,8,162,25)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_[_]_SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exps`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_[_]_SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exps0_`(inj{Exps,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(66410855e632c918a8b094c82305012ed22e2ea12831589bbd15a6f009078864), heat, label(SIMPLE-TYPED-STATIC-SYNTAX._[_]_SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exps1-heat), org.kframework.attributes.Location(Location(19,18,19,50)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(VarHOLE:SortExp{},VarK1:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarK1:SortExps{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("66410855e632c918a8b094c82305012ed22e2ea12831589bbd15a6f009078864"), heat{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX._[_]_SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exps1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(19,18,19,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_[_]_SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exps`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exps,KItem}(HOLE)~>`#freezer_[_]_SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exps1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exps,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(ca003ba1a0fe3907fd1e24c466a24b362b2b89415696c257dd5189f4eb955fda), heat, label(SIMPLE-TYPED-STATIC-SYNTAX._[_]_SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exps2-heat), org.kframework.attributes.Location(Location(19,18,19,50)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(VarK0:SortExp{},VarHOLE:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),kseq{}(Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("ca003ba1a0fe3907fd1e24c466a24b362b2b89415696c257dd5189f4eb955fda"), heat{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX._[_]_SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exps2-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(19,18,19,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_[_]_SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exps`(inj{Type,Exp}(T),inj{Types,Exps}(`.List{"_,__SIMPLE-TYPED-STATIC-SYNTAX_Types_Type_Types"}_Types`(.KList))))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Type,KItem}(T)~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3cbd77926e0fbb4ec5315e1c789de47f9f42aaeb02c55cbf146d48c4b12b5889), org.kframework.attributes.Location(Location(175,8,175,27)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(inj{SortType{}, SortExp{}}(VarT:SortType{}),inj{SortTypes{}, SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortType{}, SortKItem{}}(VarT:SortType{}),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("3cbd77926e0fbb4ec5315e1c789de47f9f42aaeb02c55cbf146d48c4b12b5889"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(175,8,175,27)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_[_]_SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exps`(inj{Type,Exp}(`_[]_SIMPLE-TYPED-STATIC-SYNTAX_Type_Type`(T)),inj{Types,Exps}(`_,__SIMPLE-TYPED-STATIC-SYNTAX_Types_Type_Types`(`int_SIMPLE-TYPED-STATIC-SYNTAX_Type`(.KList),Ts))))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_[_]_SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exps`(inj{Type,Exp}(T),inj{Types,Exps}(Ts)))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(cdbaa62de1cfad144f46ddd36bb2d40fa7fbdc3df03f93198945f50765b7a293), org.kframework.attributes.Location(Location(174,8,174,37)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(inj{SortType{}, SortExp{}}(Lbl'UndsLSqBRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type'Unds'Type{}(VarT:SortType{})),inj{SortTypes{}, SortExps{}}(Lbl'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types{}(Lblint'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}(),VarTs:SortTypes{})))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(inj{SortType{}, SortExp{}}(VarT:SortType{}),inj{SortTypes{}, SortExps{}}(VarTs:SortTypes{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("cdbaa62de1cfad144f46ddd36bb2d40fa7fbdc3df03f93198945f50765b7a293"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(174,8,174,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`__(_)__SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Type_Id_Params_Block`(T,F,Ps,S))~>_DotVar3),`.TenvCell`(.KList),`.CurrEnvVarCell`(.KList),`.ReturnTypeCell`(.KList))),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`__;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Type_Exps`(`_->__SIMPLE-TYPED-STATIC-SYNTAX_Type_Types_Type`(`getTypes(_)_SIMPLE-TYPED-STATIC_Types_Params`(Ps),T),`_,__SIMPLE-TYPED-STATIC-SYNTAX_Exps_Exp_Exps`(inj{Id,Exp}(F),inj{Types,Exps}(`.List{"_,__SIMPLE-TYPED-STATIC-SYNTAX_Types_Type_Types"}_Types`(.KList)))))~>_DotVar3),`.TenvCell`(.KList),`.CurrEnvVarCell`(.KList),`.ReturnTypeCell`(.KList))),`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`___SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Stmt_Stmt`(`mkDecls(_)_SIMPLE-TYPED-STATIC_Stmt_Params`(Ps),inj{Block,Stmt}(S)))),`<tenv>`(`.Map`(.KList)),`<currEnvVar>`(`.Set`(.KList)),`<returnType>`(T)))),_DotVar2)),_DotVar1),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(afc4c9b108e2fa5f64c90a4c21ce00f57ac3ceb716aba44bf316630c41b97f30), org.kframework.attributes.Location(Location(130,8,133,22)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsUndsLParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Id'Unds'Params'Unds'Block{}(VarT:SortType{},VarF:SortId{},VarPs:SortParams{},VarS:SortBlock{})),Var'Unds'DotVar3:SortK{})),Lbl'Stop'TenvCell{}(),Lbl'Stop'CurrEnvVarCell{}(),Lbl'Stop'ReturnTypeCell{}())),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps{}(Lbl'Unds'-'-GT-UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type'Unds'Types'Unds'Type{}(LblgetTypes'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Types'Unds'Params{}(VarPs:SortParams{}),VarT:SortType{}),Lbl'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(inj{SortId{}, SortExp{}}(VarF:SortId{}),inj{SortTypes{}, SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}())))),Var'Unds'DotVar3:SortK{})),Lbl'Stop'TenvCell{}(),Lbl'Stop'CurrEnvVarCell{}(),Lbl'Stop'ReturnTypeCell{}())),LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(LblmkDecls'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Stmt'Unds'Params{}(VarPs:SortParams{}),inj{SortBlock{}, SortStmt{}}(VarS:SortBlock{}))),dotk{}())),Lbl'-LT-'tenv'-GT-'{}(Lbl'Stop'Map{}()),Lbl'-LT-'currEnvVar'-GT-'{}(Lbl'Stop'Set{}()),Lbl'-LT-'returnType'-GT-'{}(VarT:SortType{})))),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("afc4c9b108e2fa5f64c90a4c21ce00f57ac3ceb716aba44bf316630c41b97f30"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(130,8,133,22)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`__;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Type_Exps`(T,`_,__SIMPLE-TYPED-STATIC-SYNTAX_Exps_Exp_Exps`(`_[_]_SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exps`(E,inj{Types,Exps}(`.List{"_,__SIMPLE-TYPED-STATIC-SYNTAX_Types_Type_Types"}_Types`(.KList))),inj{Types,Exps}(`.List{"_,__SIMPLE-TYPED-STATIC-SYNTAX_Types_Type_Types"}_Types`(.KList)))))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`__;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Type_Exps`(T,`_,__SIMPLE-TYPED-STATIC-SYNTAX_Exps_Exp_Exps`(E,inj{Types,Exps}(`.List{"_,__SIMPLE-TYPED-STATIC-SYNTAX_Types_Type_Types"}_Types`(.KList)))))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(47a409a6983b625065a5a2add278742d725c11ee9d47614f8a631b1b6f00bf47), org.kframework.attributes.Location(Location(128,8,128,37)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps{}(VarT:SortType{},Lbl'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(Lbl'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(VarE:SortExp{},inj{SortTypes{}, SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}())),inj{SortTypes{}, SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}())))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps{}(VarT:SortType{},Lbl'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(VarE:SortExp{},inj{SortTypes{}, SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}())))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("47a409a6983b625065a5a2add278742d725c11ee9d47614f8a631b1b6f00bf47"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(128,8,128,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`__;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Type_Exps`(T,`_,__SIMPLE-TYPED-STATIC-SYNTAX_Exps_Exp_Exps`(`_[_]_SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exps`(E,inj{Types,Exps}(`_,__SIMPLE-TYPED-STATIC-SYNTAX_Types_Type_Types`(`int_SIMPLE-TYPED-STATIC-SYNTAX_Type`(.KList),Ts))),inj{Types,Exps}(`.List{"_,__SIMPLE-TYPED-STATIC-SYNTAX_Types_Type_Types"}_Types`(.KList)))))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`__;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Type_Exps`(`_[]_SIMPLE-TYPED-STATIC-SYNTAX_Type_Type`(T),`_,__SIMPLE-TYPED-STATIC-SYNTAX_Exps_Exp_Exps`(`_[_]_SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exps`(E,inj{Types,Exps}(Ts)),inj{Types,Exps}(`.List{"_,__SIMPLE-TYPED-STATIC-SYNTAX_Types_Type_Types"}_Types`(.KList)))))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(59075c4beb39ce3cb90c2ba0afb20b1e9aa7e30b807dfb55d608f178f7e47060), org.kframework.attributes.Location(Location(125,8,125,49)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps{}(VarT:SortType{},Lbl'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(Lbl'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(VarE:SortExp{},inj{SortTypes{}, SortExps{}}(Lbl'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types{}(Lblint'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}(),VarTs:SortTypes{}))),inj{SortTypes{}, SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}())))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps{}(Lbl'UndsLSqBRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type'Unds'Type{}(VarT:SortType{}),Lbl'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(Lbl'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(VarE:SortExp{},inj{SortTypes{}, SortExps{}}(VarTs:SortTypes{})),inj{SortTypes{}, SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}())))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("59075c4beb39ce3cb90c2ba0afb20b1e9aa7e30b807dfb55d608f178f7e47060"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(125,8,125,49)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`__;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Type_Exps`(T,`_,__SIMPLE-TYPED-STATIC-SYNTAX_Exps_Exp_Exps`(inj{Id,Exp}(X),inj{Types,Exps}(`.List{"_,__SIMPLE-TYPED-STATIC-SYNTAX_Types_Type_Types"}_Types`(.KList)))))~>_DotVar3),`.TenvCell`(.KList),`.CurrEnvVarCell`(.KList),`.ReturnTypeCell`(.KList))),_DotVar2)),`<gtenv>`(Rho)),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{BlockOrStmtType,KItem}(`stmt_SIMPLE-TYPED-STATIC_BlockOrStmtType`(.KList))~>_DotVar3),`.TenvCell`(.KList),`.CurrEnvVarCell`(.KList),`.ReturnTypeCell`(.KList))),_DotVar2)),`<gtenv>`(`_Map_`(Rho,`_|->_`(inj{Id,KItem}(X),inj{Type,KItem}(T))))),_DotVar0) requires `notBool_`(`Set:in`(inj{Id,KItem}(X),`keys(_)_MAP_Set_Map`(Rho))) ensures #token("true","Bool") [UNIQUE_ID(cf6aaec34c2cf70ca5437026f9103b26313324df3e116d0a274404de4e21ce9c), org.kframework.attributes.Location(Location(108,8,110,37)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps{}(VarT:SortType{},Lbl'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(inj{SortId{}, SortExp{}}(VarX:SortId{}),inj{SortTypes{}, SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}())))),Var'Unds'DotVar3:SortK{})),Lbl'Stop'TenvCell{}(),Lbl'Stop'CurrEnvVarCell{}(),Lbl'Stop'ReturnTypeCell{}())),Var'Unds'DotVar2:SortTaskCellSet{})),Lbl'-LT-'gtenv'-GT-'{}(VarRho:SortMap{})),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        LblnotBool'Unds'{}(LblSet'Coln'in{}(inj{SortId{}, SortKItem{}}(VarX:SortId{}),Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map{}(VarRho:SortMap{}))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlockOrStmtType{}, SortKItem{}}(Lblstmt'Unds'SIMPLE-TYPED-STATIC'Unds'BlockOrStmtType{}()),Var'Unds'DotVar3:SortK{})),Lbl'Stop'TenvCell{}(),Lbl'Stop'CurrEnvVarCell{}(),Lbl'Stop'ReturnTypeCell{}())),Var'Unds'DotVar2:SortTaskCellSet{})),Lbl'-LT-'gtenv'-GT-'{}(Lbl'Unds'Map'Unds'{}(VarRho:SortMap{},Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarX:SortId{}),inj{SortType{}, SortKItem{}}(VarT:SortType{}))))),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("cf6aaec34c2cf70ca5437026f9103b26313324df3e116d0a274404de4e21ce9c"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(108,8,110,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`__;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Type_Exps`(T,`_,__SIMPLE-TYPED-STATIC-SYNTAX_Exps_Exp_Exps`(inj{Id,Exp}(X),inj{Types,Exps}(`.List{"_,__SIMPLE-TYPED-STATIC-SYNTAX_Types_Type_Types"}_Types`(.KList)))))~>_DotVar4),`<tenv>`(Rho),`<currEnvVar>`(Phi),_DotVar3)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{BlockOrStmtType,KItem}(`stmt_SIMPLE-TYPED-STATIC_BlockOrStmtType`(.KList))~>_DotVar4),`<tenv>`(`Map:update`(Rho,inj{Id,KItem}(X),inj{Type,KItem}(T))),`<currEnvVar>`(`_Set_`(Phi,`SetItem`(inj{Id,KItem}(X)))),_DotVar3)),_DotVar2)),_DotVar1),_DotVar0) requires `notBool_`(`Set:in`(inj{Id,KItem}(X),Phi)) ensures #token("true","Bool") [UNIQUE_ID(a16fb21539310706a7f5374bc9b3f9e4fe6c9391e88770915f6240ae2d5ef554), org.kframework.attributes.Location(Location(99,8,102,32)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps{}(VarT:SortType{},Lbl'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(inj{SortId{}, SortExp{}}(VarX:SortId{}),inj{SortTypes{}, SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}())))),Var'Unds'DotVar4:SortK{})),Lbl'-LT-'tenv'-GT-'{}(VarRho:SortMap{}),Lbl'-LT-'currEnvVar'-GT-'{}(VarPhi:SortSet{}),Var'Unds'DotVar3:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        LblnotBool'Unds'{}(LblSet'Coln'in{}(inj{SortId{}, SortKItem{}}(VarX:SortId{}),VarPhi:SortSet{})),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlockOrStmtType{}, SortKItem{}}(Lblstmt'Unds'SIMPLE-TYPED-STATIC'Unds'BlockOrStmtType{}()),Var'Unds'DotVar4:SortK{})),Lbl'-LT-'tenv'-GT-'{}(LblMap'Coln'update{}(VarRho:SortMap{},inj{SortId{}, SortKItem{}}(VarX:SortId{}),inj{SortType{}, SortKItem{}}(VarT:SortType{}))),Lbl'-LT-'currEnvVar'-GT-'{}(Lbl'Unds'Set'Unds'{}(VarPhi:SortSet{},LblSetItem{}(inj{SortId{}, SortKItem{}}(VarX:SortId{})))),Var'Unds'DotVar3:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("a16fb21539310706a7f5374bc9b3f9e4fe6c9391e88770915f6240ae2d5ef554"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(99,8,102,32)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`__;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Type_Exps`(_Gen0,`_,__SIMPLE-TYPED-STATIC-SYNTAX_Exps_Exp_Exps`(`_[_]_SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exps`(_Gen1,HOLE),inj{Types,Exps}(`.List{"_,__SIMPLE-TYPED-STATIC-SYNTAX_Types_Type_Types"}_Types`(.KList)))))~>_DotVar4),_Gen2,_Gen3,_Gen4)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exps,KItem}(HOLE)~>`#freezer__;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Type_Exps2_`(inj{Type,KItem}(_Gen0),inj{Exp,KItem}(_Gen1))~>_DotVar4),_Gen2,_Gen3,_Gen4)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exps,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(eccde78f4398906a3fa065733dbd4e8d29fb3576b4b2d1447a5f9fb740da9f6e), heat, org.kframework.attributes.Location(Location(121,11,121,37)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps{}(Var'Unds'Gen0:SortType{},Lbl'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(Lbl'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Var'Unds'Gen1:SortExp{},VarHOLE:SortExps{}),inj{SortTypes{}, SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}())))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen2:SortTenvCell{},Var'Unds'Gen3:SortCurrEnvVarCell{},Var'Unds'Gen4:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),kseq{}(Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(kseq{}(inj{SortType{}, SortKItem{}}(Var'Unds'Gen0:SortType{}),dotk{}()),kseq{}(inj{SortExp{}, SortKItem{}}(Var'Unds'Gen1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen2:SortTenvCell{},Var'Unds'Gen3:SortCurrEnvVarCell{},Var'Unds'Gen4:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("eccde78f4398906a3fa065733dbd4e8d29fb3576b4b2d1447a5f9fb740da9f6e"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(121,11,121,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`___SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Stmt_Stmt`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(HOLE)~>`#freezer___SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Stmt_Stmt0_`(inj{Stmt,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Stmt,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(5537f6ce1f2bd4ca4ecbe0a42840df77b9d986602ab9c2716e9a0912cc94ba7a), heat, label(SIMPLE-TYPED-STATIC-SYNTAX.___SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Stmt_Stmt1-heat), org.kframework.attributes.Location(Location(63,19,63,75)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), right, seqstrict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(VarHOLE:SortStmt{},VarK1:SortStmt{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortStmt{}, SortKItem{}}(VarHOLE:SortStmt{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(VarHOLE:SortStmt{}),kseq{}(Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(VarK1:SortStmt{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("5537f6ce1f2bd4ca4ecbe0a42840df77b9d986602ab9c2716e9a0912cc94ba7a"), heat{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX.___SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Stmt_Stmt1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(63,19,63,75)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), right{}(), seqstrict{}()]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`___SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Stmt_Stmt`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(HOLE)~>`#freezer___SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Stmt_Stmt1_`(inj{Stmt,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(`_andBool_`(isKResult(inj{Stmt,KItem}(K0)),#token("true","Bool")),`notBool_`(isKResult(inj{Stmt,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(d95bcbc6ad7952e7b842fc3cd927c9c3d66cbd0276440b28644dff91acd90217), heat, label(SIMPLE-TYPED-STATIC-SYNTAX.___SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Stmt_Stmt2-heat), org.kframework.attributes.Location(Location(63,19,63,75)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), right, seqstrict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(VarK0:SortStmt{},VarHOLE:SortStmt{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortStmt{}, SortKItem{}}(VarK0:SortStmt{}),dotk{}())),\dv{SortBool{}}("true")),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortStmt{}, SortKItem{}}(VarHOLE:SortStmt{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(VarHOLE:SortStmt{}),kseq{}(Lbl'Hash'freezer'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(VarK0:SortStmt{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("d95bcbc6ad7952e7b842fc3cd927c9c3d66cbd0276440b28644dff91acd90217"), heat{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX.___SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Stmt_Stmt2-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(63,19,63,75)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), right{}(), seqstrict{}()]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`___SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Stmt_Stmt`(inj{BlockOrStmtType,Stmt}(_Gen0),inj{BlockOrStmtType,Stmt}(_Gen1)))~>_DotVar4),_Gen2,_Gen3,_Gen4)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{BlockOrStmtType,KItem}(`stmt_SIMPLE-TYPED-STATIC_BlockOrStmtType`(.KList))~>_DotVar4),_Gen2,_Gen3,_Gen4)),_DotVar2)),_DotVar1),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ac7c0960d8c123c9bb947f443a0b7f687e598913f66ac5770a72eaba3a2208d1), org.kframework.attributes.Location(Location(214,8,214,51)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(inj{SortBlockOrStmtType{}, SortStmt{}}(Var'Unds'Gen0:SortBlockOrStmtType{}),inj{SortBlockOrStmtType{}, SortStmt{}}(Var'Unds'Gen1:SortBlockOrStmtType{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen2:SortTenvCell{},Var'Unds'Gen3:SortCurrEnvVarCell{},Var'Unds'Gen4:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlockOrStmtType{}, SortKItem{}}(Lblstmt'Unds'SIMPLE-TYPED-STATIC'Unds'BlockOrStmtType{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen2:SortTenvCell{},Var'Unds'Gen3:SortCurrEnvVarCell{},Var'Unds'Gen4:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("ac7c0960d8c123c9bb947f443a0b7f687e598913f66ac5770a72eaba3a2208d1"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(214,8,214,51)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_||__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_||__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(2fe2e5b12da0a255f649b96885d4c0940509405cb11dcef21270f8266efb059a), heat, label(SIMPLE-TYPED-STATIC-SYNTAX._||__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1-heat), left, org.kframework.attributes.Location(Location(41,18,41,56)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("2fe2e5b12da0a255f649b96885d4c0940509405cb11dcef21270f8266efb059a"), heat{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX._||__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1-heat"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(41,18,41,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_||__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_||__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(fa03afa51a0ff32c2b77c588bd7649bb22a116a9c5584dbc3e57079412104f95), heat, label(SIMPLE-TYPED-STATIC-SYNTAX._||__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp2-heat), left, org.kframework.attributes.Location(Location(41,18,41,56)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("fa03afa51a0ff32c2b77c588bd7649bb22a116a9c5584dbc3e57079412104f95"), heat{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX._||__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp2-heat"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(41,18,41,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_||__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(inj{Type,Exp}(`bool_SIMPLE-TYPED-STATIC-SYNTAX_Type`(.KList)),inj{Type,Exp}(`bool_SIMPLE-TYPED-STATIC-SYNTAX_Type`(.KList))))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Type,KItem}(`bool_SIMPLE-TYPED-STATIC-SYNTAX_Type`(.KList))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c61ceda5420ee6ded63d6ac12451058adbb362b67dd4002fb38107dbeb275e15), org.kframework.attributes.Location(Location(167,8,167,28)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortType{}, SortExp{}}(Lblbool'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}()),inj{SortType{}, SortExp{}}(Lblbool'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortType{}, SortKItem{}}(Lblbool'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("c61ceda5420ee6ded63d6ac12451058adbb362b67dd4002fb38107dbeb275e15"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(167,8,167,28)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`acquire_;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezeracquire_;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(656fcf2e16473ab4199c04d0e278c595fa6a738a5a957c6ae876998755112dd2), heat, label(SIMPLE-TYPED-STATIC-SYNTAX.acquire_;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp1-heat), org.kframework.attributes.Location(Location(60,19,60,68)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblacquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("656fcf2e16473ab4199c04d0e278c595fa6a738a5a957c6ae876998755112dd2"), heat{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX.acquire_;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(60,19,60,68)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`acquire_;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp`(inj{Type,Exp}(_Gen0)))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{BlockOrStmtType,KItem}(`stmt_SIMPLE-TYPED-STATIC_BlockOrStmtType`(.KList))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f52b42d70e88c87d729ffc9bb2dd14ed75aee9caf1eb03b1028e7a49646eb926), org.kframework.attributes.Location(Location(210,8,210,31)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblacquire'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(inj{SortType{}, SortExp{}}(Var'Unds'Gen0:SortType{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortTenvCell{},Var'Unds'Gen2:SortCurrEnvVarCell{},Var'Unds'Gen3:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlockOrStmtType{}, SortKItem{}}(Lblstmt'Unds'SIMPLE-TYPED-STATIC'Unds'BlockOrStmtType{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortTenvCell{},Var'Unds'Gen2:SortCurrEnvVarCell{},Var'Unds'Gen3:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("f52b42d70e88c87d729ffc9bb2dd14ed75aee9caf1eb03b1028e7a49646eb926"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(210,8,210,31)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`if(_)_else__SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp_Block_Block`(HOLE,K1,K2))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerif(_)_else__SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp_Block_Block0_`(inj{Block,KItem}(K1),inj{Block,KItem}(K2))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(700b9e4cad81d1769ab273173202e1d6c2a84cf52a0fac8fa99e43ef42b3c3f2), avoid, heat, label(SIMPLE-TYPED-STATIC-SYNTAX.if(_)_else__SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp_Block_Block1-heat), org.kframework.attributes.Location(Location(50,19,50,75)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(VarHOLE:SortExp{},VarK1:SortBlock{},VarK2:SortBlock{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(kseq{}(inj{SortBlock{}, SortKItem{}}(VarK1:SortBlock{}),dotk{}()),kseq{}(inj{SortBlock{}, SortKItem{}}(VarK2:SortBlock{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("700b9e4cad81d1769ab273173202e1d6c2a84cf52a0fac8fa99e43ef42b3c3f2"), avoid{}(), heat{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX.if(_)_else__SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp_Block_Block1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(50,19,50,75)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`if(_)_else__SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp_Block_Block`(K0,HOLE,K2))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Block,KItem}(HOLE)~>`#freezerif(_)_else__SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp_Block_Block1_`(inj{Exp,KItem}(K0),inj{Block,KItem}(K2))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Block,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(9421abd154d3824233f6fba505d1aa2ca6daa69aef410f52fda353355e87b779), avoid, heat, label(SIMPLE-TYPED-STATIC-SYNTAX.if(_)_else__SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp_Block_Block2-heat), org.kframework.attributes.Location(Location(50,19,50,75)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(VarK0:SortExp{},VarHOLE:SortBlock{},VarK2:SortBlock{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortBlock{}, SortKItem{}}(VarHOLE:SortBlock{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlock{}, SortKItem{}}(VarHOLE:SortBlock{}),kseq{}(Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}()),kseq{}(inj{SortBlock{}, SortKItem{}}(VarK2:SortBlock{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("9421abd154d3824233f6fba505d1aa2ca6daa69aef410f52fda353355e87b779"), avoid{}(), heat{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX.if(_)_else__SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp_Block_Block2-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(50,19,50,75)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`if(_)_else__SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp_Block_Block`(K0,K1,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Block,KItem}(HOLE)~>`#freezerif(_)_else__SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp_Block_Block2_`(inj{Exp,KItem}(K0),inj{Block,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Block,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(02349ec60858043beb697ade5f3b81665fd59cec738fa93f07ab55241d37e048), avoid, heat, label(SIMPLE-TYPED-STATIC-SYNTAX.if(_)_else__SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp_Block_Block3-heat), org.kframework.attributes.Location(Location(50,19,50,75)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(VarK0:SortExp{},VarK1:SortBlock{},VarHOLE:SortBlock{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortBlock{}, SortKItem{}}(VarHOLE:SortBlock{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlock{}, SortKItem{}}(VarHOLE:SortBlock{}),kseq{}(Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}()),kseq{}(inj{SortBlock{}, SortKItem{}}(VarK1:SortBlock{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("02349ec60858043beb697ade5f3b81665fd59cec738fa93f07ab55241d37e048"), avoid{}(), heat{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX.if(_)_else__SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp_Block_Block3-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(50,19,50,75)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`if(_)_else__SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp_Block_Block`(inj{Type,Exp}(`bool_SIMPLE-TYPED-STATIC-SYNTAX_Type`(.KList)),inj{BlockOrStmtType,Block}(`block_SIMPLE-TYPED-STATIC_BlockOrStmtType`(.KList)),inj{BlockOrStmtType,Block}(`block_SIMPLE-TYPED-STATIC_BlockOrStmtType`(.KList))))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{BlockOrStmtType,KItem}(`stmt_SIMPLE-TYPED-STATIC_BlockOrStmtType`(.KList))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(91208ae2b88b2fdf0efeea6c61720464f3518da78bb5652bfee70dbcf4c72634), org.kframework.attributes.Location(Location(200,8,200,42)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(inj{SortType{}, SortExp{}}(Lblbool'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}()),inj{SortBlockOrStmtType{}, SortBlock{}}(Lblblock'Unds'SIMPLE-TYPED-STATIC'Unds'BlockOrStmtType{}()),inj{SortBlockOrStmtType{}, SortBlock{}}(Lblblock'Unds'SIMPLE-TYPED-STATIC'Unds'BlockOrStmtType{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlockOrStmtType{}, SortKItem{}}(Lblstmt'Unds'SIMPLE-TYPED-STATIC'Unds'BlockOrStmtType{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("91208ae2b88b2fdf0efeea6c61720464f3518da78bb5652bfee70dbcf4c72634"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(200,8,200,42)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`join_;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerjoin_;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(bb6ff6cec51611da224055572719399c7384141093994fe647e256d410a53bc6), heat, label(SIMPLE-TYPED-STATIC-SYNTAX.join_;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp1-heat), org.kframework.attributes.Location(Location(59,19,59,68)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbljoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("bb6ff6cec51611da224055572719399c7384141093994fe647e256d410a53bc6"), heat{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX.join_;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(59,19,59,68)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`join_;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp`(inj{Type,Exp}(`int_SIMPLE-TYPED-STATIC-SYNTAX_Type`(.KList))))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{BlockOrStmtType,KItem}(`stmt_SIMPLE-TYPED-STATIC_BlockOrStmtType`(.KList))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(13e37bfb7acc77561f0c42eac7ecadb877f48df7f4154b1d00b1f94afd173a59), org.kframework.attributes.Location(Location(209,8,209,25)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbljoin'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(inj{SortType{}, SortExp{}}(Lblint'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlockOrStmtType{}, SortKItem{}}(Lblstmt'Unds'SIMPLE-TYPED-STATIC'Unds'BlockOrStmtType{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("13e37bfb7acc77561f0c42eac7ecadb877f48df7f4154b1d00b1f94afd173a59"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(209,8,209,25)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`ltype(_)_SIMPLE-TYPED-STATIC_Exp_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerltype(_)_SIMPLE-TYPED-STATIC_Exp_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(isLValue(inj{Exp,KItem}(HOLE)),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(80d494047e08365f6cd1f87dfc19fbc758c7b466f8ca998bfe0e29101a4277c0), heat, org.kframework.attributes.Location(Location(231,11,231,46)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lblltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(LblisLValue{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("80d494047e08365f6cd1f87dfc19fbc758c7b466f8ca998bfe0e29101a4277c0"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(231,11,231,46)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`ltype(_)_SIMPLE-TYPED-STATIC_Exp_Exp`(HOLE))~>`#freezer++__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`++__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(8092efa42224ebe54768bdadebcdb07e8e6ce49770b1a246e82ff9957150db83), cool, org.kframework.attributes.Location(Location(150,11,150,34)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lblltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{})),kseq{}(Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'PlusPlusUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("8092efa42224ebe54768bdadebcdb07e8e6ce49770b1a246e82ff9957150db83"), cool{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(150,11,150,34)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`ltype(_)_SIMPLE-TYPED-STATIC_Exp_Exp`(HOLE))~>`#freezer_=__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(_Gen0))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_=__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(HOLE,_Gen0))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(6080608bcc4cd21683f9caa5401c0ac8b0d78aa6aef7debaec6db584c243f84c), cool, org.kframework.attributes.Location(Location(184,11,184,36)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lblltype'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{})),kseq{}(Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Var'Unds'Gen0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortTenvCell{},Var'Unds'Gen2:SortCurrEnvVarCell{},Var'Unds'Gen3:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},Var'Unds'Gen0:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortTenvCell{},Var'Unds'Gen2:SortCurrEnvVarCell{},Var'Unds'Gen3:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("6080608bcc4cd21683f9caa5401c0ac8b0d78aa6aef7debaec6db584c243f84c"), cool{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(184,11,184,36)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`print(_);_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exps`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exps,KItem}(HOLE)~>`#freezerprint(_);_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exps0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exps,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(17e56821c4a9d6452f59f87f22098dec4cd0ebc9752e3109184ee5f6ea5780b1), heat, label(SIMPLE-TYPED-STATIC-SYNTAX.print(_);_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exps1-heat), org.kframework.attributes.Location(Location(56,19,56,68)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps{}(VarHOLE:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),kseq{}(Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("17e56821c4a9d6452f59f87f22098dec4cd0ebc9752e3109184ee5f6ea5780b1"), heat{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX.print(_);_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exps1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(56,19,56,68)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`print(_);_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exps`(`_,__SIMPLE-TYPED-STATIC-SYNTAX_Exps_Exp_Exps`(inj{Type,Exp}(T),Ts)))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`print(_);_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exps`(Ts))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_orBool_`(`_==K_`(inj{Type,KItem}(T),inj{Type,KItem}(`int_SIMPLE-TYPED-STATIC-SYNTAX_Type`(.KList))),`_==K_`(inj{Type,KItem}(T),inj{Type,KItem}(`string_SIMPLE-TYPED-STATIC-SYNTAX_Type`(.KList)))) ensures #token("true","Bool") [UNIQUE_ID(e754aefe17f2c209013b8986b4e1d267214e918927eac5a73bd708b64ed0eb28), org.kframework.attributes.Location(Location(181,8,181,71)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps{}(Lbl'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(inj{SortType{}, SortExp{}}(VarT:SortType{}),VarTs:SortExps{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'orBool'Unds'{}(Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortType{}, SortKItem{}}(VarT:SortType{}),dotk{}()),kseq{}(inj{SortType{}, SortKItem{}}(Lblint'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}()),dotk{}())),Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortType{}, SortKItem{}}(VarT:SortType{}),dotk{}()),kseq{}(inj{SortType{}, SortKItem{}}(Lblstring'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}()),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps{}(VarTs:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("e754aefe17f2c209013b8986b4e1d267214e918927eac5a73bd708b64ed0eb28"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(181,8,181,71)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`print(_);_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exps`(inj{Types,Exps}(`.List{"_,__SIMPLE-TYPED-STATIC-SYNTAX_Types_Type_Types"}_Types`(.KList))))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{BlockOrStmtType,KItem}(`stmt_SIMPLE-TYPED-STATIC_BlockOrStmtType`(.KList))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f38a8cf1b761b7d4e4ba028ea0d5476703883e390e6737fe94699eb0e6a89f64), org.kframework.attributes.Location(Location(182,8,182,30)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblprint'LParUndsRParSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps{}(inj{SortTypes{}, SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlockOrStmtType{}, SortKItem{}}(Lblstmt'Unds'SIMPLE-TYPED-STATIC'Unds'BlockOrStmtType{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("f38a8cf1b761b7d4e4ba028ea0d5476703883e390e6737fe94699eb0e6a89f64"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(182,8,182,30)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`read()_SIMPLE-TYPED-STATIC-SYNTAX_Exp`(.KList))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Type,KItem}(`int_SIMPLE-TYPED-STATIC-SYNTAX_Type`(.KList))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ba325631ba787768be8aa9cb198ec5a4615fe5dc411a6957942a8bc1cb5de95a), org.kframework.attributes.Location(Location(179,8,179,21)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lblread'LParRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortType{}, SortKItem{}}(Lblint'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("ba325631ba787768be8aa9cb198ec5a4615fe5dc411a6957942a8bc1cb5de95a"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(179,8,179,21)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`release_;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerrelease_;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(e845567f91ed930bcc1e38ab614ed45db4addf0fa2edb7ab5eb5313a5e05fd10), heat, label(SIMPLE-TYPED-STATIC-SYNTAX.release_;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp1-heat), org.kframework.attributes.Location(Location(61,19,61,68)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("e845567f91ed930bcc1e38ab614ed45db4addf0fa2edb7ab5eb5313a5e05fd10"), heat{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX.release_;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(61,19,61,68)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`release_;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp`(inj{Type,Exp}(_Gen0)))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{BlockOrStmtType,KItem}(`stmt_SIMPLE-TYPED-STATIC_BlockOrStmtType`(.KList))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(97a1f888d0dbd7411c6634272c3f132eeef5a79268669475a3c54cde10390f80), org.kframework.attributes.Location(Location(211,8,211,31)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblrelease'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(inj{SortType{}, SortExp{}}(Var'Unds'Gen0:SortType{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortTenvCell{},Var'Unds'Gen2:SortCurrEnvVarCell{},Var'Unds'Gen3:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlockOrStmtType{}, SortKItem{}}(Lblstmt'Unds'SIMPLE-TYPED-STATIC'Unds'BlockOrStmtType{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortTenvCell{},Var'Unds'Gen2:SortCurrEnvVarCell{},Var'Unds'Gen3:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("97a1f888d0dbd7411c6634272c3f132eeef5a79268669475a3c54cde10390f80"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(211,8,211,31)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`rendezvous_;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerrendezvous_;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(5d6cd8422b89746d616def821344cc5f60227bf72f6da37ba18f4ded36b4671a), heat, label(SIMPLE-TYPED-STATIC-SYNTAX.rendezvous_;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp1-heat), org.kframework.attributes.Location(Location(62,19,62,68)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("5d6cd8422b89746d616def821344cc5f60227bf72f6da37ba18f4ded36b4671a"), heat{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX.rendezvous_;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(62,19,62,68)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`rendezvous_;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp`(inj{Type,Exp}(_Gen0)))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{BlockOrStmtType,KItem}(`stmt_SIMPLE-TYPED-STATIC_BlockOrStmtType`(.KList))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(cea24099167346c9bbea8605a203142b05388c2fd8f202d03a86b50a82f0209e), org.kframework.attributes.Location(Location(212,8,212,34)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblrendezvous'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(inj{SortType{}, SortExp{}}(Var'Unds'Gen0:SortType{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortTenvCell{},Var'Unds'Gen2:SortCurrEnvVarCell{},Var'Unds'Gen3:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlockOrStmtType{}, SortKItem{}}(Lblstmt'Unds'SIMPLE-TYPED-STATIC'Unds'BlockOrStmtType{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortTenvCell{},Var'Unds'Gen2:SortCurrEnvVarCell{},Var'Unds'Gen3:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("cea24099167346c9bbea8605a203142b05388c2fd8f202d03a86b50a82f0209e"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(212,8,212,34)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`return;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt`(.KList))~>_DotVar4),_Gen1,_Gen2,`<returnType>`(_Gen0))),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{BlockOrStmtType,KItem}(`stmt_SIMPLE-TYPED-STATIC_BlockOrStmtType`(.KList))~>_DotVar4),_Gen1,_Gen2,`<returnType>`(_Gen0))),_DotVar2)),_DotVar1),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7f2ba3cace281fadd3345bf6b66342230a6affc7a97a0da98049d255f6c5692c), org.kframework.attributes.Location(Location(191,8,191,64)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblreturn'SClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortTenvCell{},Var'Unds'Gen2:SortCurrEnvVarCell{},Lbl'-LT-'returnType'-GT-'{}(Var'Unds'Gen0:SortType{}))),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlockOrStmtType{}, SortKItem{}}(Lblstmt'Unds'SIMPLE-TYPED-STATIC'Unds'BlockOrStmtType{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortTenvCell{},Var'Unds'Gen2:SortCurrEnvVarCell{},Lbl'-LT-'returnType'-GT-'{}(Var'Unds'Gen0:SortType{}))),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("7f2ba3cace281fadd3345bf6b66342230a6affc7a97a0da98049d255f6c5692c"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(191,8,191,64)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`return_;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerreturn_;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(79cfcaf2f5b0e39b2031a3c017df6779bda194de58554ce1a1d01bc55780b5b9), heat, label(SIMPLE-TYPED-STATIC-SYNTAX.return_;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp1-heat), org.kframework.attributes.Location(Location(54,19,54,68)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("79cfcaf2f5b0e39b2031a3c017df6779bda194de58554ce1a1d01bc55780b5b9"), heat{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX.return_;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(54,19,54,68)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`return_;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp`(inj{Type,Exp}(T)))~>_DotVar4),_Gen0,_Gen1,`<returnType>`(T))),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{BlockOrStmtType,KItem}(`stmt_SIMPLE-TYPED-STATIC_BlockOrStmtType`(.KList))~>_DotVar4),_Gen0,_Gen1,`<returnType>`(T))),_DotVar2)),_DotVar1),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(79a7a17e441e3a32857ee8a37f0630c7fabcb860fd36271863137e3dc3e1d458), org.kframework.attributes.Location(Location(190,8,190,71)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblreturn'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(inj{SortType{}, SortExp{}}(VarT:SortType{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Lbl'-LT-'returnType'-GT-'{}(VarT:SortType{}))),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlockOrStmtType{}, SortKItem{}}(Lblstmt'Unds'SIMPLE-TYPED-STATIC'Unds'BlockOrStmtType{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Lbl'-LT-'returnType'-GT-'{}(VarT:SortType{}))),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("79a7a17e441e3a32857ee8a37f0630c7fabcb860fd36271863137e3dc3e1d458"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(190,8,190,71)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`sizeOf(_)_SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezersizeOf(_)_SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(948ee2d5e422f17f2cad68afb0ca7e4e7e8d063b6b963341f9e58f8c545992f0), heat, label(SIMPLE-TYPED-STATIC-SYNTAX.sizeOf(_)_SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp1-heat), org.kframework.attributes.Location(Location(22,18,22,50)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(LblsizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("948ee2d5e422f17f2cad68afb0ca7e4e7e8d063b6b963341f9e58f8c545992f0"), heat{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX.sizeOf(_)_SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(22,18,22,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`sizeOf(_)_SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp`(inj{Type,Exp}(`_[]_SIMPLE-TYPED-STATIC-SYNTAX_Type_Type`(_T))))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Type,KItem}(`int_SIMPLE-TYPED-STATIC-SYNTAX_Type`(.KList))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(bbc18fe32b804c33da5d58f09479bb122f4ee897b0fdd47b211da5547cece6fc), org.kframework.attributes.Location(Location(177,8,177,27)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(LblsizeOf'LParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(inj{SortType{}, SortExp{}}(Lbl'UndsLSqBRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type'Unds'Type{}(Var'Unds'T:SortType{})))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortType{}, SortKItem{}}(Lblint'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("bbc18fe32b804c33da5d58f09479bb122f4ee897b0fdd47b211da5547cece6fc"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(177,8,177,27)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`spawn__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Block`(S))~>_DotVar4),`<tenv>`(Rho),`<currEnvVar>`(Phi),_DotVar3)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Block,KItem}(S)),`<tenv>`(Rho),`<currEnvVar>`(Phi),`.ReturnTypeCell`(.KList))),`TaskCellSetItem`(`<task>`(`<k>`(inj{Type,KItem}(`int_SIMPLE-TYPED-STATIC-SYNTAX_Type`(.KList))~>_DotVar4),`<tenv>`(Rho),`<currEnvVar>`(Phi),_DotVar3))),_DotVar2)),_DotVar1),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e4769f3d9ff9c041cfffaf70f11d6ca1cfa9d446e9a26db9025ad06eb3fdf1ce), org.kframework.attributes.Location(Location(207,8,208,93)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lblspawn'UndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(VarS:SortBlock{})),Var'Unds'DotVar4:SortK{})),Lbl'-LT-'tenv'-GT-'{}(VarRho:SortMap{}),Lbl'-LT-'currEnvVar'-GT-'{}(VarPhi:SortSet{}),Var'Unds'DotVar3:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlock{}, SortKItem{}}(VarS:SortBlock{}),dotk{}())),Lbl'-LT-'tenv'-GT-'{}(VarRho:SortMap{}),Lbl'-LT-'currEnvVar'-GT-'{}(VarPhi:SortSet{}),Lbl'Stop'ReturnTypeCell{}())),LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortType{}, SortKItem{}}(Lblint'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}()),Var'Unds'DotVar4:SortK{})),Lbl'-LT-'tenv'-GT-'{}(VarRho:SortMap{}),Lbl'-LT-'currEnvVar'-GT-'{}(VarPhi:SortSet{}),Var'Unds'DotVar3:SortReturnTypeCell{}))),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("e4769f3d9ff9c041cfffaf70f11d6ca1cfa9d446e9a26db9025ad06eb3fdf1ce"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(207,8,208,93)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{BlockOrStmtType,KItem}(`stmt_SIMPLE-TYPED-STATIC_BlockOrStmtType`(.KList))),`.TenvCell`(.KList),`.CurrEnvVarCell`(.KList),`.ReturnTypeCell`(.KList))),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`_;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp`(`_(_)_SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exps`(inj{Id,Exp}(#token("main","Id")),inj{Types,Exps}(`.List{"_,__SIMPLE-TYPED-STATIC-SYNTAX_Types_Type_Types"}_Types`(.KList)))))),`<tenv>`(`.Map`(.KList)),`.CurrEnvVarCell`(.KList),`.ReturnTypeCell`(.KList))),_DotVar2)),_DotVar1),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a70b59103cf863c9173459134b302066a1ae4f921a7b6ac31502015ce58155ac), org.kframework.attributes.Location(Location(135,8,135,82)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlockOrStmtType{}, SortKItem{}}(Lblstmt'Unds'SIMPLE-TYPED-STATIC'Unds'BlockOrStmtType{}()),dotk{}())),Lbl'Stop'TenvCell{}(),Lbl'Stop'CurrEnvVarCell{}(),Lbl'Stop'ReturnTypeCell{}())),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Lbl'UndsLParUndsRParUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(inj{SortId{}, SortExp{}}(\dv{SortId{}}("main")),inj{SortTypes{}, SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}())))),dotk{}())),Lbl'-LT-'tenv'-GT-'{}(Lbl'Stop'Map{}()),Lbl'Stop'CurrEnvVarCell{}(),Lbl'Stop'ReturnTypeCell{}())),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("a70b59103cf863c9173459134b302066a1ae4f921a7b6ac31502015ce58155ac"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(135,8,135,82)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`throw_;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerthrow_;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(b12d633378db5031b84f945597ee54b976c7b7dd1fc2ffb854a8963421b5460b), heat, label(SIMPLE-TYPED-STATIC-SYNTAX.throw_;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp1-heat), org.kframework.attributes.Location(Location(58,19,58,68)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("b12d633378db5031b84f945597ee54b976c7b7dd1fc2ffb854a8963421b5460b"), heat{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX.throw_;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(58,19,58,68)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`throw_;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp`(inj{Type,Exp}(`int_SIMPLE-TYPED-STATIC-SYNTAX_Type`(.KList))))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{BlockOrStmtType,KItem}(`stmt_SIMPLE-TYPED-STATIC_BlockOrStmtType`(.KList))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d8eb437df4260870c282f947a9ce6416b7d6c2034e6ff19912129af20af6573b), org.kframework.attributes.Location(Location(205,8,205,26)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblthrow'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(inj{SortType{}, SortExp{}}(Lblint'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlockOrStmtType{}, SortKItem{}}(Lblstmt'Unds'SIMPLE-TYPED-STATIC'Unds'BlockOrStmtType{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("d8eb437df4260870c282f947a9ce6416b7d6c2034e6ff19912129af20af6573b"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(205,8,205,26)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`try_catch(_)__SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Block_Param_Block`(HOLE,K1,K2))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Block,KItem}(HOLE)~>`#freezertry_catch(_)__SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Block_Param_Block0_`(inj{Param,KItem}(K1),inj{Block,KItem}(K2))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Block,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(cf58dfcb570afa4ea8c71ed8ffc38619095f4d72e42309721488087712d5c12c), heat, label(SIMPLE-TYPED-STATIC-SYNTAX.try_catch(_)__SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Block_Param_Block1-heat), org.kframework.attributes.Location(Location(57,19,57,71)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict(1)]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbltry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block{}(VarHOLE:SortBlock{},VarK1:SortParam{},VarK2:SortBlock{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortBlock{}, SortKItem{}}(VarHOLE:SortBlock{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlock{}, SortKItem{}}(VarHOLE:SortBlock{}),kseq{}(Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(kseq{}(inj{SortParam{}, SortKItem{}}(VarK1:SortParam{}),dotk{}()),kseq{}(inj{SortBlock{}, SortKItem{}}(VarK2:SortBlock{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("cf58dfcb570afa4ea8c71ed8ffc38619095f4d72e42309721488087712d5c12c"), heat{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX.try_catch(_)__SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Block_Param_Block1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(57,19,57,71)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("1")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`try_catch(_)__SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Block_Param_Block`(inj{BlockOrStmtType,Block}(`block_SIMPLE-TYPED-STATIC_BlockOrStmtType`(.KList)),`___SIMPLE-TYPED-STATIC-SYNTAX_Param_Type_Id`(`int_SIMPLE-TYPED-STATIC-SYNTAX_Type`(.KList),X),`{_}_SIMPLE-TYPED-STATIC-SYNTAX_Block_Stmt`(S)))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Block,KItem}(`{_}_SIMPLE-TYPED-STATIC-SYNTAX_Block_Stmt`(`___SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Stmt_Stmt`(`__;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Type_Exps`(`int_SIMPLE-TYPED-STATIC-SYNTAX_Type`(.KList),`_,__SIMPLE-TYPED-STATIC-SYNTAX_Exps_Exp_Exps`(inj{Id,Exp}(X),inj{Types,Exps}(`.List{"_,__SIMPLE-TYPED-STATIC-SYNTAX_Types_Type_Types"}_Types`(.KList)))),S)))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f3b51a4fe7e98c3e1051831b65259bc41724c8079f2e140353f79956a584125d), org.kframework.attributes.Location(Location(203,8,203,51)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbltry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block{}(inj{SortBlockOrStmtType{}, SortBlock{}}(Lblblock'Unds'SIMPLE-TYPED-STATIC'Unds'BlockOrStmtType{}()),Lbl'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Param'Unds'Type'Unds'Id{}(Lblint'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}(),VarX:SortId{}),Lbl'LBraUndsRBraUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Block'Unds'Stmt{}(VarS:SortStmt{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlock{}, SortKItem{}}(Lbl'LBraUndsRBraUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Block'Unds'Stmt{}(Lbl'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(Lbl'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps{}(Lblint'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}(),Lbl'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(inj{SortId{}, SortExp{}}(VarX:SortId{}),inj{SortTypes{}, SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}()))),VarS:SortStmt{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("f3b51a4fe7e98c3e1051831b65259bc41724c8079f2e140353f79956a584125d"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(203,8,203,51)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`try_catch(_)__SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Block_Param_Block`(inj{BlockOrStmtType,Block}(`block_SIMPLE-TYPED-STATIC_BlockOrStmtType`(.KList)),`___SIMPLE-TYPED-STATIC-SYNTAX_Param_Type_Id`(`int_SIMPLE-TYPED-STATIC-SYNTAX_Type`(.KList),X),`{}_SIMPLE-TYPED-STATIC-SYNTAX_Block`(.KList)))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Block,KItem}(`{_}_SIMPLE-TYPED-STATIC-SYNTAX_Block_Stmt`(`__;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Type_Exps`(`int_SIMPLE-TYPED-STATIC-SYNTAX_Type`(.KList),`_,__SIMPLE-TYPED-STATIC-SYNTAX_Exps_Exp_Exps`(inj{Id,Exp}(X),inj{Types,Exps}(`.List{"_,__SIMPLE-TYPED-STATIC-SYNTAX_Types_Type_Types"}_Types`(.KList))))))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c43c0c2a905567a5465edabc06563fde1bd9ba58f800a35c06d2fa5055849a3a), org.kframework.attributes.Location(Location(204,8,204,48)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbltry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block{}(inj{SortBlockOrStmtType{}, SortBlock{}}(Lblblock'Unds'SIMPLE-TYPED-STATIC'Unds'BlockOrStmtType{}()),Lbl'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Param'Unds'Type'Unds'Id{}(Lblint'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}(),VarX:SortId{}),Lbl'LBraRBraUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Block{}())),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlock{}, SortKItem{}}(Lbl'LBraUndsRBraUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Block'Unds'Stmt{}(Lbl'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps{}(Lblint'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}(),Lbl'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(inj{SortId{}, SortExp{}}(VarX:SortId{}),inj{SortTypes{}, SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}()))))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("c43c0c2a905567a5465edabc06563fde1bd9ba58f800a35c06d2fa5055849a3a"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(204,8,204,48)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`while(_)__SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp_Block`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerwhile(_)__SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp_Block0_`(inj{Block,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(b38d7fb3732f2caff12a269f821913bd83b05cd7f60ee8de4a864dcb7eb55c6c), heat, label(SIMPLE-TYPED-STATIC-SYNTAX.while(_)__SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp_Block1-heat), org.kframework.attributes.Location(Location(52,19,52,68)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(VarHOLE:SortExp{},VarK1:SortBlock{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(kseq{}(inj{SortBlock{}, SortKItem{}}(VarK1:SortBlock{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("b38d7fb3732f2caff12a269f821913bd83b05cd7f60ee8de4a864dcb7eb55c6c"), heat{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX.while(_)__SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp_Block1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(52,19,52,68)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`while(_)__SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp_Block`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Block,KItem}(HOLE)~>`#freezerwhile(_)__SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp_Block1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Block,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(6234f56183f8290b521756431fcb3f8aa1607dbe5c489073a5a034eebd191bd6), heat, label(SIMPLE-TYPED-STATIC-SYNTAX.while(_)__SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp_Block2-heat), org.kframework.attributes.Location(Location(52,19,52,68)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(VarK0:SortExp{},VarHOLE:SortBlock{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortBlock{}, SortKItem{}}(VarHOLE:SortBlock{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlock{}, SortKItem{}}(VarHOLE:SortBlock{}),kseq{}(Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("6234f56183f8290b521756431fcb3f8aa1607dbe5c489073a5a034eebd191bd6"), heat{}(), label{}("SIMPLE-TYPED-STATIC-SYNTAX.while(_)__SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp_Block2-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(52,19,52,68)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`while(_)__SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp_Block`(inj{Type,Exp}(`bool_SIMPLE-TYPED-STATIC-SYNTAX_Type`(.KList)),inj{BlockOrStmtType,Block}(`block_SIMPLE-TYPED-STATIC_BlockOrStmtType`(.KList))))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{BlockOrStmtType,KItem}(`stmt_SIMPLE-TYPED-STATIC_BlockOrStmtType`(.KList))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(099fbd5ee1d9dcd60c1cb3d6045c75305253e7fbb022df849d5db7f852d338d9), org.kframework.attributes.Location(Location(201,8,201,34)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(inj{SortType{}, SortExp{}}(Lblbool'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}()),inj{SortBlockOrStmtType{}, SortBlock{}}(Lblblock'Unds'SIMPLE-TYPED-STATIC'Unds'BlockOrStmtType{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlockOrStmtType{}, SortKItem{}}(Lblstmt'Unds'SIMPLE-TYPED-STATIC'Unds'BlockOrStmtType{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("099fbd5ee1d9dcd60c1cb3d6045c75305253e7fbb022df849d5db7f852d338d9"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(201,8,201,34)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Block,KItem}(`{_}_SIMPLE-TYPED-STATIC-SYNTAX_Block_Stmt`(S))~>_DotVar3),`<tenv>`(Rho),`<currEnvVar>`(_Gen0),R)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{BlockOrStmtType,KItem}(`block_SIMPLE-TYPED-STATIC_BlockOrStmtType`(.KList))~>_DotVar3),`<tenv>`(Rho),`<currEnvVar>`(_Gen0),R)),`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(S)),`<tenv>`(Rho),`<currEnvVar>`(`.Set`(.KList)),R))),_DotVar2)),_DotVar1),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(00ecd314dad4192b84a758b86f09ae11de3396971ec0ee58c9c3015b875a19f0), org.kframework.attributes.Location(Location(195,8,196,96)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlock{}, SortKItem{}}(Lbl'LBraUndsRBraUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Block'Unds'Stmt{}(VarS:SortStmt{})),Var'Unds'DotVar3:SortK{})),Lbl'-LT-'tenv'-GT-'{}(VarRho:SortMap{}),Lbl'-LT-'currEnvVar'-GT-'{}(Var'Unds'Gen0:SortSet{}),VarR:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlockOrStmtType{}, SortKItem{}}(Lblblock'Unds'SIMPLE-TYPED-STATIC'Unds'BlockOrStmtType{}()),Var'Unds'DotVar3:SortK{})),Lbl'-LT-'tenv'-GT-'{}(VarRho:SortMap{}),Lbl'-LT-'currEnvVar'-GT-'{}(Var'Unds'Gen0:SortSet{}),VarR:SortReturnTypeCell{})),LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(VarS:SortStmt{}),dotk{}())),Lbl'-LT-'tenv'-GT-'{}(VarRho:SortMap{}),Lbl'-LT-'currEnvVar'-GT-'{}(Lbl'Stop'Set{}()),VarR:SortReturnTypeCell{}))),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("00ecd314dad4192b84a758b86f09ae11de3396971ec0ee58c9c3015b875a19f0"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(195,8,196,96)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Block,KItem}(`{}_SIMPLE-TYPED-STATIC-SYNTAX_Block`(.KList))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{BlockOrStmtType,KItem}(`block_SIMPLE-TYPED-STATIC_BlockOrStmtType`(.KList))~>_DotVar4),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(79a9f5c3f6c21b7c81c588815467e35ac4f1d256d16b447860ece2a9e9114daf), org.kframework.attributes.Location(Location(193,8,193,19)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlock{}, SortKItem{}}(Lbl'LBraRBraUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Block{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlockOrStmtType{}, SortKItem{}}(Lblblock'Unds'SIMPLE-TYPED-STATIC'Unds'BlockOrStmtType{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCurrEnvVarCell{},Var'Unds'Gen2:SortReturnTypeCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortGtenvCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("79a9f5c3f6c21b7c81c588815467e35ac4f1d256d16b447860ece2a9e9114daf"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(193,8,193,19)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `Bool2String(_)_STRING-COMMON_String_Bool`(#token("false","Bool"))=>#token("\"false\"","String") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(cca4780e4e7660055f781b9643f3125234a0f4f08ba76cacf8e5a18fe7fc999f), org.kframework.attributes.Location(Location(1764,8,1764,37)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("false")
          ),
          \top{R} ()
        )),
    \equals{SortString{},R} (
      LblBool2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Bool{}(X0:SortBool{}),
     \and{SortString{}} (
       \dv{SortString{}}("false"),
        \top{SortString{}}())))
  [UNIQUE'Unds'ID{}("cca4780e4e7660055f781b9643f3125234a0f4f08ba76cacf8e5a18fe7fc999f"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1764,8,1764,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `Bool2String(_)_STRING-COMMON_String_Bool`(#token("true","Bool"))=>#token("\"true\"","String") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(365df37345a5a44ac061f8741369c7bd74a49f0f6e7b716be0374806dd1add3d), org.kframework.attributes.Location(Location(1763,8,1763,36)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("true")
          ),
          \top{R} ()
        )),
    \equals{SortString{},R} (
      LblBool2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Bool{}(X0:SortBool{}),
     \and{SortString{}} (
       \dv{SortString{}}("true"),
        \top{SortString{}}())))
  [UNIQUE'Unds'ID{}("365df37345a5a44ac061f8741369c7bd74a49f0f6e7b716be0374806dd1add3d"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1763,8,1763,36)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `String2Bool(_)_STRING-COMMON_Bool_String`(#token("\"false\"","String"))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b73b5c8e0ae45020f2b9b8170d366691fee01a63763b79653a2075703ec4e835), org.kframework.attributes.Location(Location(1770,8,1770,37)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            \dv{SortString{}}("false")
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblString2Bool'LParUndsRParUnds'STRING-COMMON'Unds'Bool'Unds'String{}(X0:SortString{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("b73b5c8e0ae45020f2b9b8170d366691fee01a63763b79653a2075703ec4e835"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1770,8,1770,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `String2Bool(_)_STRING-COMMON_Bool_String`(#token("\"true\"","String"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(27a5d1d7872d61f82556a4e44bda13846dde7dc2d9c54304d7858de9a8b9d6b8), org.kframework.attributes.Location(Location(1769,8,1769,36)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            \dv{SortString{}}("true")
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblString2Bool'LParUndsRParUnds'STRING-COMMON'Unds'Bool'Unds'String{}(X0:SortString{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("27a5d1d7872d61f82556a4e44bda13846dde7dc2d9c54304d7858de9a8b9d6b8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1769,8,1769,36)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_<=String__STRING-COMMON_Bool_String_String`(S1,S2)=>`notBool_`(`_<String__STRING-COMMON_Bool_String_String`(S2,S1)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9e50fb4dcba1212ee863c170298cb8b555f39fb3b4bcb649f3d1d8e321accc80), org.kframework.attributes.Location(Location(1863,8,1863,63)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarS1:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarS2:SortString{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds-LT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(X0:SortString{},X1:SortString{}),
     \and{SortBool{}} (
       LblnotBool'Unds'{}(Lbl'Unds-LT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(VarS2:SortString{},VarS1:SortString{})),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("9e50fb4dcba1212ee863c170298cb8b555f39fb3b4bcb649f3d1d8e321accc80"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1863,8,1863,63)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_=/=Bool_`(B1,B2)=>`notBool_`(`_==Bool_`(B1,B2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(31fe72efcfddcd8588a11d9d10c1b1a9f96ae3da46b647d4cb9d1e8b1bd1654f), org.kframework.attributes.Location(Location(1150,8,1150,57)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarB1:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarB2:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       LblnotBool'Unds'{}(Lbl'UndsEqlsEqls'Bool'Unds'{}(VarB1:SortBool{},VarB2:SortBool{})),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("31fe72efcfddcd8588a11d9d10c1b1a9f96ae3da46b647d4cb9d1e8b1bd1654f"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1150,8,1150,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_=/=Int_`(I1,I2)=>`notBool_`(`_==Int_`(I1,I2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4de6e05b11cdbed7ef5cb4c952127924661af4744c1e495370e1c8a962ba7be3), org.kframework.attributes.Location(Location(1429,8,1429,53)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'UndsEqlsSlshEqls'Int'Unds'{}(X0:SortInt{},X1:SortInt{}),
     \and{SortBool{}} (
       LblnotBool'Unds'{}(Lbl'UndsEqlsEqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("4de6e05b11cdbed7ef5cb4c952127924661af4744c1e495370e1c8a962ba7be3"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1429,8,1429,53)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_=/=K_`(K1,K2)=>`notBool_`(`_==K_`(K1,K2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(bccaba7335e4cd77501a0667f2f7b3eb4a2105d5f60d804915dd4b1b08902c0c), org.kframework.attributes.Location(Location(2302,8,2302,45)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK1:SortK{}
          ),\and{R} (
          \in{SortK{}, R} (
            X1:SortK{},
            VarK2:SortK{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'UndsEqlsSlshEqls'K'Unds'{}(X0:SortK{},X1:SortK{}),
     \and{SortBool{}} (
       LblnotBool'Unds'{}(Lbl'UndsEqlsEqls'K'Unds'{}(VarK1:SortK{},VarK2:SortK{})),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("bccaba7335e4cd77501a0667f2f7b3eb4a2105d5f60d804915dd4b1b08902c0c"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2302,8,2302,45)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_=/=String__STRING-COMMON_Bool_String_String`(S1,S2)=>`notBool_`(`_==String__STRING-COMMON_Bool_String_String`(S1,S2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f390a9b650f3de0e3a93773a46e65aae3decdeb2a10906058f204f031681c9b7), org.kframework.attributes.Location(Location(1843,8,1843,65)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarS1:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarS2:SortString{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(X0:SortString{},X1:SortString{}),
     \and{SortBool{}} (
       LblnotBool'Unds'{}(Lbl'UndsEqlsEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(VarS1:SortString{},VarS2:SortString{})),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("f390a9b650f3de0e3a93773a46e65aae3decdeb2a10906058f204f031681c9b7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1843,8,1843,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_>=String__STRING-COMMON_Bool_String_String`(S1,S2)=>`notBool_`(`_<String__STRING-COMMON_Bool_String_String`(S1,S2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b376ffb0925555ed27696d73fc8fe43306e2005e4cf6ad819e860958992f9f17), org.kframework.attributes.Location(Location(1865,8,1865,63)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarS1:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarS2:SortString{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds-GT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(X0:SortString{},X1:SortString{}),
     \and{SortBool{}} (
       LblnotBool'Unds'{}(Lbl'Unds-LT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(VarS1:SortString{},VarS2:SortString{})),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("b376ffb0925555ed27696d73fc8fe43306e2005e4cf6ad819e860958992f9f17"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1865,8,1865,63)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_>String__STRING-COMMON_Bool_String_String`(S1,S2)=>`_<String__STRING-COMMON_Bool_String_String`(S2,S1) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8e5353c0a58491f8613ad7a35d0833206c342df0c91773e42485e52f4dad0cd0), org.kframework.attributes.Location(Location(1864,8,1864,52)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarS1:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarS2:SortString{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds-GT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(X0:SortString{},X1:SortString{}),
     \and{SortBool{}} (
       Lbl'Unds-LT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(VarS2:SortString{},VarS1:SortString{}),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("8e5353c0a58491f8613ad7a35d0833206c342df0c91773e42485e52f4dad0cd0"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1864,8,1864,52)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `__;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Type_Exps`(T,`_,__SIMPLE-TYPED-STATIC-SYNTAX_Exps_Exp_Exps`(`_=__SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(inj{Id,Exp}(X) #as _Gen2,E) #as _Gen1,`.List{"_,__SIMPLE-TYPED-STATIC-SYNTAX_Exps_Exp_Exps"}_Exps`(.KList) #as _Gen3))=>`___SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Stmt_Stmt`(`__;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Type_Exps`(T,`_,__SIMPLE-TYPED-STATIC-SYNTAX_Exps_Exp_Exps`(_Gen2,_Gen3)),`_;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Exp`(_Gen1)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(658a2ffb34b5bee3a11aa4da83688e60d75ffec87f74a499422d0b8f2bdbdf44), anywhere, org.kframework.attributes.Location(Location(68,8,68,39)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortType{}, R} (
            X0:SortType{},
            VarT:SortType{}
          ),\and{R} (
          \in{SortExps{}, R} (
            X1:SortExps{},
            Lbl'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(\and{SortExp{}}(Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}}(inj{SortId{}, SortExp{}}(VarX:SortId{}),Var'Unds'Gen2:SortExp{}),VarE:SortExp{}),Var'Unds'Gen1:SortExp{}),\and{SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps'QuotRBraUnds'Exps{}(),Var'Unds'Gen3:SortExps{}))
          ),
          \top{R} ()
        ))),
    \equals{SortStmt{},R} (
      Lbl'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps{}(X0:SortType{},X1:SortExps{}),
     \and{SortStmt{}} (
       Lbl'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(Lbl'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps{}(VarT:SortType{},Lbl'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(Var'Unds'Gen2:SortExp{},Var'Unds'Gen3:SortExps{})),Lbl'UndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Var'Unds'Gen1:SortExp{})),
        \top{SortStmt{}}())))
  [UNIQUE'Unds'ID{}("658a2ffb34b5bee3a11aa4da83688e60d75ffec87f74a499422d0b8f2bdbdf44"), anywhere{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(68,8,68,39)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `__;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Type_Exps`(T,`_,__SIMPLE-TYPED-STATIC-SYNTAX_Exps_Exp_Exps`(E1,`_,__SIMPLE-TYPED-STATIC-SYNTAX_Exps_Exp_Exps`(E2,Es) #as _Gen1))=>`___SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Stmt_Stmt`(`__;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Type_Exps`(T,`_,__SIMPLE-TYPED-STATIC-SYNTAX_Exps_Exp_Exps`(E1,`.List{"_,__SIMPLE-TYPED-STATIC-SYNTAX_Exps_Exp_Exps"}_Exps`(.KList))),`__;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Type_Exps`(T,_Gen1)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a340f7d58571bb7f6fd010802c8789bb396d8745654f457bcaf712e757bb2106), anywhere, org.kframework.attributes.Location(Location(67,8,67,58)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortType{}, R} (
            X0:SortType{},
            VarT:SortType{}
          ),\and{R} (
          \in{SortExps{}, R} (
            X1:SortExps{},
            Lbl'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(VarE1:SortExp{},\and{SortExps{}}(Lbl'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(VarE2:SortExp{},VarEs:SortExps{}),Var'Unds'Gen1:SortExps{}))
          ),
          \top{R} ()
        ))),
    \equals{SortStmt{},R} (
      Lbl'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps{}(X0:SortType{},X1:SortExps{}),
     \and{SortStmt{}} (
       Lbl'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(Lbl'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps{}(VarT:SortType{},Lbl'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(VarE1:SortExp{},Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps'QuotRBraUnds'Exps{}())),Lbl'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps{}(VarT:SortType{},Var'Unds'Gen1:SortExps{})),
        \top{SortStmt{}}())))
  [UNIQUE'Unds'ID{}("a340f7d58571bb7f6fd010802c8789bb396d8745654f457bcaf712e757bb2106"), anywhere{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(67,8,67,58)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_andBool_`(#token("false","Bool") #as _Gen1,_Gen0)=>_Gen1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(61fbef33b3611f1cc2aaf3b5e8ddec4a0f434c557278c38461c65c8722743497), org.kframework.attributes.Location(Location(1123,8,1123,37)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \and{SortBool{}}(\dv{SortBool{}}("false"),Var'Unds'Gen1:SortBool{})
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'andBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       Var'Unds'Gen1:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("61fbef33b3611f1cc2aaf3b5e8ddec4a0f434c557278c38461c65c8722743497"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1123,8,1123,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_andBool_`(B,#token("true","Bool"))=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e8d4ca75a690151f99f8904b068db555782f5599b11230a9d0b97a71afb6fc98), org.kframework.attributes.Location(Location(1122,8,1122,37)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarB:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \dv{SortBool{}}("true")
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'andBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarB:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("e8d4ca75a690151f99f8904b068db555782f5599b11230a9d0b97a71afb6fc98"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1122,8,1122,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_andBool_`(_Gen0,#token("false","Bool") #as _Gen1)=>_Gen1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9c183fae7de06f560180386d14d29c609cadf0c98266ce2adbecb50100a1daca), org.kframework.attributes.Location(Location(1124,8,1124,37)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \and{SortBool{}}(\dv{SortBool{}}("false"),Var'Unds'Gen1:SortBool{})
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'andBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       Var'Unds'Gen1:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("9c183fae7de06f560180386d14d29c609cadf0c98266ce2adbecb50100a1daca"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1124,8,1124,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_andBool_`(#token("true","Bool"),B)=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5b9db8dba12010819161cc42dadccd0adf0100a47c21f884ae66c0a3d5483a1f), org.kframework.attributes.Location(Location(1121,8,1121,37)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("true")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarB:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'andBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarB:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("5b9db8dba12010819161cc42dadccd0adf0100a47c21f884ae66c0a3d5483a1f"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1121,8,1121,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_andThenBool_`(#token("false","Bool") #as _Gen1,_Gen0)=>_Gen1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5b729746be7bf2183d9eff138d97078a7c9489def6d8b2e1495c41ce3954997d), org.kframework.attributes.Location(Location(1128,8,1128,36)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \and{SortBool{}}(\dv{SortBool{}}("false"),Var'Unds'Gen1:SortBool{})
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'andThenBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       Var'Unds'Gen1:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("5b729746be7bf2183d9eff138d97078a7c9489def6d8b2e1495c41ce3954997d"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1128,8,1128,36)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_andThenBool_`(K,#token("true","Bool"))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(82ac30b094be9b12206773d87b60274e929a41ca595f4674be1d37eeff873d7c), org.kframework.attributes.Location(Location(1127,8,1127,37)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarK:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \dv{SortBool{}}("true")
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'andThenBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarK:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("82ac30b094be9b12206773d87b60274e929a41ca595f4674be1d37eeff873d7c"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1127,8,1127,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_andThenBool_`(_Gen0,#token("false","Bool") #as _Gen1)=>_Gen1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0508592878b546cbc6eeda6ec7b322584eea5c6d6eea3f72be8418fe4f7149b2), org.kframework.attributes.Location(Location(1129,8,1129,36)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \and{SortBool{}}(\dv{SortBool{}}("false"),Var'Unds'Gen1:SortBool{})
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'andThenBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       Var'Unds'Gen1:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("0508592878b546cbc6eeda6ec7b322584eea5c6d6eea3f72be8418fe4f7149b2"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1129,8,1129,36)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_andThenBool_`(#token("true","Bool"),K)=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(78a3191cbbdec57b0f411f41291076c8124bb0d9b6b57905674b2c6858d78689), org.kframework.attributes.Location(Location(1126,8,1126,37)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("true")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarK:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'andThenBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarK:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("78a3191cbbdec57b0f411f41291076c8124bb0d9b6b57905674b2c6858d78689"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1126,8,1126,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_divInt_`(I1,I2)=>`_/Int_`(`_-Int_`(I1,`_modInt_`(I1,I2)),I2) requires `_=/=Int_`(I2,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(83dcf9bc8c69f131715bc7a92d06c99b9a2b5f4c4fdafb69e6fdb2f1822712d4), org.kframework.attributes.Location(Location(1418,8,1419,23)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarI2:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))),
    \equals{SortInt{},R} (
      Lbl'Unds'divInt'Unds'{}(X0:SortInt{},X1:SortInt{}),
     \and{SortInt{}} (
       Lbl'UndsSlsh'Int'Unds'{}(Lbl'Unds'-Int'Unds'{}(VarI1:SortInt{},Lbl'Unds'modInt'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),VarI2:SortInt{}),
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("83dcf9bc8c69f131715bc7a92d06c99b9a2b5f4c4fdafb69e6fdb2f1822712d4"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1418,8,1419,23)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]")]

// rule `_dividesInt__INT-COMMON_Bool_Int_Int`(I1,I2)=>`_==Int_`(`_%Int_`(I2,I1),#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(fd8facae0061fe5bc5c406f7ad2ed5d8d21960bf1118c9b240451253064dadb5), org.kframework.attributes.Location(Location(1430,8,1430,58)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'dividesInt'UndsUnds'INT-COMMON'Unds'Bool'Unds'Int'Unds'Int{}(X0:SortInt{},X1:SortInt{}),
     \and{SortBool{}} (
       Lbl'UndsEqlsEqls'Int'Unds'{}(Lbl'UndsPerc'Int'Unds'{}(VarI2:SortInt{},VarI1:SortInt{}),\dv{SortInt{}}("0")),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("fd8facae0061fe5bc5c406f7ad2ed5d8d21960bf1118c9b240451253064dadb5"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1430,8,1430,58)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_impliesBool_`(B,#token("false","Bool"))=>`notBool_`(B) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(022c562a21d72cedfb795607d2249b8ad14b66399b720b3b2f4a05a1da08df96), org.kframework.attributes.Location(Location(1148,8,1148,45)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarB:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \dv{SortBool{}}("false")
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'impliesBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       LblnotBool'Unds'{}(VarB:SortBool{}),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("022c562a21d72cedfb795607d2249b8ad14b66399b720b3b2f4a05a1da08df96"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1148,8,1148,45)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_impliesBool_`(_Gen0,#token("true","Bool"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(99ba64afc26a739953df142ccd4b486bba68107fce8c9aa356d40afa7a988712), org.kframework.attributes.Location(Location(1147,8,1147,39)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \dv{SortBool{}}("true")
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'impliesBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("99ba64afc26a739953df142ccd4b486bba68107fce8c9aa356d40afa7a988712"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1147,8,1147,39)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_impliesBool_`(#token("false","Bool"),_Gen0)=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(55bb5c83c9563c712537b95401c0a5c88255fd7cdbd18b2d4358c54aee80660e), org.kframework.attributes.Location(Location(1146,8,1146,40)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("false")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'impliesBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("55bb5c83c9563c712537b95401c0a5c88255fd7cdbd18b2d4358c54aee80660e"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1146,8,1146,40)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_impliesBool_`(#token("true","Bool"),B)=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(da818c43c21c5fb2cced7e02a74b6b4191d323de2967a671b961ad28550f3c7d), org.kframework.attributes.Location(Location(1145,8,1145,36)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("true")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarB:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'impliesBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarB:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("da818c43c21c5fb2cced7e02a74b6b4191d323de2967a671b961ad28550f3c7d"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1145,8,1145,36)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_modInt_`(I1,I2)=>`_%Int_`(`_+Int_`(`_%Int_`(I1,`absInt(_)_INT-COMMON_Int_Int`(I2)),`absInt(_)_INT-COMMON_Int_Int`(I2)),`absInt(_)_INT-COMMON_Int_Int`(I2)) requires `_=/=Int_`(I2,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(adfacb58b0678a49f66186954229939a953c9849d5b08edc8f887c0d7514b2c6), concrete, org.kframework.attributes.Location(Location(1421,5,1424,23)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarI2:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \equals{SortInt{},R} (
      Lbl'Unds'modInt'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}),
     \and{SortInt{}} (
       Lbl'UndsPerc'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(Lbl'UndsPerc'Int'Unds'{}(VarI1:SortInt{},LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(VarI2:SortInt{})),LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(VarI2:SortInt{})),LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(VarI2:SortInt{})),
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("adfacb58b0678a49f66186954229939a953c9849d5b08edc8f887c0d7514b2c6"), concrete{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1421,5,1424,23)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), simplification{}()]

// rule `_orBool_`(B,#token("false","Bool"))=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d7245713da157cf997438091f92bb78eb51a6cefa568bb0d30560ce08d647f26), org.kframework.attributes.Location(Location(1138,8,1138,32)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarB:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \dv{SortBool{}}("false")
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'orBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarB:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("d7245713da157cf997438091f92bb78eb51a6cefa568bb0d30560ce08d647f26"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1138,8,1138,32)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_orBool_`(_Gen0,#token("true","Bool"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(47860d52c18a441b229449cd89d5464256137dc32deb5551effbac0482c883f3), org.kframework.attributes.Location(Location(1136,8,1136,34)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \dv{SortBool{}}("true")
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'orBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("47860d52c18a441b229449cd89d5464256137dc32deb5551effbac0482c883f3"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1136,8,1136,34)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_orBool_`(#token("false","Bool"),B)=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(991a3290bc7b6dca75d676a72a848ec6b2bd2827fb0e9626252aa1507394ca1b), org.kframework.attributes.Location(Location(1137,8,1137,32)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("false")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarB:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'orBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarB:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("991a3290bc7b6dca75d676a72a848ec6b2bd2827fb0e9626252aa1507394ca1b"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1137,8,1137,32)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_orBool_`(#token("true","Bool"),_Gen0)=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(71744528cdad83bc729990d3af3b544d27b09630b2615ca707dd2fc6ec93e7c2), org.kframework.attributes.Location(Location(1135,8,1135,34)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("true")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'orBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("71744528cdad83bc729990d3af3b544d27b09630b2615ca707dd2fc6ec93e7c2"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1135,8,1135,34)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_orElseBool_`(K,#token("false","Bool"))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(684b0444a1f711d49ff1502423a3346fb26958697423db488b05d25081fc0480), org.kframework.attributes.Location(Location(1143,8,1143,37)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarK:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \dv{SortBool{}}("false")
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'orElseBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarK:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("684b0444a1f711d49ff1502423a3346fb26958697423db488b05d25081fc0480"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1143,8,1143,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_orElseBool_`(_Gen0,#token("true","Bool"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c9eccff94ecf6e810c600d4536bf1701485c13c3456c6b98c0cdab0fe7c5af14), org.kframework.attributes.Location(Location(1141,8,1141,33)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \dv{SortBool{}}("true")
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'orElseBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("c9eccff94ecf6e810c600d4536bf1701485c13c3456c6b98c0cdab0fe7c5af14"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1141,8,1141,33)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_orElseBool_`(#token("false","Bool"),K)=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(eb8c85dac19a5951f694b65269c2b17c80d6d126d6a367958e4a5d736a880ecf), org.kframework.attributes.Location(Location(1142,8,1142,37)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("false")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarK:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'orElseBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarK:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("eb8c85dac19a5951f694b65269c2b17c80d6d126d6a367958e4a5d736a880ecf"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1142,8,1142,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_orElseBool_`(#token("true","Bool"),_Gen0)=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(354bd0860c7f38b59e285c935fd2ea553ebddbabb4973342ad25f0dac6ea7bf6), org.kframework.attributes.Location(Location(1140,8,1140,33)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("true")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'orElseBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("354bd0860c7f38b59e285c935fd2ea553ebddbabb4973342ad25f0dac6ea7bf6"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1140,8,1140,33)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_xorBool_`(B,B)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9a6d91cd75cd777b0d4db536b3e4b20578e74fe650e644b55294da95fd2dba7f), org.kframework.attributes.Location(Location(1133,8,1133,38)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarB:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarB:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'xorBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("9a6d91cd75cd777b0d4db536b3e4b20578e74fe650e644b55294da95fd2dba7f"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1133,8,1133,38)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_xorBool_`(B,#token("false","Bool"))=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7a2851f9d4ea4bd3f35070ee029fc3bdca36e361f7ee54addeff9d10ddeb7c75), org.kframework.attributes.Location(Location(1132,8,1132,38)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarB:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \dv{SortBool{}}("false")
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'xorBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarB:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("7a2851f9d4ea4bd3f35070ee029fc3bdca36e361f7ee54addeff9d10ddeb7c75"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1132,8,1132,38)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_xorBool_`(#token("false","Bool"),B)=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(73513655c09a595907ab9d26d67e27f01d14a3435743b77000c02d10f35c05bf), org.kframework.attributes.Location(Location(1131,8,1131,38)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("false")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarB:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'xorBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarB:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("73513655c09a595907ab9d26d67e27f01d14a3435743b77000c02d10f35c05bf"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1131,8,1131,38)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_|Set__SET_Set_Set_Set`(S1,S2)=>`_Set_`(S1,`Set:difference`(S2,S1)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e9a710d8d1ca5c799420161879cbbff926de45a5bddd820d646f51d43eb67e62), concrete, org.kframework.attributes.Location(Location(749,8,749,45)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortSet{}, R} (
            X0:SortSet{},
            VarS1:SortSet{}
          ),\and{R} (
          \in{SortSet{}, R} (
            X1:SortSet{},
            VarS2:SortSet{}
          ),
          \top{R} ()
        ))),
    \equals{SortSet{},R} (
      Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(X0:SortSet{},X1:SortSet{}),
     \and{SortSet{}} (
       Lbl'Unds'Set'Unds'{}(VarS1:SortSet{},LblSet'Coln'difference{}(VarS2:SortSet{},VarS1:SortSet{})),
        \top{SortSet{}}())))
  [UNIQUE'Unds'ID{}("e9a710d8d1ca5c799420161879cbbff926de45a5bddd820d646f51d43eb67e62"), concrete{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(749,8,749,45)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `bitRangeInt(_,_,_)_INT-COMMON_Int_Int_Int_Int`(I,IDX,LEN)=>`_modInt_`(`_>>Int_`(I,IDX),`_<<Int_`(#token("1","Int"),LEN)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(147fc15c2ec6c36de1a9c0cad6212b8acd8b224f21c0aeabd36726e9c8a06119), org.kframework.attributes.Location(Location(1414,8,1414,85)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarIDX:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarLEN:SortInt{}
          ),
          \top{R} ()
        )))),
    \equals{SortInt{},R} (
      LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int{}(X0:SortInt{},X1:SortInt{},X2:SortInt{}),
     \and{SortInt{}} (
       Lbl'Unds'modInt'Unds'{}(Lbl'Unds-GT--GT-'Int'Unds'{}(VarI:SortInt{},VarIDX:SortInt{}),Lbl'Unds-LT--LT-'Int'Unds'{}(\dv{SortInt{}}("1"),VarLEN:SortInt{})),
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("147fc15c2ec6c36de1a9c0cad6212b8acd8b224f21c0aeabd36726e9c8a06119"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1414,8,1414,85)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `countAllOccurrences(_,_)_STRING-COMMON_Int_String_String`(Source,ToCount)=>`_+Int_`(#token("1","Int"),`countAllOccurrences(_,_)_STRING-COMMON_Int_String_String`(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(Source,`_+Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToCount,#token("0","Int")),`lengthString(_)_STRING-COMMON_Int_String`(ToCount)),`lengthString(_)_STRING-COMMON_Int_String`(Source)),ToCount)) requires `_>=Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToCount,#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(628cff029a6d79e4c99999c0309f91ab8cb12f0ba549bb3faa850f96304c970e), org.kframework.attributes.Location(Location(1874,8,1875,60)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-GT-Eqls'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToCount:SortString{},\dv{SortInt{}}("0")),\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarSource:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarToCount:SortString{}
          ),
          \top{R} ()
        ))),
    \equals{SortInt{},R} (
      LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String{}(X0:SortString{},X1:SortString{}),
     \and{SortInt{}} (
       Lbl'UndsPlus'Int'Unds'{}(\dv{SortInt{}}("1"),LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String{}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarSource:SortString{},Lbl'UndsPlus'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToCount:SortString{},\dv{SortInt{}}("0")),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarToCount:SortString{})),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarSource:SortString{})),VarToCount:SortString{})),
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("628cff029a6d79e4c99999c0309f91ab8cb12f0ba549bb3faa850f96304c970e"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1874,8,1875,60)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]")]

// rule `countAllOccurrences(_,_)_STRING-COMMON_Int_String_String`(Source,ToCount)=>#token("0","Int") requires `_<Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToCount,#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(1c726cd81629c2e5f411539a7f9b4d297e8600e5d71a5d235d287e3001f3ec84), org.kframework.attributes.Location(Location(1872,8,1873,59)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-LT-'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToCount:SortString{},\dv{SortInt{}}("0")),\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarSource:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarToCount:SortString{}
          ),
          \top{R} ()
        ))),
    \equals{SortInt{},R} (
      LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String{}(X0:SortString{},X1:SortString{}),
     \and{SortInt{}} (
       \dv{SortInt{}}("0"),
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("1c726cd81629c2e5f411539a7f9b4d297e8600e5d71a5d235d287e3001f3ec84"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1872,8,1873,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]")]

// rule `findChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,S2,I)=>`#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`{Int}(`_==Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("0","Int"),#token("1","Int")),I),#token("-1","Int")),`findChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("1","Int"),`lengthString(_)_STRING-COMMON_Int_String`(S2)),I),`#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`{Int}(`_==Int_`(`findChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("1","Int"),`lengthString(_)_STRING-COMMON_Int_String`(S2)),I),#token("-1","Int")),`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("0","Int"),#token("1","Int")),I),`minInt(_,_)_INT-COMMON_Int_Int_Int`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("0","Int"),#token("1","Int")),I),`findChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("1","Int"),`lengthString(_)_STRING-COMMON_Int_String`(S2)),I)))) requires `_=/=String__STRING-COMMON_Bool_String_String`(S2,#token("\"\"","String")) ensures #token("true","Bool") [UNIQUE_ID(9a3b7d1924363894c859ceb6bcec34fb944f01a5e0c90679d41b8430990b7295), org.kframework.attributes.Location(Location(1867,8,1867,431)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(VarS2:SortString{},\dv{SortString{}}("")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarS1:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarS2:SortString{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarI:SortInt{}
          ),
          \top{R} ()
        )))),
    \equals{SortInt{},R} (
      LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(X0:SortString{},X1:SortString{},X2:SortInt{}),
     \and{SortInt{}} (
       Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortInt{}}(Lbl'UndsEqlsEqls'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("0"),\dv{SortInt{}}("1")),VarI:SortInt{}),\dv{SortInt{}}("-1")),LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("1"),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarS2:SortString{})),VarI:SortInt{}),Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortInt{}}(Lbl'UndsEqlsEqls'Int'Unds'{}(LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("1"),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarS2:SortString{})),VarI:SortInt{}),\dv{SortInt{}}("-1")),LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("0"),\dv{SortInt{}}("1")),VarI:SortInt{}),LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("0"),\dv{SortInt{}}("1")),VarI:SortInt{}),LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("1"),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarS2:SortString{})),VarI:SortInt{})))),
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("9a3b7d1924363894c859ceb6bcec34fb944f01a5e0c90679d41b8430990b7295"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1867,8,1867,431)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]")]

// rule `findChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(_Gen0,#token("\"\"","String"),_Gen1)=>#token("-1","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5a6cf981f0ec2494854cd3e517b0cf645a1c9762c92a14849adfca9a6a553117), org.kframework.attributes.Location(Location(1868,8,1868,32)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            Var'Unds'Gen0:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            \dv{SortString{}}("")
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            Var'Unds'Gen1:SortInt{}
          ),
          \top{R} ()
        )))),
    \equals{SortInt{},R} (
      LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(X0:SortString{},X1:SortString{},X2:SortInt{}),
     \and{SortInt{}} (
       \dv{SortInt{}}("-1"),
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("5a6cf981f0ec2494854cd3e517b0cf645a1c9762c92a14849adfca9a6a553117"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1868,8,1868,32)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `freshId(_)_ID-COMMON_Id_Int`(I)=>`String2Id(_)_ID-COMMON_Id_String`(`_+String__STRING-COMMON_String_String_String`(#token("\"_\"","String"),`Int2String(_)_STRING-COMMON_String_Int`(I))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3965c8e65257ebae926d601fa8ac672d34e4c211d73ba594c571c6bc5960f3de), org.kframework.attributes.Location(Location(2246,8,2246,62)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI:SortInt{}
          ),
          \top{R} ()
        )),
    \equals{SortId{},R} (
      LblfreshId'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'Int{}(X0:SortInt{}),
     \and{SortId{}} (
       LblString2Id'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(\dv{SortString{}}("_"),LblInt2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int{}(VarI:SortInt{}))),
        \top{SortId{}}())))
  [UNIQUE'Unds'ID{}("3965c8e65257ebae926d601fa8ac672d34e4c211d73ba594c571c6bc5960f3de"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2246,8,2246,62)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `freshInt(_)_INT_Int_Int`(I)=>I requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(cf2cb8f038b4bdc4edb1334a3b8ced9cd296a7af43f0a1916e082a4e1aefa08b), org.kframework.attributes.Location(Location(1433,8,1433,28)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI:SortInt{}
          ),
          \top{R} ()
        )),
    \equals{SortInt{},R} (
      LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int{}(X0:SortInt{}),
     \and{SortInt{}} (
       VarI:SortInt{},
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("cf2cb8f038b4bdc4edb1334a3b8ced9cd296a7af43f0a1916e082a4e1aefa08b"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1433,8,1433,28)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule getGeneratedCounterCell(`<generatedTop>`(_DotVar0,Cell))=>Cell requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9ef5eb9b9e6bbd7436911fad20615821f61e06e742dd27773001ab0664bd1de3)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortGeneratedTopCell{}, R} (
            X0:SortGeneratedTopCell{},
            Lbl'-LT-'generatedTop'-GT-'{}(Var'Unds'DotVar0:SortTCell{},VarCell:SortGeneratedCounterCell{})
          ),
          \top{R} ()
        )),
    \equals{SortGeneratedCounterCell{},R} (
      LblgetGeneratedCounterCell{}(X0:SortGeneratedTopCell{}),
     \and{SortGeneratedCounterCell{}} (
       VarCell:SortGeneratedCounterCell{},
        \top{SortGeneratedCounterCell{}}())))
  [UNIQUE'Unds'ID{}("9ef5eb9b9e6bbd7436911fad20615821f61e06e742dd27773001ab0664bd1de3")]

// rule `getTypes(_)_SIMPLE-TYPED-STATIC_Types_Params`(`.List{"_,__SIMPLE-TYPED-STATIC-SYNTAX_Params_Param_Params"}_Params`(.KList))=>`_,__SIMPLE-TYPED-STATIC-SYNTAX_Types_Type_Types`(`void_SIMPLE-TYPED-STATIC-SYNTAX_Type`(.KList),`.List{"_,__SIMPLE-TYPED-STATIC-SYNTAX_Types_Type_Types"}_Types`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0275fe530d03d8d208e5e2997e5440ea4a08a8657ca5dc5c25f103fe072ae9d6), org.kframework.attributes.Location(Location(236,8,236,41)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortParams{}, R} (
            X0:SortParams{},
            Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Params'Unds'Param'Unds'Params'QuotRBraUnds'Params{}()
          ),
          \top{R} ()
        )),
    \equals{SortTypes{},R} (
      LblgetTypes'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Types'Unds'Params{}(X0:SortParams{}),
     \and{SortTypes{}} (
       Lbl'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types{}(Lblvoid'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}(),Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}()),
        \top{SortTypes{}}())))
  [UNIQUE'Unds'ID{}("0275fe530d03d8d208e5e2997e5440ea4a08a8657ca5dc5c25f103fe072ae9d6"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(236,8,236,41)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `getTypes(_)_SIMPLE-TYPED-STATIC_Types_Params`(`_,__SIMPLE-TYPED-STATIC-SYNTAX_Params_Param_Params`(`___SIMPLE-TYPED-STATIC-SYNTAX_Param_Type_Id`(T,_Gen0),`_,__SIMPLE-TYPED-STATIC-SYNTAX_Params_Param_Params`(P,Ps) #as _Gen3))=>`_,__SIMPLE-TYPED-STATIC-SYNTAX_Types_Type_Types`(T,`getTypes(_)_SIMPLE-TYPED-STATIC_Types_Params`(_Gen3)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(115e6112f1f795799cb184d1a3db137d52492d985cef4b8e30c5b321a780d102), org.kframework.attributes.Location(Location(235,8,235,57)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortParams{}, R} (
            X0:SortParams{},
            Lbl'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Params'Unds'Param'Unds'Params{}(Lbl'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Param'Unds'Type'Unds'Id{}(VarT:SortType{},Var'Unds'Gen0:SortId{}),\and{SortParams{}}(Lbl'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Params'Unds'Param'Unds'Params{}(VarP:SortParam{},VarPs:SortParams{}),Var'Unds'Gen3:SortParams{}))
          ),
          \top{R} ()
        )),
    \equals{SortTypes{},R} (
      LblgetTypes'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Types'Unds'Params{}(X0:SortParams{}),
     \and{SortTypes{}} (
       Lbl'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types{}(VarT:SortType{},LblgetTypes'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Types'Unds'Params{}(Var'Unds'Gen3:SortParams{})),
        \top{SortTypes{}}())))
  [UNIQUE'Unds'ID{}("115e6112f1f795799cb184d1a3db137d52492d985cef4b8e30c5b321a780d102"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(235,8,235,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `getTypes(_)_SIMPLE-TYPED-STATIC_Types_Params`(`_,__SIMPLE-TYPED-STATIC-SYNTAX_Params_Param_Params`(`___SIMPLE-TYPED-STATIC-SYNTAX_Param_Type_Id`(T,_Gen0),`.List{"_,__SIMPLE-TYPED-STATIC-SYNTAX_Params_Param_Params"}_Params`(.KList)))=>`_,__SIMPLE-TYPED-STATIC-SYNTAX_Types_Type_Types`(T,`.List{"_,__SIMPLE-TYPED-STATIC-SYNTAX_Types_Type_Types"}_Types`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c81de6d1875290481365de852ed2b0eb2d633a9a5c2ece0c7c488d80e97bb0be), org.kframework.attributes.Location(Location(234,8,234,42)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortParams{}, R} (
            X0:SortParams{},
            Lbl'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Params'Unds'Param'Unds'Params{}(Lbl'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Param'Unds'Type'Unds'Id{}(VarT:SortType{},Var'Unds'Gen0:SortId{}),Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Params'Unds'Param'Unds'Params'QuotRBraUnds'Params{}())
          ),
          \top{R} ()
        )),
    \equals{SortTypes{},R} (
      LblgetTypes'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Types'Unds'Params{}(X0:SortParams{}),
     \and{SortTypes{}} (
       Lbl'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types{}(VarT:SortType{},Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}()),
        \top{SortTypes{}}())))
  [UNIQUE'Unds'ID{}("c81de6d1875290481365de852ed2b0eb2d633a9a5c2ece0c7c488d80e97bb0be"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(234,8,234,42)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule initCurrEnvVarCell(.KList)=>`<currEnvVar>`(`.Set`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4b60f7c46b577670fa4e7ac82ad7bfc4abf878657a53b2554665a1b892bd14da), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortCurrEnvVarCell{},R} (
      LblinitCurrEnvVarCell{}(),
     \and{SortCurrEnvVarCell{}} (
       Lbl'-LT-'currEnvVar'-GT-'{}(Lbl'Stop'Set{}()),
        \top{SortCurrEnvVarCell{}}())))
  [UNIQUE'Unds'ID{}("4b60f7c46b577670fa4e7ac82ad7bfc4abf878657a53b2554665a1b892bd14da"), initializer{}()]

// rule initGeneratedCounterCell(.KList)=>`<generatedCounter>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5de11f6b50c4684c0e05b773f809d756f4ce9c03a4f24e23a9cddaf3fa31f553), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortGeneratedCounterCell{},R} (
      LblinitGeneratedCounterCell{}(),
     \and{SortGeneratedCounterCell{}} (
       Lbl'-LT-'generatedCounter'-GT-'{}(\dv{SortInt{}}("0")),
        \top{SortGeneratedCounterCell{}}())))
  [UNIQUE'Unds'ID{}("5de11f6b50c4684c0e05b773f809d756f4ce9c03a4f24e23a9cddaf3fa31f553"), initializer{}()]

// rule initGeneratedTopCell(Init)=>`<generatedTop>`(initTCell(Init),initGeneratedCounterCell(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6bc7582a7d8c6574a248b085ad3bdecafbf86539963d4e752be82fb1c857fb28), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortMap{}, R} (
            X0:SortMap{},
            VarInit:SortMap{}
          ),
          \top{R} ()
        )),
    \equals{SortGeneratedTopCell{},R} (
      LblinitGeneratedTopCell{}(X0:SortMap{}),
     \and{SortGeneratedTopCell{}} (
       Lbl'-LT-'generatedTop'-GT-'{}(LblinitTCell{}(VarInit:SortMap{}),LblinitGeneratedCounterCell{}()),
        \top{SortGeneratedTopCell{}}())))
  [UNIQUE'Unds'ID{}("6bc7582a7d8c6574a248b085ad3bdecafbf86539963d4e752be82fb1c857fb28"), initializer{}()]

// rule initGtenvCell(.KList)=>`<gtenv>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3e8d32fb55833af3beedf0e67f02d13726c7c44f2de04e2b46ea8c7e445f3540), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortGtenvCell{},R} (
      LblinitGtenvCell{}(),
     \and{SortGtenvCell{}} (
       Lbl'-LT-'gtenv'-GT-'{}(Lbl'Stop'Map{}()),
        \top{SortGtenvCell{}}())))
  [UNIQUE'Unds'ID{}("3e8d32fb55833af3beedf0e67f02d13726c7c44f2de04e2b46ea8c7e445f3540"), initializer{}()]

// rule initKCell(Init)=>`<k>`(inj{Stmt,KItem}(`project:Stmt`(`Map:lookup`(Init,inj{KConfigVar,KItem}(#token("$PGM","KConfigVar")))))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(22d54eca8d9ac85f814b9c78605ed3331a8a4d463df4bf0fa35d2c76bafb8855), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortMap{}, R} (
            X0:SortMap{},
            VarInit:SortMap{}
          ),
          \top{R} ()
        )),
    \equals{SortKCell{},R} (
      LblinitKCell{}(X0:SortMap{}),
     \and{SortKCell{}} (
       Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblproject'Coln'Stmt{}(kseq{}(LblMap'Coln'lookup{}(VarInit:SortMap{},inj{SortKConfigVar{}, SortKItem{}}(\dv{SortKConfigVar{}}("$PGM"))),dotk{}()))),dotk{}())),
        \top{SortKCell{}}())))
  [UNIQUE'Unds'ID{}("22d54eca8d9ac85f814b9c78605ed3331a8a4d463df4bf0fa35d2c76bafb8855"), initializer{}()]

// rule initReturnTypeCell(.KList)=>`<returnType>`(`void_SIMPLE-TYPED-STATIC-SYNTAX_Type`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7eb7c788051f8c0dff6a78645ac97926e2cb1788870efc71691340a42c30489d), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortReturnTypeCell{},R} (
      LblinitReturnTypeCell{}(),
     \and{SortReturnTypeCell{}} (
       Lbl'-LT-'returnType'-GT-'{}(Lblvoid'Unds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Type{}()),
        \top{SortReturnTypeCell{}}())))
  [UNIQUE'Unds'ID{}("7eb7c788051f8c0dff6a78645ac97926e2cb1788870efc71691340a42c30489d"), initializer{}()]

// rule initTCell(Init)=>`<T>`(initTasksCell(Init),initGtenvCell(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(42f4b217721f7614cafce05101533442edadc970345ec462e717425373db4e2a), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortMap{}, R} (
            X0:SortMap{},
            VarInit:SortMap{}
          ),
          \top{R} ()
        )),
    \equals{SortTCell{},R} (
      LblinitTCell{}(X0:SortMap{}),
     \and{SortTCell{}} (
       Lbl'-LT-'T'-GT-'{}(LblinitTasksCell{}(VarInit:SortMap{}),LblinitGtenvCell{}()),
        \top{SortTCell{}}())))
  [UNIQUE'Unds'ID{}("42f4b217721f7614cafce05101533442edadc970345ec462e717425373db4e2a"), initializer{}()]

// rule initTaskCell(Init)=>`TaskCellSetItem`(`<task>`(initKCell(Init),`.TenvCell`(.KList),`.CurrEnvVarCell`(.KList),`.ReturnTypeCell`(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(377416e94a42b11748899cc37aaf7ad6360a9d1fd7413a0f3a71cfea5c94a744), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortMap{}, R} (
            X0:SortMap{},
            VarInit:SortMap{}
          ),
          \top{R} ()
        )),
    \equals{SortTaskCellSet{},R} (
      LblinitTaskCell{}(X0:SortMap{}),
     \and{SortTaskCellSet{}} (
       LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(LblinitKCell{}(VarInit:SortMap{}),Lbl'Stop'TenvCell{}(),Lbl'Stop'CurrEnvVarCell{}(),Lbl'Stop'ReturnTypeCell{}())),
        \top{SortTaskCellSet{}}())))
  [UNIQUE'Unds'ID{}("377416e94a42b11748899cc37aaf7ad6360a9d1fd7413a0f3a71cfea5c94a744"), initializer{}()]

// rule initTasksCell(Init)=>`<tasks>`(initTaskCell(Init)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(78dcfc88c47759829f2b516cb758148dd9bfc45479ed04984f2d9dd65899c39c), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortMap{}, R} (
            X0:SortMap{},
            VarInit:SortMap{}
          ),
          \top{R} ()
        )),
    \equals{SortTasksCell{},R} (
      LblinitTasksCell{}(X0:SortMap{}),
     \and{SortTasksCell{}} (
       Lbl'-LT-'tasks'-GT-'{}(LblinitTaskCell{}(VarInit:SortMap{})),
        \top{SortTasksCell{}}())))
  [UNIQUE'Unds'ID{}("78dcfc88c47759829f2b516cb758148dd9bfc45479ed04984f2d9dd65899c39c"), initializer{}()]

// rule initTenvCell(.KList)=>`<tenv>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(cd6b22b3d6bb426f7c29741db3d2806f9fb77c25b8dc5b9857b5549b5145b392), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortTenvCell{},R} (
      LblinitTenvCell{}(),
     \and{SortTenvCell{}} (
       Lbl'-LT-'tenv'-GT-'{}(Lbl'Stop'Map{}()),
        \top{SortTenvCell{}}())))
  [UNIQUE'Unds'ID{}("cd6b22b3d6bb426f7c29741db3d2806f9fb77c25b8dc5b9857b5549b5145b392"), initializer{}()]

// rule isBlock(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(afc7f5b6d08d12f750a3a535211fd32a58589265fbdb2e772c3374c3685c9701), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortBlock{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortBlock{}, SortKItem{}}(Var'Unds'Gen1:SortBlock{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisBlock{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("afc7f5b6d08d12f750a3a535211fd32a58589265fbdb2e772c3374c3685c9701"), owise{}()]

// rule isBlock(inj{Block,KItem}(Block))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(90826e214774c10052882db34f0b29a8ab1ba03e3a5538878677c25ef57d97d0)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBlock{}, SortKItem{}}(VarBlock:SortBlock{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisBlock{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("90826e214774c10052882db34f0b29a8ab1ba03e3a5538878677c25ef57d97d0")]

// rule isBlockOrStmtType(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(85df482645d767a1331e6bf4343f7d6ab140a1405a1bfed2e69f68dbeef93710), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortBlockOrStmtType{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortBlockOrStmtType{}, SortKItem{}}(Var'Unds'Gen0:SortBlockOrStmtType{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisBlockOrStmtType{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("85df482645d767a1331e6bf4343f7d6ab140a1405a1bfed2e69f68dbeef93710"), owise{}()]

// rule isBlockOrStmtType(inj{BlockOrStmtType,KItem}(BlockOrStmtType))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(05fd4fbb19d48c1849906485c57704b92055a868dc0e1171e631247fd28f273a)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBlockOrStmtType{}, SortKItem{}}(VarBlockOrStmtType:SortBlockOrStmtType{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisBlockOrStmtType{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("05fd4fbb19d48c1849906485c57704b92055a868dc0e1171e631247fd28f273a")]

// rule isBool(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7f8273ebd616814dbf1acdd96b9534fbaa5b0491bfd05a61916e5015ad4a37ab), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortBool{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortBool{}, SortKItem{}}(Var'Unds'Gen1:SortBool{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisBool{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("7f8273ebd616814dbf1acdd96b9534fbaa5b0491bfd05a61916e5015ad4a37ab"), owise{}()]

// rule isBool(inj{Bool,KItem}(Bool))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(dadad716b2f6a82fa4b2cc8f903a1b8f1f6e8cfa63f18b72a7cb35110bdcff77)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBool{}, SortKItem{}}(VarBool:SortBool{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisBool{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("dadad716b2f6a82fa4b2cc8f903a1b8f1f6e8cfa63f18b72a7cb35110bdcff77")]

// rule isCurrEnvVarCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d09f267858d0cc1c357178fdc414fee978ec2b371978799aa445d5933d202f9f), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortCurrEnvVarCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortCurrEnvVarCell{}, SortKItem{}}(Var'Unds'Gen1:SortCurrEnvVarCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisCurrEnvVarCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("d09f267858d0cc1c357178fdc414fee978ec2b371978799aa445d5933d202f9f"), owise{}()]

// rule isCurrEnvVarCell(inj{CurrEnvVarCell,KItem}(CurrEnvVarCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(08637c31cd450121e26bac13d53bcfd8c9b1a0b3953e1c92c249c233fc11cf0a)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortCurrEnvVarCell{}, SortKItem{}}(VarCurrEnvVarCell:SortCurrEnvVarCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisCurrEnvVarCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("08637c31cd450121e26bac13d53bcfd8c9b1a0b3953e1c92c249c233fc11cf0a")]

// rule isCurrEnvVarCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4bc462220e438d1bd890e4c0007ab9df7a24030ba36f1ef35b36d062a445f6eb), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortCurrEnvVarCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortCurrEnvVarCellOpt{}, SortKItem{}}(Var'Unds'Gen0:SortCurrEnvVarCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisCurrEnvVarCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("4bc462220e438d1bd890e4c0007ab9df7a24030ba36f1ef35b36d062a445f6eb"), owise{}()]

// rule isCurrEnvVarCellOpt(inj{CurrEnvVarCellOpt,KItem}(CurrEnvVarCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f7f937c22de2eb3b48f6add6902106ecc7935319ae19067d37006a7085333e05)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortCurrEnvVarCellOpt{}, SortKItem{}}(VarCurrEnvVarCellOpt:SortCurrEnvVarCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisCurrEnvVarCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("f7f937c22de2eb3b48f6add6902106ecc7935319ae19067d37006a7085333e05")]

// rule isExp(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3762fda3bb594dc94f3bc1b73e6be837dcb235b3eb61c39b1e9b4081559b2706), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortExp{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortExp{}, SortKItem{}}(Var'Unds'Gen1:SortExp{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisExp{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("3762fda3bb594dc94f3bc1b73e6be837dcb235b3eb61c39b1e9b4081559b2706"), owise{}()]

// rule isExp(inj{Exp,KItem}(Exp))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5113a02f7660a72f8eec77fb75db8556ae809f64d13e8478319e14b277319d5c)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortExp{}, SortKItem{}}(VarExp:SortExp{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisExp{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("5113a02f7660a72f8eec77fb75db8556ae809f64d13e8478319e14b277319d5c")]

// rule isExps(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d0d46452d4bfb35e897e38e44708739df735761145705017013d71d14a824db0), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortExps{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortExps{}, SortKItem{}}(Var'Unds'Gen1:SortExps{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisExps{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("d0d46452d4bfb35e897e38e44708739df735761145705017013d71d14a824db0"), owise{}()]

// rule isExps(inj{Exps,KItem}(Exps))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5e8cbdfdf9c482f9ff6f11c69b77e56f646c4d81c94b35164a4228a6e5c51104)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortExps{}, SortKItem{}}(VarExps:SortExps{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisExps{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("5e8cbdfdf9c482f9ff6f11c69b77e56f646c4d81c94b35164a4228a6e5c51104")]

// rule isFloat(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2a794de414a5b222c2b378d31aee70dd82d84237a3ab65881c92100c0bf5cb57), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortFloat{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortFloat{}, SortKItem{}}(Var'Unds'Gen1:SortFloat{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisFloat{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("2a794de414a5b222c2b378d31aee70dd82d84237a3ab65881c92100c0bf5cb57"), owise{}()]

// rule isFloat(inj{Float,KItem}(Float))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d74a36c34f45e0bf74d89fdd362f124478ab18934b5786ff4aabfe527643c5f0)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFloat{}, SortKItem{}}(VarFloat:SortFloat{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisFloat{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("d74a36c34f45e0bf74d89fdd362f124478ab18934b5786ff4aabfe527643c5f0")]

// rule isGeneratedCounterCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7d501e1637f26769ad3b9439efef0285daa79523b0d071b3a792972ce92e4fe2), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortGeneratedCounterCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortGeneratedCounterCell{}, SortKItem{}}(Var'Unds'Gen0:SortGeneratedCounterCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisGeneratedCounterCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("7d501e1637f26769ad3b9439efef0285daa79523b0d071b3a792972ce92e4fe2"), owise{}()]

// rule isGeneratedCounterCell(inj{GeneratedCounterCell,KItem}(GeneratedCounterCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f7b6a3dbee5a80d5eeba727f40009876995660d4052a45fc50c55f88c5fc1a7c)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedCounterCell{}, SortKItem{}}(VarGeneratedCounterCell:SortGeneratedCounterCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisGeneratedCounterCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("f7b6a3dbee5a80d5eeba727f40009876995660d4052a45fc50c55f88c5fc1a7c")]

// rule isGeneratedCounterCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(55e7759c7640aa41fef8271d53c6dd8668aa497704539a65577604ada709c5df), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortGeneratedCounterCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortGeneratedCounterCellOpt{}, SortKItem{}}(Var'Unds'Gen0:SortGeneratedCounterCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisGeneratedCounterCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("55e7759c7640aa41fef8271d53c6dd8668aa497704539a65577604ada709c5df"), owise{}()]

// rule isGeneratedCounterCellOpt(inj{GeneratedCounterCellOpt,KItem}(GeneratedCounterCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a4ff3e170677e099d4b28085658942cb10fcf871aa99abcdf73927596c180f12)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedCounterCellOpt{}, SortKItem{}}(VarGeneratedCounterCellOpt:SortGeneratedCounterCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisGeneratedCounterCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("a4ff3e170677e099d4b28085658942cb10fcf871aa99abcdf73927596c180f12")]

// rule isGeneratedTopCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ec16314688c4b2d204af490e243a3e83a2e82fbc74988c3574b997cc9ca56816), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortGeneratedTopCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortGeneratedTopCell{}, SortKItem{}}(Var'Unds'Gen1:SortGeneratedTopCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisGeneratedTopCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("ec16314688c4b2d204af490e243a3e83a2e82fbc74988c3574b997cc9ca56816"), owise{}()]

// rule isGeneratedTopCell(inj{GeneratedTopCell,KItem}(GeneratedTopCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3bcf423225700e329d0533cfd806eb9bab91f9d8de0979c8d8e381fe5d076bb2)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedTopCell{}, SortKItem{}}(VarGeneratedTopCell:SortGeneratedTopCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisGeneratedTopCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("3bcf423225700e329d0533cfd806eb9bab91f9d8de0979c8d8e381fe5d076bb2")]

// rule isGeneratedTopCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1f022b25cc5a2adbe99fbae6b50007c803258a5749eb01e05c86096f7b35c0df), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortGeneratedTopCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortGeneratedTopCellFragment{}, SortKItem{}}(Var'Unds'Gen1:SortGeneratedTopCellFragment{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisGeneratedTopCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("1f022b25cc5a2adbe99fbae6b50007c803258a5749eb01e05c86096f7b35c0df"), owise{}()]

// rule isGeneratedTopCellFragment(inj{GeneratedTopCellFragment,KItem}(GeneratedTopCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(559f2cdc0ab425bb065cc3174f4a1af4d9ca834f762a814cf3dfbf9a9d7f8271)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedTopCellFragment{}, SortKItem{}}(VarGeneratedTopCellFragment:SortGeneratedTopCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisGeneratedTopCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("559f2cdc0ab425bb065cc3174f4a1af4d9ca834f762a814cf3dfbf9a9d7f8271")]

// rule isGtenvCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(be0c3ed819aa91ada7343b321250b70e56aa5d5470ef03a1e94396cb420d4847), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortGtenvCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortGtenvCell{}, SortKItem{}}(Var'Unds'Gen1:SortGtenvCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisGtenvCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("be0c3ed819aa91ada7343b321250b70e56aa5d5470ef03a1e94396cb420d4847"), owise{}()]

// rule isGtenvCell(inj{GtenvCell,KItem}(GtenvCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0f166f2ad1408153983475ce071c1a38e2582466b5ed6715105e76ae2d183157)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGtenvCell{}, SortKItem{}}(VarGtenvCell:SortGtenvCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisGtenvCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("0f166f2ad1408153983475ce071c1a38e2582466b5ed6715105e76ae2d183157")]

// rule isGtenvCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b8ade1f8b30cffc3b1a9022f2d3e4a70de2eb552ab7e9aa820bfa476a46e405a), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortGtenvCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortGtenvCellOpt{}, SortKItem{}}(Var'Unds'Gen0:SortGtenvCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisGtenvCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("b8ade1f8b30cffc3b1a9022f2d3e4a70de2eb552ab7e9aa820bfa476a46e405a"), owise{}()]

// rule isGtenvCellOpt(inj{GtenvCellOpt,KItem}(GtenvCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(88721d00335396cd9c0ffa9d73262a441f52c4abf29874d9926af244e2273f50)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGtenvCellOpt{}, SortKItem{}}(VarGtenvCellOpt:SortGtenvCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisGtenvCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("88721d00335396cd9c0ffa9d73262a441f52c4abf29874d9926af244e2273f50")]

// rule isIOError(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(20991c3332591ac971b290eb3a8cf0b0bcda5515745e9df3f1aef203db197006), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortIOError{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortIOError{}, SortKItem{}}(Var'Unds'Gen0:SortIOError{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisIOError{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("20991c3332591ac971b290eb3a8cf0b0bcda5515745e9df3f1aef203db197006"), owise{}()]

// rule isIOError(inj{IOError,KItem}(IOError))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(af1461e241b050082a392e02da8a0d27eb78de77d591d7b2a949770399eea7d0)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIOError{}, SortKItem{}}(VarIOError:SortIOError{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisIOError{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("af1461e241b050082a392e02da8a0d27eb78de77d591d7b2a949770399eea7d0")]

// rule isIOFile(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0512dee3542dc027fbb3e8109dd7eda0d57c779d50e74dc69a69de93a12e6d63), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortIOFile{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortIOFile{}, SortKItem{}}(Var'Unds'Gen1:SortIOFile{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisIOFile{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("0512dee3542dc027fbb3e8109dd7eda0d57c779d50e74dc69a69de93a12e6d63"), owise{}()]

// rule isIOFile(inj{IOFile,KItem}(IOFile))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e265f4f40b46b033479ce783a161791d2f3390b848921b8d137e83f3f513fc0a)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIOFile{}, SortKItem{}}(VarIOFile:SortIOFile{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisIOFile{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("e265f4f40b46b033479ce783a161791d2f3390b848921b8d137e83f3f513fc0a")]

// rule isIOInt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a8647511396f0c9a09435045b00a5e7b4372d1d771597873d8bd8dc687456707), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortIOInt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortIOInt{}, SortKItem{}}(Var'Unds'Gen1:SortIOInt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisIOInt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("a8647511396f0c9a09435045b00a5e7b4372d1d771597873d8bd8dc687456707"), owise{}()]

// rule isIOInt(inj{IOInt,KItem}(IOInt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e744736c885f38e99587884080e17e1ddd231da39bcbdcb445d10f52b6675232)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIOInt{}, SortKItem{}}(VarIOInt:SortIOInt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisIOInt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("e744736c885f38e99587884080e17e1ddd231da39bcbdcb445d10f52b6675232")]

// rule isIOString(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c2c1cfa5b8d1f4508bc208f23ab583f3e9b32659aec4f64e0228e3704bd22a07), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortIOString{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortIOString{}, SortKItem{}}(Var'Unds'Gen0:SortIOString{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisIOString{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("c2c1cfa5b8d1f4508bc208f23ab583f3e9b32659aec4f64e0228e3704bd22a07"), owise{}()]

// rule isIOString(inj{IOString,KItem}(IOString))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(febfbad427936ffed4a4f974d1061ec9b65a4d6751c5a4e0e31661905c3f9e1e)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIOString{}, SortKItem{}}(VarIOString:SortIOString{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisIOString{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("febfbad427936ffed4a4f974d1061ec9b65a4d6751c5a4e0e31661905c3f9e1e")]

// rule isId(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(79aa211b9cca8ff345580e936f59ebe000c9a0be28b59d063bd40ac3b72d72de), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortId{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortId{}, SortKItem{}}(Var'Unds'Gen0:SortId{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisId{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("79aa211b9cca8ff345580e936f59ebe000c9a0be28b59d063bd40ac3b72d72de"), owise{}()]

// rule isId(inj{Id,KItem}(Id))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f024b5fa3f428dab8c832862d8a13219a64369be25641326400611b32ae8843d)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortId{}, SortKItem{}}(VarId:SortId{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisId{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("f024b5fa3f428dab8c832862d8a13219a64369be25641326400611b32ae8843d")]

// rule isInt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5c9850befff40cc79151dbc5a8999b5ffaad767f244ed97f9f29b56b7170bf24), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortInt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortInt{}, SortKItem{}}(Var'Unds'Gen0:SortInt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisInt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("5c9850befff40cc79151dbc5a8999b5ffaad767f244ed97f9f29b56b7170bf24"), owise{}()]

// rule isInt(inj{Int,KItem}(Int))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(92664aa821c8898ff16b4e72ad0bdf363f755c7660d28dcb69c129a2c94bc6b5)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortInt{}, SortKItem{}}(VarInt:SortInt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisInt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("92664aa821c8898ff16b4e72ad0bdf363f755c7660d28dcb69c129a2c94bc6b5")]

// rule isK(K)=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(16ff77cff0ef50026a8b3f4614b87bda465701918596b7ad2280baffff56f847)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisK{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("16ff77cff0ef50026a8b3f4614b87bda465701918596b7ad2280baffff56f847")]

// rule isKCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1668e9146ab7dd7867682198dd9dddc0c7c88d8f9fad9ed2366229fc4db18733), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortKCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortKCell{}, SortKItem{}}(Var'Unds'Gen1:SortKCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisKCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("1668e9146ab7dd7867682198dd9dddc0c7c88d8f9fad9ed2366229fc4db18733"), owise{}()]

// rule isKCell(inj{KCell,KItem}(KCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2695222b1238f711f8a356c0a1bc0ac418d7bd78fd3282e7c60882e2631a46df)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortKCell{}, SortKItem{}}(VarKCell:SortKCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisKCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("2695222b1238f711f8a356c0a1bc0ac418d7bd78fd3282e7c60882e2631a46df")]

// rule isKCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(fa44a9c94132ade195fc2cb566fa82471e4592c977a49183ac2142c5062701ca), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortKCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortKCellOpt{}, SortKItem{}}(Var'Unds'Gen0:SortKCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisKCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("fa44a9c94132ade195fc2cb566fa82471e4592c977a49183ac2142c5062701ca"), owise{}()]

// rule isKCellOpt(inj{KCellOpt,KItem}(KCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1516473b1e153a368c273997543a4378ad451e5e828db8e289f4447f7e5228a5)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortKCellOpt{}, SortKItem{}}(VarKCellOpt:SortKCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisKCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("1516473b1e153a368c273997543a4378ad451e5e828db8e289f4447f7e5228a5")]

// rule isKConfigVar(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f1c02853e001635e66a06d14d1cd322a996f4acbe38a7f9c88df6c97ea6a4677), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortKConfigVar{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortKConfigVar{}, SortKItem{}}(Var'Unds'Gen1:SortKConfigVar{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisKConfigVar{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("f1c02853e001635e66a06d14d1cd322a996f4acbe38a7f9c88df6c97ea6a4677"), owise{}()]

// rule isKConfigVar(inj{KConfigVar,KItem}(KConfigVar))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0ef0a00bb321f2c2a62a3239327de70ecb8e907a950cd20034c46b84e040ebcd)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortKConfigVar{}, SortKItem{}}(VarKConfigVar:SortKConfigVar{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisKConfigVar{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("0ef0a00bb321f2c2a62a3239327de70ecb8e907a950cd20034c46b84e040ebcd")]

// rule isKItem(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f766beabd3e632a98e221201d003f26f45f1feef2aff6da0ab07edde06a5d99d), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortKItem{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(Var'Unds'Gen1:SortKItem{},dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisKItem{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("f766beabd3e632a98e221201d003f26f45f1feef2aff6da0ab07edde06a5d99d"), owise{}()]

// rule isKItem(KItem)=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ed3c25a7dab5e5fbc101589e2fa74ac91aa107f051d22a01378222d08643373c)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(VarKItem:SortKItem{},dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisKItem{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("ed3c25a7dab5e5fbc101589e2fa74ac91aa107f051d22a01378222d08643373c")]

// rule isKResult(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b74c72133f88a5a621a948f57a9e1abd3144eb8d539c42ea330b3898a93cef77), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortKResult{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortKResult{}, SortKItem{}}(Var'Unds'Gen0:SortKResult{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisKResult{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("b74c72133f88a5a621a948f57a9e1abd3144eb8d539c42ea330b3898a93cef77"), owise{}()]

// rule isKResult(inj{KResult,KItem}(KResult))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f4c2469bcff9527515b6d36f16040307917bda61067d10b85fb531e142483bee)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortKResult{}, SortKItem{}}(VarKResult:SortKResult{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisKResult{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("f4c2469bcff9527515b6d36f16040307917bda61067d10b85fb531e142483bee")]

// rule isLValue(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(08b5d7d2455b8ac70e650a78e213dcf0976a9b17219612328fad04b199b34064), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortLValue{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortLValue{}, SortKItem{}}(Var'Unds'Gen1:SortLValue{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \or{R} (
          \exists{R} (Var'Unds'Gen2:SortExp{},
          \exists{R} (Var'Unds'Gen3:SortExps{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Var'Unds'Gen2:SortExp{},Var'Unds'Gen3:SortExps{})),dotk{}())
                ),
                \top{R} ()
              )
          ))),
          \bottom{R}()
        ))
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisLValue{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("08b5d7d2455b8ac70e650a78e213dcf0976a9b17219612328fad04b199b34064"), owise{}()]

// rule isLValue(inj{LValue,KItem}(LValue))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(805c744095fd12daa01f50e77409fc838876d90bee92d90d8a27324b398568bb)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortLValue{}, SortKItem{}}(VarLValue:SortLValue{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisLValue{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("805c744095fd12daa01f50e77409fc838876d90bee92d90d8a27324b398568bb")]

// rule isLValue(inj{Exp,KItem}(`_[_]_SIMPLE-TYPED-STATIC-SYNTAX_Exp_Exp_Exps`(_Gen0,_Gen1)))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7786326ee91c6602a64806075e270464e65880eed53faafb4e6da7c7c92a5a5a), org.kframework.attributes.Location(Location(221,8,221,39)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Var'Unds'Gen0:SortExp{},Var'Unds'Gen1:SortExps{})),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisLValue{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("7786326ee91c6602a64806075e270464e65880eed53faafb4e6da7c7c92a5a5a"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(221,8,221,39)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule isList(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0b6d1ffc254fbf57473abfe22e81bcfa646561c43d4e2cc175eab60cfb2b68aa), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortList{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortList{}, SortKItem{}}(Var'Unds'Gen1:SortList{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisList{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("0b6d1ffc254fbf57473abfe22e81bcfa646561c43d4e2cc175eab60cfb2b68aa"), owise{}()]

// rule isList(inj{List,KItem}(List))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7d4dddf5bbdb61cfd11fb9be1071be7bd551cf186607cf6f493cfade3221c446)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortList{}, SortKItem{}}(VarList:SortList{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisList{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("7d4dddf5bbdb61cfd11fb9be1071be7bd551cf186607cf6f493cfade3221c446")]

// rule isMap(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5da72349a323db3019243ab26f08b728d336c1a52aecaa0bcb7de4adae14bd71), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortMap{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortMap{}, SortKItem{}}(Var'Unds'Gen1:SortMap{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisMap{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("5da72349a323db3019243ab26f08b728d336c1a52aecaa0bcb7de4adae14bd71"), owise{}()]

// rule isMap(inj{Map,KItem}(Map))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4879c0fcf6b7d7f3d6b751e4f460f8dced005a44ae5ff600cffcea784cf58795)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMap{}, SortKItem{}}(VarMap:SortMap{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisMap{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("4879c0fcf6b7d7f3d6b751e4f460f8dced005a44ae5ff600cffcea784cf58795")]

// rule isParam(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9578fb0ae01049a8d77998b849a0921b029e239ab88c25663b383c19cc0828e9), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortParam{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortParam{}, SortKItem{}}(Var'Unds'Gen0:SortParam{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisParam{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("9578fb0ae01049a8d77998b849a0921b029e239ab88c25663b383c19cc0828e9"), owise{}()]

// rule isParam(inj{Param,KItem}(Param))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3dfd05fd166b4496f8168bc667232ee7667db3ce7fab8163709689e5c31c4fe8)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortParam{}, SortKItem{}}(VarParam:SortParam{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisParam{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("3dfd05fd166b4496f8168bc667232ee7667db3ce7fab8163709689e5c31c4fe8")]

// rule isParams(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8f36b4d6f54658a3d12892c725027bc6d9df1fb4b32c28933cf48ee896cfd255), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortParams{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortParams{}, SortKItem{}}(Var'Unds'Gen0:SortParams{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisParams{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("8f36b4d6f54658a3d12892c725027bc6d9df1fb4b32c28933cf48ee896cfd255"), owise{}()]

// rule isParams(inj{Params,KItem}(Params))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5d673fe9fd08758d67688d7742fb7500af0b2c27b28e9fa7eb502e54d7dae31b)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortParams{}, SortKItem{}}(VarParams:SortParams{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisParams{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("5d673fe9fd08758d67688d7742fb7500af0b2c27b28e9fa7eb502e54d7dae31b")]

// rule isReturnTypeCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1adf98f605e81ebbefcac89b3695c79b938f4bdf31434eb5b7ce7350a4be9b1e), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortReturnTypeCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortReturnTypeCell{}, SortKItem{}}(Var'Unds'Gen1:SortReturnTypeCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisReturnTypeCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("1adf98f605e81ebbefcac89b3695c79b938f4bdf31434eb5b7ce7350a4be9b1e"), owise{}()]

// rule isReturnTypeCell(inj{ReturnTypeCell,KItem}(ReturnTypeCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(03b78bc4aa962a70de3244b9bafd0afc9705ad0d93324d7eb60e523d358217c1)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortReturnTypeCell{}, SortKItem{}}(VarReturnTypeCell:SortReturnTypeCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisReturnTypeCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("03b78bc4aa962a70de3244b9bafd0afc9705ad0d93324d7eb60e523d358217c1")]

// rule isReturnTypeCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b8f3974566819d4a45d49b9f7f5d537bb6d0e907978efb9497aa97961da5595f), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortReturnTypeCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortReturnTypeCellOpt{}, SortKItem{}}(Var'Unds'Gen0:SortReturnTypeCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisReturnTypeCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("b8f3974566819d4a45d49b9f7f5d537bb6d0e907978efb9497aa97961da5595f"), owise{}()]

// rule isReturnTypeCellOpt(inj{ReturnTypeCellOpt,KItem}(ReturnTypeCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(85812cb25e233262d6f286afc2d2e1dce4a78ce9bb88123cf56fc18eb08b2d29)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortReturnTypeCellOpt{}, SortKItem{}}(VarReturnTypeCellOpt:SortReturnTypeCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisReturnTypeCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("85812cb25e233262d6f286afc2d2e1dce4a78ce9bb88123cf56fc18eb08b2d29")]

// rule isSet(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4bb33358689dc4ec69171f146dc69c169560a878b09ca872d2c4da9e2dbd0d5e), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortSet{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortSet{}, SortKItem{}}(Var'Unds'Gen0:SortSet{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisSet{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("4bb33358689dc4ec69171f146dc69c169560a878b09ca872d2c4da9e2dbd0d5e"), owise{}()]

// rule isSet(inj{Set,KItem}(Set))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f205bc460bdb728b4c3458643699be30d519db4d8b13e80e2c27082b9e846e80)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortSet{}, SortKItem{}}(VarSet:SortSet{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisSet{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("f205bc460bdb728b4c3458643699be30d519db4d8b13e80e2c27082b9e846e80")]

// rule isStmt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(bfbd8f698209913de7838833aa5ce9bf8fd7ed702ab717da9f0c69ab3ade7418), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortStmt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortStmt{}, SortKItem{}}(Var'Unds'Gen0:SortStmt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisStmt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("bfbd8f698209913de7838833aa5ce9bf8fd7ed702ab717da9f0c69ab3ade7418"), owise{}()]

// rule isStmt(inj{Stmt,KItem}(Stmt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(477089570fa6db8ee9dc9b0dc4c87d68cd3cc0589ba3949a5eb4981db25246df)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortStmt{}, SortKItem{}}(VarStmt:SortStmt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisStmt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("477089570fa6db8ee9dc9b0dc4c87d68cd3cc0589ba3949a5eb4981db25246df")]

// rule isStream(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b9fdcc98671795de0892a224238b1cf1bc7c23c4ae78e3a8e2c9c24b975ea29b), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortStream{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortStream{}, SortKItem{}}(Var'Unds'Gen0:SortStream{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisStream{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("b9fdcc98671795de0892a224238b1cf1bc7c23c4ae78e3a8e2c9c24b975ea29b"), owise{}()]

// rule isStream(inj{Stream,KItem}(Stream))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(27e703343d82a904ab8f74cc74fe8c6870a94fa1f4df39e1c0230ae06e4783cc)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortStream{}, SortKItem{}}(VarStream:SortStream{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisStream{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("27e703343d82a904ab8f74cc74fe8c6870a94fa1f4df39e1c0230ae06e4783cc")]

// rule isString(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(771c9ac303cbf7ec1228dd7a6f0b5db7e43db7edb5d4582845e18d9d602cb63f), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortString{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortString{}, SortKItem{}}(Var'Unds'Gen0:SortString{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisString{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("771c9ac303cbf7ec1228dd7a6f0b5db7e43db7edb5d4582845e18d9d602cb63f"), owise{}()]

// rule isString(inj{String,KItem}(String))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(109ced650ead4a5092ddba090e1b8e181633ed0aa5c5f93bce9f88be215668ef)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortString{}, SortKItem{}}(VarString:SortString{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisString{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("109ced650ead4a5092ddba090e1b8e181633ed0aa5c5f93bce9f88be215668ef")]

// rule isTCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1d1c115130d3315d664ea538bb035ac90d0288970bd6922514ad32b5c8dcf4c4), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortTCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTCell{}, SortKItem{}}(Var'Unds'Gen0:SortTCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisTCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("1d1c115130d3315d664ea538bb035ac90d0288970bd6922514ad32b5c8dcf4c4"), owise{}()]

// rule isTCell(inj{TCell,KItem}(TCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0b19c6d63df1e9cd6abc786c6c34fbd1b1f97cae6bf9fdba7b1275a02bd51205)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTCell{}, SortKItem{}}(VarTCell:SortTCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisTCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("0b19c6d63df1e9cd6abc786c6c34fbd1b1f97cae6bf9fdba7b1275a02bd51205")]

// rule isTCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(bb6f7ef44788d69ec6b84a650f582638cbb3a7ee5dc001b75deff061c3f2b869), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortTCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTCellFragment{}, SortKItem{}}(Var'Unds'Gen1:SortTCellFragment{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisTCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("bb6f7ef44788d69ec6b84a650f582638cbb3a7ee5dc001b75deff061c3f2b869"), owise{}()]

// rule isTCellFragment(inj{TCellFragment,KItem}(TCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f1c94b538b3ecdc44697da9f227c0650540c8f233c5dba13f94071522c756c76)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTCellFragment{}, SortKItem{}}(VarTCellFragment:SortTCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisTCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("f1c94b538b3ecdc44697da9f227c0650540c8f233c5dba13f94071522c756c76")]

// rule isTCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a59defe6ac53b3129c2a5836b392863c76a0090b9aa2cd64999737194de1f55f), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortTCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTCellOpt{}, SortKItem{}}(Var'Unds'Gen1:SortTCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisTCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("a59defe6ac53b3129c2a5836b392863c76a0090b9aa2cd64999737194de1f55f"), owise{}()]

// rule isTCellOpt(inj{TCellOpt,KItem}(TCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2d9e2efc934a1108a68dec355c0ce9420ec8c2292a856744f5d9014a10f5888c)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTCellOpt{}, SortKItem{}}(VarTCellOpt:SortTCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisTCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("2d9e2efc934a1108a68dec355c0ce9420ec8c2292a856744f5d9014a10f5888c")]

// rule isTaskCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a3a16cd12ef5fc35e1b3b198e07af8c0bc730a518e3504ebfdf94b582d806a8b), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortTaskCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTaskCell{}, SortKItem{}}(Var'Unds'Gen1:SortTaskCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisTaskCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("a3a16cd12ef5fc35e1b3b198e07af8c0bc730a518e3504ebfdf94b582d806a8b"), owise{}()]

// rule isTaskCell(inj{TaskCell,KItem}(TaskCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(eac8adee247f22fba8b63841ae450b2659dc19ff4a28ac0fd80f85a88a185810)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTaskCell{}, SortKItem{}}(VarTaskCell:SortTaskCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisTaskCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("eac8adee247f22fba8b63841ae450b2659dc19ff4a28ac0fd80f85a88a185810")]

// rule isTaskCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8d251bed3b016424a16cae3c09eacb27c8d086223aa1d57452b8b6033add82a2), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortTaskCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTaskCellFragment{}, SortKItem{}}(Var'Unds'Gen1:SortTaskCellFragment{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisTaskCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("8d251bed3b016424a16cae3c09eacb27c8d086223aa1d57452b8b6033add82a2"), owise{}()]

// rule isTaskCellFragment(inj{TaskCellFragment,KItem}(TaskCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(73c75ad5e696f9565a373e5d4040ba62fe74c4b0cac68a93815c30f1c8b5044f)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTaskCellFragment{}, SortKItem{}}(VarTaskCellFragment:SortTaskCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisTaskCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("73c75ad5e696f9565a373e5d4040ba62fe74c4b0cac68a93815c30f1c8b5044f")]

// rule isTaskCellSet(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ed3db6dd67ca8f4418c8b1194049527334855cb46131ab2d99127bd027b59133), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortTaskCellSet{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTaskCellSet{}, SortKItem{}}(Var'Unds'Gen1:SortTaskCellSet{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisTaskCellSet{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("ed3db6dd67ca8f4418c8b1194049527334855cb46131ab2d99127bd027b59133"), owise{}()]

// rule isTaskCellSet(inj{TaskCellSet,KItem}(TaskCellSet))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d63a76f2319c78be70a53835d85a9306ad93572f776a91728b37d84deab3f53d)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTaskCellSet{}, SortKItem{}}(VarTaskCellSet:SortTaskCellSet{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisTaskCellSet{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("d63a76f2319c78be70a53835d85a9306ad93572f776a91728b37d84deab3f53d")]

// rule isTasksCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(dce2f0c225288c78e76dadfbe5893a0dd21777fd9655c6b6859bfb6315529d1d), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortTasksCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTasksCell{}, SortKItem{}}(Var'Unds'Gen0:SortTasksCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisTasksCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("dce2f0c225288c78e76dadfbe5893a0dd21777fd9655c6b6859bfb6315529d1d"), owise{}()]

// rule isTasksCell(inj{TasksCell,KItem}(TasksCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8a7381153e2f9d8a1a5e7983ed822261bbdf7b3c200b1a561f438719079d06dd)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTasksCell{}, SortKItem{}}(VarTasksCell:SortTasksCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisTasksCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("8a7381153e2f9d8a1a5e7983ed822261bbdf7b3c200b1a561f438719079d06dd")]

// rule isTasksCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e0be68e0c29fb51b5c3b525ea25e4451929be0bf44c499ba0dcfd3dd1e02292b), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortTasksCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTasksCellFragment{}, SortKItem{}}(Var'Unds'Gen0:SortTasksCellFragment{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisTasksCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("e0be68e0c29fb51b5c3b525ea25e4451929be0bf44c499ba0dcfd3dd1e02292b"), owise{}()]

// rule isTasksCellFragment(inj{TasksCellFragment,KItem}(TasksCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(189edef2a0007cac073d90e8ab2041463c210e9ff067ecf2b533b4cc6087d21f)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTasksCellFragment{}, SortKItem{}}(VarTasksCellFragment:SortTasksCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisTasksCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("189edef2a0007cac073d90e8ab2041463c210e9ff067ecf2b533b4cc6087d21f")]

// rule isTasksCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2566863534215f28c76aa24441f7cb6e761dc569469eaeb286d235aa9fa61601), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortTasksCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTasksCellOpt{}, SortKItem{}}(Var'Unds'Gen0:SortTasksCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisTasksCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("2566863534215f28c76aa24441f7cb6e761dc569469eaeb286d235aa9fa61601"), owise{}()]

// rule isTasksCellOpt(inj{TasksCellOpt,KItem}(TasksCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(028960923e0d9037a79c9f5eabc07fc4764368ddd5b7dd503070d9ca4ccdad49)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTasksCellOpt{}, SortKItem{}}(VarTasksCellOpt:SortTasksCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisTasksCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("028960923e0d9037a79c9f5eabc07fc4764368ddd5b7dd503070d9ca4ccdad49")]

// rule isTenvCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f662d85a0a0ee2c209d970af807f4382edcbe39af259df04f3702275eb7dfa0e), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortTenvCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTenvCell{}, SortKItem{}}(Var'Unds'Gen1:SortTenvCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisTenvCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("f662d85a0a0ee2c209d970af807f4382edcbe39af259df04f3702275eb7dfa0e"), owise{}()]

// rule isTenvCell(inj{TenvCell,KItem}(TenvCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e467f9202b018e400d5f1260e0d3995a0bcebfdd3d968cdbfa164271371c1d96)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTenvCell{}, SortKItem{}}(VarTenvCell:SortTenvCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisTenvCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("e467f9202b018e400d5f1260e0d3995a0bcebfdd3d968cdbfa164271371c1d96")]

// rule isTenvCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c55ff32caaccf3e8ea220a269db10c90c99836a67bd34875f051985e6cc2b7db), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortTenvCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTenvCellOpt{}, SortKItem{}}(Var'Unds'Gen0:SortTenvCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisTenvCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("c55ff32caaccf3e8ea220a269db10c90c99836a67bd34875f051985e6cc2b7db"), owise{}()]

// rule isTenvCellOpt(inj{TenvCellOpt,KItem}(TenvCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5b842de20cd78030f0152cf5a8dd5c6e1b047f8416b3f2bd45965e247d38b5d4)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTenvCellOpt{}, SortKItem{}}(VarTenvCellOpt:SortTenvCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisTenvCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("5b842de20cd78030f0152cf5a8dd5c6e1b047f8416b3f2bd45965e247d38b5d4")]

// rule isType(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0e253c0ab26906841e6d9cae62e4089a8f1d6048327c8b99c3a908f975123f08), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortType{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortType{}, SortKItem{}}(Var'Unds'Gen1:SortType{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisType{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("0e253c0ab26906841e6d9cae62e4089a8f1d6048327c8b99c3a908f975123f08"), owise{}()]

// rule isType(inj{Type,KItem}(Type))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d677712c390bbd59e0bb13d7bbc0a80d772b2a419a7915fe8bdb0e02ba62ac7c)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortType{}, SortKItem{}}(VarType:SortType{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisType{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("d677712c390bbd59e0bb13d7bbc0a80d772b2a419a7915fe8bdb0e02ba62ac7c")]

// rule isTypes(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f9b1f5921f732d8ee27d5de2168bcb0e527fc0a160dfdaf52fea4038715ce89e), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortTypes{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTypes{}, SortKItem{}}(Var'Unds'Gen0:SortTypes{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisTypes{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("f9b1f5921f732d8ee27d5de2168bcb0e527fc0a160dfdaf52fea4038715ce89e"), owise{}()]

// rule isTypes(inj{Types,KItem}(Types))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(30cb4df680d159045abe65b2bc6f1f4f953a4d7f7e8eb85f9e732f57318a3033)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTypes{}, SortKItem{}}(VarTypes:SortTypes{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisTypes{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("30cb4df680d159045abe65b2bc6f1f4f953a4d7f7e8eb85f9e732f57318a3033")]

// rule `minInt(_,_)_INT-COMMON_Int_Int_Int`(I1,I2)=>I1 requires `_<=Int_`(I1,I2) ensures #token("true","Bool") [UNIQUE_ID(fb09b6acc4366cb77203e07c4efe8a9cf304e1bac9fb0664deea05d3eb9a80c6), org.kframework.attributes.Location(Location(1426,8,1426,57)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-LT-Eqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))),
    \equals{SortInt{},R} (
      LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(X0:SortInt{},X1:SortInt{}),
     \and{SortInt{}} (
       VarI1:SortInt{},
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("fb09b6acc4366cb77203e07c4efe8a9cf304e1bac9fb0664deea05d3eb9a80c6"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1426,8,1426,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]")]

// rule `minInt(_,_)_INT-COMMON_Int_Int_Int`(I1,I2)=>I2 requires `_>=Int_`(I1,I2) ensures #token("true","Bool") [UNIQUE_ID(e1effeabf96bb3a3beffd5b679ad5df95c4f8bbf42872b0793331e52a8470fb3), org.kframework.attributes.Location(Location(1427,8,1427,57)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-GT-Eqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))),
    \equals{SortInt{},R} (
      LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(X0:SortInt{},X1:SortInt{}),
     \and{SortInt{}} (
       VarI2:SortInt{},
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("e1effeabf96bb3a3beffd5b679ad5df95c4f8bbf42872b0793331e52a8470fb3"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1427,8,1427,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]")]

// rule `mkDecls(_)_SIMPLE-TYPED-STATIC_Stmt_Params`(`.List{"_,__SIMPLE-TYPED-STATIC-SYNTAX_Params_Param_Params"}_Params`(.KList))=>inj{Block,Stmt}(`{}_SIMPLE-TYPED-STATIC-SYNTAX_Block`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ea4e5db8ade01837c67ddb2b19a40f15a6f82a44acb71a77938f396e6da067e8), org.kframework.attributes.Location(Location(218,8,218,30)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortParams{}, R} (
            X0:SortParams{},
            Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Params'Unds'Param'Unds'Params'QuotRBraUnds'Params{}()
          ),
          \top{R} ()
        )),
    \equals{SortStmt{},R} (
      LblmkDecls'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Stmt'Unds'Params{}(X0:SortParams{}),
     \and{SortStmt{}} (
       inj{SortBlock{}, SortStmt{}}(Lbl'LBraRBraUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Block{}()),
        \top{SortStmt{}}())))
  [UNIQUE'Unds'ID{}("ea4e5db8ade01837c67ddb2b19a40f15a6f82a44acb71a77938f396e6da067e8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(218,8,218,30)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `mkDecls(_)_SIMPLE-TYPED-STATIC_Stmt_Params`(`_,__SIMPLE-TYPED-STATIC-SYNTAX_Params_Param_Params`(`___SIMPLE-TYPED-STATIC-SYNTAX_Param_Type_Id`(T,X),Ps))=>`___SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Stmt_Stmt`(`__;_SIMPLE-TYPED-STATIC-SYNTAX_Stmt_Type_Exps`(T,`_,__SIMPLE-TYPED-STATIC-SYNTAX_Exps_Exp_Exps`(inj{Id,Exp}(X),inj{Types,Exps}(`.List{"_,__SIMPLE-TYPED-STATIC-SYNTAX_Types_Type_Types"}_Types`(.KList)))),`mkDecls(_)_SIMPLE-TYPED-STATIC_Stmt_Params`(Ps)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2676306f5a84f7a80975973bfb76bb6ec244db8c0ff280badc4d7f0d00dfb21d), org.kframework.attributes.Location(Location(217,8,217,59)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortParams{}, R} (
            X0:SortParams{},
            Lbl'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Params'Unds'Param'Unds'Params{}(Lbl'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Param'Unds'Type'Unds'Id{}(VarT:SortType{},VarX:SortId{}),VarPs:SortParams{})
          ),
          \top{R} ()
        )),
    \equals{SortStmt{},R} (
      LblmkDecls'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Stmt'Unds'Params{}(X0:SortParams{}),
     \and{SortStmt{}} (
       Lbl'UndsUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(Lbl'UndsUndsSClnUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps{}(VarT:SortType{},Lbl'UndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(inj{SortId{}, SortExp{}}(VarX:SortId{}),inj{SortTypes{}, SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}()))),LblmkDecls'LParUndsRParUnds'SIMPLE-TYPED-STATIC'Unds'Stmt'Unds'Params{}(VarPs:SortParams{})),
        \top{SortStmt{}}())))
  [UNIQUE'Unds'ID{}("2676306f5a84f7a80975973bfb76bb6ec244db8c0ff280badc4d7f0d00dfb21d"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(217,8,217,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `notBool_`(#token("false","Bool"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(17ebc68421572b8ebe609c068fb49cbb6cbbe3246e2142257ad8befdda38f415), org.kframework.attributes.Location(Location(1119,8,1119,29)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("false")
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblnotBool'Unds'{}(X0:SortBool{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("17ebc68421572b8ebe609c068fb49cbb6cbbe3246e2142257ad8befdda38f415"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1119,8,1119,29)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `notBool_`(#token("true","Bool"))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(53fc758ece1ff16581673016dfacc556cc30fcf6b3c35b586f001d76a1f9336c), org.kframework.attributes.Location(Location(1118,8,1118,29)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("true")
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblnotBool'Unds'{}(X0:SortBool{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("53fc758ece1ff16581673016dfacc556cc30fcf6b3c35b586f001d76a1f9336c"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1118,8,1118,29)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `project:#tempFile:fd`(#tempFile(K0,K1))=>K1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(adb3a6d90d2e5267333e61f4e4be032bebb5f7a513450887a845c863a2adf95d)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortIOFile{}, R} (
            X0:SortIOFile{},
            Lbl'Hash'tempFile{}(VarK0:SortString{},VarK1:SortInt{})
          ),
          \top{R} ()
        )),
    \equals{SortInt{},R} (
      Lblproject'ColnHash'tempFile'Coln'fd{}(X0:SortIOFile{}),
     \and{SortInt{}} (
       VarK1:SortInt{},
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("adb3a6d90d2e5267333e61f4e4be032bebb5f7a513450887a845c863a2adf95d")]

// rule `project:#tempFile:path`(#tempFile(K0,K1))=>K0 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0020b2718cda89e9c9f4d05915593ca66761a24dffb111c697ccc162278da8ea)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortIOFile{}, R} (
            X0:SortIOFile{},
            Lbl'Hash'tempFile{}(VarK0:SortString{},VarK1:SortInt{})
          ),
          \top{R} ()
        )),
    \equals{SortString{},R} (
      Lblproject'ColnHash'tempFile'Coln'path{}(X0:SortIOFile{}),
     \and{SortString{}} (
       VarK0:SortString{},
        \top{SortString{}}())))
  [UNIQUE'Unds'ID{}("0020b2718cda89e9c9f4d05915593ca66761a24dffb111c697ccc162278da8ea")]

// rule `project:#unknownIOError:errno`(#unknownIOError(K0))=>K0 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a36cde36a6581696f3d54614cc0d2d0864c2da35c6c8dc8d56daaf8b24199241)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortIOError{}, R} (
            X0:SortIOError{},
            Lbl'Hash'unknownIOError{}(VarK0:SortInt{})
          ),
          \top{R} ()
        )),
    \equals{SortInt{},R} (
      Lblproject'ColnHash'unknownIOError'Coln'errno{}(X0:SortIOError{}),
     \and{SortInt{}} (
       VarK0:SortInt{},
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("a36cde36a6581696f3d54614cc0d2d0864c2da35c6c8dc8d56daaf8b24199241")]

// rule `project:Block`(inj{Block,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(85169c02924adb02b41be561762138c14d89ae8c9d3181b555ead907c42e2eb9), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBlock{}, SortKItem{}}(VarK:SortBlock{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBlock{},R} (
      Lblproject'Coln'Block{}(X0:SortK{}),
     \and{SortBlock{}} (
       VarK:SortBlock{},
        \top{SortBlock{}}())))
  [UNIQUE'Unds'ID{}("85169c02924adb02b41be561762138c14d89ae8c9d3181b555ead907c42e2eb9"), projection{}()]

// rule `project:BlockOrStmtType`(inj{BlockOrStmtType,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(449d3a7e39dde7132e53526ce5045a3fc2305e0bb7ee2eb202019de2d2582231), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBlockOrStmtType{}, SortKItem{}}(VarK:SortBlockOrStmtType{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBlockOrStmtType{},R} (
      Lblproject'Coln'BlockOrStmtType{}(X0:SortK{}),
     \and{SortBlockOrStmtType{}} (
       VarK:SortBlockOrStmtType{},
        \top{SortBlockOrStmtType{}}())))
  [UNIQUE'Unds'ID{}("449d3a7e39dde7132e53526ce5045a3fc2305e0bb7ee2eb202019de2d2582231"), projection{}()]

// rule `project:Bool`(inj{Bool,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5872f0d5b8131216db7bc41e2c3a423e55f4b8581589fcbd1bf93b2ca6862d54), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBool{}, SortKItem{}}(VarK:SortBool{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      Lblproject'Coln'Bool{}(X0:SortK{}),
     \and{SortBool{}} (
       VarK:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("5872f0d5b8131216db7bc41e2c3a423e55f4b8581589fcbd1bf93b2ca6862d54"), projection{}()]

// rule `project:CurrEnvVarCell`(inj{CurrEnvVarCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(813338eef519d97dcc1854a8c413cc2871a20ccc7333bc91f598f7e91ec77f3e), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortCurrEnvVarCell{}, SortKItem{}}(VarK:SortCurrEnvVarCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortCurrEnvVarCell{},R} (
      Lblproject'Coln'CurrEnvVarCell{}(X0:SortK{}),
     \and{SortCurrEnvVarCell{}} (
       VarK:SortCurrEnvVarCell{},
        \top{SortCurrEnvVarCell{}}())))
  [UNIQUE'Unds'ID{}("813338eef519d97dcc1854a8c413cc2871a20ccc7333bc91f598f7e91ec77f3e"), projection{}()]

// rule `project:CurrEnvVarCellOpt`(inj{CurrEnvVarCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9ef3047f5a15d2a6b7c0e8a66cbd7c443d6454348d1dfbc0e7711a8a38223cb0), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortCurrEnvVarCellOpt{}, SortKItem{}}(VarK:SortCurrEnvVarCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortCurrEnvVarCellOpt{},R} (
      Lblproject'Coln'CurrEnvVarCellOpt{}(X0:SortK{}),
     \and{SortCurrEnvVarCellOpt{}} (
       VarK:SortCurrEnvVarCellOpt{},
        \top{SortCurrEnvVarCellOpt{}}())))
  [UNIQUE'Unds'ID{}("9ef3047f5a15d2a6b7c0e8a66cbd7c443d6454348d1dfbc0e7711a8a38223cb0"), projection{}()]

// rule `project:Exp`(inj{Exp,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9cd2bc2f2919e88b7c91858d910ebc06ec69505e24015e7346a27913f6b3d0c7), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortExp{}, SortKItem{}}(VarK:SortExp{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortExp{},R} (
      Lblproject'Coln'Exp{}(X0:SortK{}),
     \and{SortExp{}} (
       VarK:SortExp{},
        \top{SortExp{}}())))
  [UNIQUE'Unds'ID{}("9cd2bc2f2919e88b7c91858d910ebc06ec69505e24015e7346a27913f6b3d0c7"), projection{}()]

// rule `project:Exps`(inj{Exps,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(331fb545486ec7658a42a59c02212f98269fbac46ed5ede15648aafb72b6948a), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortExps{}, SortKItem{}}(VarK:SortExps{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortExps{},R} (
      Lblproject'Coln'Exps{}(X0:SortK{}),
     \and{SortExps{}} (
       VarK:SortExps{},
        \top{SortExps{}}())))
  [UNIQUE'Unds'ID{}("331fb545486ec7658a42a59c02212f98269fbac46ed5ede15648aafb72b6948a"), projection{}()]

// rule `project:Float`(inj{Float,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ef206f477d884c0b6413273ff35b1206769cdb5a5ceba7b97d9e8e0a7b14e399), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFloat{}, SortKItem{}}(VarK:SortFloat{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortFloat{},R} (
      Lblproject'Coln'Float{}(X0:SortK{}),
     \and{SortFloat{}} (
       VarK:SortFloat{},
        \top{SortFloat{}}())))
  [UNIQUE'Unds'ID{}("ef206f477d884c0b6413273ff35b1206769cdb5a5ceba7b97d9e8e0a7b14e399"), projection{}()]

// rule `project:GeneratedCounterCell`(inj{GeneratedCounterCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(63453db9d9aa121b63bb877e2fa4998d399ef82d2a1e4b90f87a32ba55401217), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedCounterCell{}, SortKItem{}}(VarK:SortGeneratedCounterCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortGeneratedCounterCell{},R} (
      Lblproject'Coln'GeneratedCounterCell{}(X0:SortK{}),
     \and{SortGeneratedCounterCell{}} (
       VarK:SortGeneratedCounterCell{},
        \top{SortGeneratedCounterCell{}}())))
  [UNIQUE'Unds'ID{}("63453db9d9aa121b63bb877e2fa4998d399ef82d2a1e4b90f87a32ba55401217"), projection{}()]

// rule `project:GeneratedCounterCellOpt`(inj{GeneratedCounterCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9325a900267ae528f7cd09f3b44b825dd9ff344c38d38383c08fa697cc67efca), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedCounterCellOpt{}, SortKItem{}}(VarK:SortGeneratedCounterCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortGeneratedCounterCellOpt{},R} (
      Lblproject'Coln'GeneratedCounterCellOpt{}(X0:SortK{}),
     \and{SortGeneratedCounterCellOpt{}} (
       VarK:SortGeneratedCounterCellOpt{},
        \top{SortGeneratedCounterCellOpt{}}())))
  [UNIQUE'Unds'ID{}("9325a900267ae528f7cd09f3b44b825dd9ff344c38d38383c08fa697cc67efca"), projection{}()]

// rule `project:GeneratedTopCell`(inj{GeneratedTopCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b0fabd8c7c81fe08ebd569aff59747d357e441ae1fcd05d9d594d57e38e3d55e), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedTopCell{}, SortKItem{}}(VarK:SortGeneratedTopCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortGeneratedTopCell{},R} (
      Lblproject'Coln'GeneratedTopCell{}(X0:SortK{}),
     \and{SortGeneratedTopCell{}} (
       VarK:SortGeneratedTopCell{},
        \top{SortGeneratedTopCell{}}())))
  [UNIQUE'Unds'ID{}("b0fabd8c7c81fe08ebd569aff59747d357e441ae1fcd05d9d594d57e38e3d55e"), projection{}()]

// rule `project:GeneratedTopCellFragment`(inj{GeneratedTopCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2084fac322aa142a07f881814b8a286bf62d5c6d05777b7aa715ccc534cf9a42), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedTopCellFragment{}, SortKItem{}}(VarK:SortGeneratedTopCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortGeneratedTopCellFragment{},R} (
      Lblproject'Coln'GeneratedTopCellFragment{}(X0:SortK{}),
     \and{SortGeneratedTopCellFragment{}} (
       VarK:SortGeneratedTopCellFragment{},
        \top{SortGeneratedTopCellFragment{}}())))
  [UNIQUE'Unds'ID{}("2084fac322aa142a07f881814b8a286bf62d5c6d05777b7aa715ccc534cf9a42"), projection{}()]

// rule `project:GtenvCell`(inj{GtenvCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(897c4717522ba378b42e3a833f6ae59c28ab4cf64de122cd950ddf473c111d65), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGtenvCell{}, SortKItem{}}(VarK:SortGtenvCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortGtenvCell{},R} (
      Lblproject'Coln'GtenvCell{}(X0:SortK{}),
     \and{SortGtenvCell{}} (
       VarK:SortGtenvCell{},
        \top{SortGtenvCell{}}())))
  [UNIQUE'Unds'ID{}("897c4717522ba378b42e3a833f6ae59c28ab4cf64de122cd950ddf473c111d65"), projection{}()]

// rule `project:GtenvCellOpt`(inj{GtenvCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5da21fab58dbd5d855b3a4319db0917a414376257ddef00dd37f85bc4cf15d33), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGtenvCellOpt{}, SortKItem{}}(VarK:SortGtenvCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortGtenvCellOpt{},R} (
      Lblproject'Coln'GtenvCellOpt{}(X0:SortK{}),
     \and{SortGtenvCellOpt{}} (
       VarK:SortGtenvCellOpt{},
        \top{SortGtenvCellOpt{}}())))
  [UNIQUE'Unds'ID{}("5da21fab58dbd5d855b3a4319db0917a414376257ddef00dd37f85bc4cf15d33"), projection{}()]

// rule `project:IOError`(inj{IOError,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7ffe32516a0c3941ee4ba99c0f779b50c13a06e7eeb613f97334efb61b50c3aa), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIOError{}, SortKItem{}}(VarK:SortIOError{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortIOError{},R} (
      Lblproject'Coln'IOError{}(X0:SortK{}),
     \and{SortIOError{}} (
       VarK:SortIOError{},
        \top{SortIOError{}}())))
  [UNIQUE'Unds'ID{}("7ffe32516a0c3941ee4ba99c0f779b50c13a06e7eeb613f97334efb61b50c3aa"), projection{}()]

// rule `project:IOFile`(inj{IOFile,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(09adbf7f680517f1f89e4e8c71d5bd247c4a2ea5d62e7c4aeb3153ab97239841), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIOFile{}, SortKItem{}}(VarK:SortIOFile{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortIOFile{},R} (
      Lblproject'Coln'IOFile{}(X0:SortK{}),
     \and{SortIOFile{}} (
       VarK:SortIOFile{},
        \top{SortIOFile{}}())))
  [UNIQUE'Unds'ID{}("09adbf7f680517f1f89e4e8c71d5bd247c4a2ea5d62e7c4aeb3153ab97239841"), projection{}()]

// rule `project:IOInt`(inj{IOInt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e39565377db8be1e421a86f0a0c31d0782a9af4aed7031245771fcb2a0152e06), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIOInt{}, SortKItem{}}(VarK:SortIOInt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortIOInt{},R} (
      Lblproject'Coln'IOInt{}(X0:SortK{}),
     \and{SortIOInt{}} (
       VarK:SortIOInt{},
        \top{SortIOInt{}}())))
  [UNIQUE'Unds'ID{}("e39565377db8be1e421a86f0a0c31d0782a9af4aed7031245771fcb2a0152e06"), projection{}()]

// rule `project:IOString`(inj{IOString,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(76a39386f0abf23155a1642ec64113306ae7c384a59c2e7f562d3c564efcc9a4), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIOString{}, SortKItem{}}(VarK:SortIOString{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortIOString{},R} (
      Lblproject'Coln'IOString{}(X0:SortK{}),
     \and{SortIOString{}} (
       VarK:SortIOString{},
        \top{SortIOString{}}())))
  [UNIQUE'Unds'ID{}("76a39386f0abf23155a1642ec64113306ae7c384a59c2e7f562d3c564efcc9a4"), projection{}()]

// rule `project:Id`(inj{Id,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(afcb3941b7c18d4b91d6ed8981582d58e0dc006425e9889e9891c2a7c2b93554), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortId{}, SortKItem{}}(VarK:SortId{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortId{},R} (
      Lblproject'Coln'Id{}(X0:SortK{}),
     \and{SortId{}} (
       VarK:SortId{},
        \top{SortId{}}())))
  [UNIQUE'Unds'ID{}("afcb3941b7c18d4b91d6ed8981582d58e0dc006425e9889e9891c2a7c2b93554"), projection{}()]

// rule `project:Int`(inj{Int,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f316b871091516c401f1d2382cc5f66322602b782c7b01e1aeb6c2ddab50e24b), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortInt{}, SortKItem{}}(VarK:SortInt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortInt{},R} (
      Lblproject'Coln'Int{}(X0:SortK{}),
     \and{SortInt{}} (
       VarK:SortInt{},
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("f316b871091516c401f1d2382cc5f66322602b782c7b01e1aeb6c2ddab50e24b"), projection{}()]

// rule `project:K`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(25b529ddcefd25ef63f99a62040145ef27638e7679ea9202218fe14be98dff3a), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )),
    \equals{SortK{},R} (
      Lblproject'Coln'K{}(X0:SortK{}),
     \and{SortK{}} (
       VarK:SortK{},
        \top{SortK{}}())))
  [UNIQUE'Unds'ID{}("25b529ddcefd25ef63f99a62040145ef27638e7679ea9202218fe14be98dff3a"), projection{}()]

// rule `project:KCell`(inj{KCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(894c13c4c410f11e35bc3781505aeddde4ff400ddda1daf8b35259dbf0de9a24), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortKCell{}, SortKItem{}}(VarK:SortKCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortKCell{},R} (
      Lblproject'Coln'KCell{}(X0:SortK{}),
     \and{SortKCell{}} (
       VarK:SortKCell{},
        \top{SortKCell{}}())))
  [UNIQUE'Unds'ID{}("894c13c4c410f11e35bc3781505aeddde4ff400ddda1daf8b35259dbf0de9a24"), projection{}()]

// rule `project:KCellOpt`(inj{KCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f684dd78d97feadf0cbcb3cbb8892e0842f137c7b29a904cb2f3fc9755b29b30), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortKCellOpt{}, SortKItem{}}(VarK:SortKCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortKCellOpt{},R} (
      Lblproject'Coln'KCellOpt{}(X0:SortK{}),
     \and{SortKCellOpt{}} (
       VarK:SortKCellOpt{},
        \top{SortKCellOpt{}}())))
  [UNIQUE'Unds'ID{}("f684dd78d97feadf0cbcb3cbb8892e0842f137c7b29a904cb2f3fc9755b29b30"), projection{}()]

// rule `project:KItem`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1242e49c17638c9a66a35e3bb8c237288f7e9aa9a6499101e8cdc55be320cd29), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(VarK:SortKItem{},dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortKItem{},R} (
      Lblproject'Coln'KItem{}(X0:SortK{}),
     \and{SortKItem{}} (
       VarK:SortKItem{},
        \top{SortKItem{}}())))
  [UNIQUE'Unds'ID{}("1242e49c17638c9a66a35e3bb8c237288f7e9aa9a6499101e8cdc55be320cd29"), projection{}()]

// rule `project:KResult`(inj{KResult,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(07a916f84d6294528a6d07f273fb778b316d52b4ef8204a1817b105750b2b734), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortKResult{}, SortKItem{}}(VarK:SortKResult{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortKResult{},R} (
      Lblproject'Coln'KResult{}(X0:SortK{}),
     \and{SortKResult{}} (
       VarK:SortKResult{},
        \top{SortKResult{}}())))
  [UNIQUE'Unds'ID{}("07a916f84d6294528a6d07f273fb778b316d52b4ef8204a1817b105750b2b734"), projection{}()]

// rule `project:LValue`(inj{LValue,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1c8d86ceb7050d7e02e268e461abf8b5773e9dad2e3d63038d3ff911e2ff3041), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortLValue{}, SortKItem{}}(VarK:SortLValue{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortLValue{},R} (
      Lblproject'Coln'LValue{}(X0:SortK{}),
     \and{SortLValue{}} (
       VarK:SortLValue{},
        \top{SortLValue{}}())))
  [UNIQUE'Unds'ID{}("1c8d86ceb7050d7e02e268e461abf8b5773e9dad2e3d63038d3ff911e2ff3041"), projection{}()]

// rule `project:List`(inj{List,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2b75eac5a59779d336e6cf9632bf9ba7d67286f322e753108b34e62f2443efe5), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortList{}, SortKItem{}}(VarK:SortList{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortList{},R} (
      Lblproject'Coln'List{}(X0:SortK{}),
     \and{SortList{}} (
       VarK:SortList{},
        \top{SortList{}}())))
  [UNIQUE'Unds'ID{}("2b75eac5a59779d336e6cf9632bf9ba7d67286f322e753108b34e62f2443efe5"), projection{}()]

// rule `project:Map`(inj{Map,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(031237d4aae58d86914d6370d37ccd15f4738378ed780333c59cc81b4f7bc598), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMap{}, SortKItem{}}(VarK:SortMap{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortMap{},R} (
      Lblproject'Coln'Map{}(X0:SortK{}),
     \and{SortMap{}} (
       VarK:SortMap{},
        \top{SortMap{}}())))
  [UNIQUE'Unds'ID{}("031237d4aae58d86914d6370d37ccd15f4738378ed780333c59cc81b4f7bc598"), projection{}()]

// rule `project:Param`(inj{Param,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9d20a8e0d641103cbf8616733900422879f79d6aec04fe0defbb3c376a07b29e), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortParam{}, SortKItem{}}(VarK:SortParam{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortParam{},R} (
      Lblproject'Coln'Param{}(X0:SortK{}),
     \and{SortParam{}} (
       VarK:SortParam{},
        \top{SortParam{}}())))
  [UNIQUE'Unds'ID{}("9d20a8e0d641103cbf8616733900422879f79d6aec04fe0defbb3c376a07b29e"), projection{}()]

// rule `project:Params`(inj{Params,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a5f4d4f5341a744e2a0869eb3fb19baf414b9bff8990a3f2dd9ded58bbac1968), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortParams{}, SortKItem{}}(VarK:SortParams{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortParams{},R} (
      Lblproject'Coln'Params{}(X0:SortK{}),
     \and{SortParams{}} (
       VarK:SortParams{},
        \top{SortParams{}}())))
  [UNIQUE'Unds'ID{}("a5f4d4f5341a744e2a0869eb3fb19baf414b9bff8990a3f2dd9ded58bbac1968"), projection{}()]

// rule `project:ReturnTypeCell`(inj{ReturnTypeCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f12983c91a0e1a160731b429a8b7ac055eaebbd45b53fbe155d728863e4a25e1), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortReturnTypeCell{}, SortKItem{}}(VarK:SortReturnTypeCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortReturnTypeCell{},R} (
      Lblproject'Coln'ReturnTypeCell{}(X0:SortK{}),
     \and{SortReturnTypeCell{}} (
       VarK:SortReturnTypeCell{},
        \top{SortReturnTypeCell{}}())))
  [UNIQUE'Unds'ID{}("f12983c91a0e1a160731b429a8b7ac055eaebbd45b53fbe155d728863e4a25e1"), projection{}()]

// rule `project:ReturnTypeCellOpt`(inj{ReturnTypeCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3db4385b3e3a4351f325744f6bf2ec98aa43aca9c9bbf10a2aa3b6ad2db4d863), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortReturnTypeCellOpt{}, SortKItem{}}(VarK:SortReturnTypeCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortReturnTypeCellOpt{},R} (
      Lblproject'Coln'ReturnTypeCellOpt{}(X0:SortK{}),
     \and{SortReturnTypeCellOpt{}} (
       VarK:SortReturnTypeCellOpt{},
        \top{SortReturnTypeCellOpt{}}())))
  [UNIQUE'Unds'ID{}("3db4385b3e3a4351f325744f6bf2ec98aa43aca9c9bbf10a2aa3b6ad2db4d863"), projection{}()]

// rule `project:Set`(inj{Set,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0e7f5070c993161786e314f7199d985afebac9e07b5c784f6f623780c60ce9d0), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortSet{}, SortKItem{}}(VarK:SortSet{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortSet{},R} (
      Lblproject'Coln'Set{}(X0:SortK{}),
     \and{SortSet{}} (
       VarK:SortSet{},
        \top{SortSet{}}())))
  [UNIQUE'Unds'ID{}("0e7f5070c993161786e314f7199d985afebac9e07b5c784f6f623780c60ce9d0"), projection{}()]

// rule `project:Stmt`(inj{Stmt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(dea7f879e640dc866a6ac853d51a70b1ded2d1fda72c3c4a7fbded3b9e6e2500), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortStmt{}, SortKItem{}}(VarK:SortStmt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortStmt{},R} (
      Lblproject'Coln'Stmt{}(X0:SortK{}),
     \and{SortStmt{}} (
       VarK:SortStmt{},
        \top{SortStmt{}}())))
  [UNIQUE'Unds'ID{}("dea7f879e640dc866a6ac853d51a70b1ded2d1fda72c3c4a7fbded3b9e6e2500"), projection{}()]

// rule `project:Stream`(inj{Stream,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(bb30b432f6a3a9b73f42f0d3a54e07645be55c26bdee9d5c513f06e8009d0a77), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortStream{}, SortKItem{}}(VarK:SortStream{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortStream{},R} (
      Lblproject'Coln'Stream{}(X0:SortK{}),
     \and{SortStream{}} (
       VarK:SortStream{},
        \top{SortStream{}}())))
  [UNIQUE'Unds'ID{}("bb30b432f6a3a9b73f42f0d3a54e07645be55c26bdee9d5c513f06e8009d0a77"), projection{}()]

// rule `project:String`(inj{String,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e491dad8f644d2344f08cb72af01ade1e6ce9f564010a2de7909b3b6c7e2ae85), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortString{}, SortKItem{}}(VarK:SortString{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortString{},R} (
      Lblproject'Coln'String{}(X0:SortK{}),
     \and{SortString{}} (
       VarK:SortString{},
        \top{SortString{}}())))
  [UNIQUE'Unds'ID{}("e491dad8f644d2344f08cb72af01ade1e6ce9f564010a2de7909b3b6c7e2ae85"), projection{}()]

// rule `project:TCell`(inj{TCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8f26b10396db28857112a7db56ab3ef6b64a5c219427baf3f17e0e1fb39ad1ba), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTCell{}, SortKItem{}}(VarK:SortTCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortTCell{},R} (
      Lblproject'Coln'TCell{}(X0:SortK{}),
     \and{SortTCell{}} (
       VarK:SortTCell{},
        \top{SortTCell{}}())))
  [UNIQUE'Unds'ID{}("8f26b10396db28857112a7db56ab3ef6b64a5c219427baf3f17e0e1fb39ad1ba"), projection{}()]

// rule `project:TCellFragment`(inj{TCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(fcf28c9054cbb906b0631404e7190aa02f1fa3a4a09ec0d3024688ee1222c76c), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTCellFragment{}, SortKItem{}}(VarK:SortTCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortTCellFragment{},R} (
      Lblproject'Coln'TCellFragment{}(X0:SortK{}),
     \and{SortTCellFragment{}} (
       VarK:SortTCellFragment{},
        \top{SortTCellFragment{}}())))
  [UNIQUE'Unds'ID{}("fcf28c9054cbb906b0631404e7190aa02f1fa3a4a09ec0d3024688ee1222c76c"), projection{}()]

// rule `project:TCellOpt`(inj{TCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d3df5db294a6f5330dba88e63f8fdddee2bee164f110ca7e39e65afc4cfbb85a), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTCellOpt{}, SortKItem{}}(VarK:SortTCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortTCellOpt{},R} (
      Lblproject'Coln'TCellOpt{}(X0:SortK{}),
     \and{SortTCellOpt{}} (
       VarK:SortTCellOpt{},
        \top{SortTCellOpt{}}())))
  [UNIQUE'Unds'ID{}("d3df5db294a6f5330dba88e63f8fdddee2bee164f110ca7e39e65afc4cfbb85a"), projection{}()]

// rule `project:TaskCell`(inj{TaskCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c09487cc673cb890b3324d792bcbb9e96350abc8244a1b928beabbad256d493d), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTaskCell{}, SortKItem{}}(VarK:SortTaskCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortTaskCell{},R} (
      Lblproject'Coln'TaskCell{}(X0:SortK{}),
     \and{SortTaskCell{}} (
       VarK:SortTaskCell{},
        \top{SortTaskCell{}}())))
  [UNIQUE'Unds'ID{}("c09487cc673cb890b3324d792bcbb9e96350abc8244a1b928beabbad256d493d"), projection{}()]

// rule `project:TaskCellFragment`(inj{TaskCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8c4d5cec69e0916bb0ec416b1b110d02bd601337063345c6a70678ac032c8f7d), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTaskCellFragment{}, SortKItem{}}(VarK:SortTaskCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortTaskCellFragment{},R} (
      Lblproject'Coln'TaskCellFragment{}(X0:SortK{}),
     \and{SortTaskCellFragment{}} (
       VarK:SortTaskCellFragment{},
        \top{SortTaskCellFragment{}}())))
  [UNIQUE'Unds'ID{}("8c4d5cec69e0916bb0ec416b1b110d02bd601337063345c6a70678ac032c8f7d"), projection{}()]

// rule `project:TaskCellSet`(inj{TaskCellSet,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9b20e19946101e826c0574a9ce0dfe08e9788488c1761e3132a4e90cdf86b374), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTaskCellSet{}, SortKItem{}}(VarK:SortTaskCellSet{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortTaskCellSet{},R} (
      Lblproject'Coln'TaskCellSet{}(X0:SortK{}),
     \and{SortTaskCellSet{}} (
       VarK:SortTaskCellSet{},
        \top{SortTaskCellSet{}}())))
  [UNIQUE'Unds'ID{}("9b20e19946101e826c0574a9ce0dfe08e9788488c1761e3132a4e90cdf86b374"), projection{}()]

// rule `project:TasksCell`(inj{TasksCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(311f9cbb0b86411222d7bc7f73b44924d06a87434f235db69e37b8e429051ae2), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTasksCell{}, SortKItem{}}(VarK:SortTasksCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortTasksCell{},R} (
      Lblproject'Coln'TasksCell{}(X0:SortK{}),
     \and{SortTasksCell{}} (
       VarK:SortTasksCell{},
        \top{SortTasksCell{}}())))
  [UNIQUE'Unds'ID{}("311f9cbb0b86411222d7bc7f73b44924d06a87434f235db69e37b8e429051ae2"), projection{}()]

// rule `project:TasksCellFragment`(inj{TasksCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d7c2c8cd853eaecdca9817a53e71e53e3d0147b9ad636c821cddbcc5f11893d4), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTasksCellFragment{}, SortKItem{}}(VarK:SortTasksCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortTasksCellFragment{},R} (
      Lblproject'Coln'TasksCellFragment{}(X0:SortK{}),
     \and{SortTasksCellFragment{}} (
       VarK:SortTasksCellFragment{},
        \top{SortTasksCellFragment{}}())))
  [UNIQUE'Unds'ID{}("d7c2c8cd853eaecdca9817a53e71e53e3d0147b9ad636c821cddbcc5f11893d4"), projection{}()]

// rule `project:TasksCellOpt`(inj{TasksCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ce48c3eb597b2f6c0883e809e4f4bf36cabbccfd7d6e9c856f2c296cf0fd532f), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTasksCellOpt{}, SortKItem{}}(VarK:SortTasksCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortTasksCellOpt{},R} (
      Lblproject'Coln'TasksCellOpt{}(X0:SortK{}),
     \and{SortTasksCellOpt{}} (
       VarK:SortTasksCellOpt{},
        \top{SortTasksCellOpt{}}())))
  [UNIQUE'Unds'ID{}("ce48c3eb597b2f6c0883e809e4f4bf36cabbccfd7d6e9c856f2c296cf0fd532f"), projection{}()]

// rule `project:TenvCell`(inj{TenvCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1240c9f656e6432f37daf15c9ebe3ff9ca4f35149308eb757bba5ea3407fc1e5), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTenvCell{}, SortKItem{}}(VarK:SortTenvCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortTenvCell{},R} (
      Lblproject'Coln'TenvCell{}(X0:SortK{}),
     \and{SortTenvCell{}} (
       VarK:SortTenvCell{},
        \top{SortTenvCell{}}())))
  [UNIQUE'Unds'ID{}("1240c9f656e6432f37daf15c9ebe3ff9ca4f35149308eb757bba5ea3407fc1e5"), projection{}()]

// rule `project:TenvCellOpt`(inj{TenvCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f97f172fa9b69b3c3b479e8b59a39d1fac8561fed68fd29e4f6b081cfb20b652), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTenvCellOpt{}, SortKItem{}}(VarK:SortTenvCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortTenvCellOpt{},R} (
      Lblproject'Coln'TenvCellOpt{}(X0:SortK{}),
     \and{SortTenvCellOpt{}} (
       VarK:SortTenvCellOpt{},
        \top{SortTenvCellOpt{}}())))
  [UNIQUE'Unds'ID{}("f97f172fa9b69b3c3b479e8b59a39d1fac8561fed68fd29e4f6b081cfb20b652"), projection{}()]

// rule `project:Type`(inj{Type,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ef9c9e8abaf2a78577b4d63d0f6c6de195a90a606f31d5a2205a26d1140c58a6), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortType{}, SortKItem{}}(VarK:SortType{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortType{},R} (
      Lblproject'Coln'Type{}(X0:SortK{}),
     \and{SortType{}} (
       VarK:SortType{},
        \top{SortType{}}())))
  [UNIQUE'Unds'ID{}("ef9c9e8abaf2a78577b4d63d0f6c6de195a90a606f31d5a2205a26d1140c58a6"), projection{}()]

// rule `project:Types`(inj{Types,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a8e75c8adb82425e6f16ac8c0a5a8527686d18ff295060be5a0092ccaa47a1e3), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTypes{}, SortKItem{}}(VarK:SortTypes{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortTypes{},R} (
      Lblproject'Coln'Types{}(X0:SortK{}),
     \and{SortTypes{}} (
       VarK:SortTypes{},
        \top{SortTypes{}}())))
  [UNIQUE'Unds'ID{}("a8e75c8adb82425e6f16ac8c0a5a8527686d18ff295060be5a0092ccaa47a1e3"), projection{}()]

// rule `replace(_,_,_,_)_STRING-COMMON_String_String_String_String_Int`(Source,ToReplace,Replacement,Count)=>`_+String__STRING-COMMON_String_String_String`(`_+String__STRING-COMMON_String_String_String`(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(Source,#token("0","Int"),`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToReplace,#token("0","Int"))),Replacement),`replace(_,_,_,_)_STRING-COMMON_String_String_String_String_Int`(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(Source,`_+Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToReplace,#token("0","Int")),`lengthString(_)_STRING-COMMON_Int_String`(ToReplace)),`lengthString(_)_STRING-COMMON_Int_String`(Source)),ToReplace,Replacement,`_-Int_`(Count,#token("1","Int")))) requires `_>Int_`(Count,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(311b80d2cb12d368f230eba968464e1fc926bd57e304059b282b82af4d9626d9), org.kframework.attributes.Location(Location(1884,8,1887,30)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-GT-'Int'Unds'{}(VarCount:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarSource:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarToReplace:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X2:SortString{},
            VarReplacement:SortString{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X3:SortInt{},
            VarCount:SortInt{}
          ),
          \top{R} ()
        ))))),
    \equals{SortString{},R} (
      Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int{}(X0:SortString{},X1:SortString{},X2:SortString{},X3:SortInt{}),
     \and{SortString{}} (
       Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarSource:SortString{},\dv{SortInt{}}("0"),LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0"))),VarReplacement:SortString{}),Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int{}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarSource:SortString{},Lbl'UndsPlus'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0")),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarToReplace:SortString{})),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarSource:SortString{})),VarToReplace:SortString{},VarReplacement:SortString{},Lbl'Unds'-Int'Unds'{}(VarCount:SortInt{},\dv{SortInt{}}("1")))),
        \top{SortString{}}())))
  [UNIQUE'Unds'ID{}("311b80d2cb12d368f230eba968464e1fc926bd57e304059b282b82af4d9626d9"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1884,8,1887,30)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]")]

// rule `replace(_,_,_,_)_STRING-COMMON_String_String_String_String_Int`(Source,_Gen0,_Gen1,#token("0","Int"))=>Source requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4367434b0f61c404f7a2e926426bd23874dd547de689c5d15089967fbab2b3d5), org.kframework.attributes.Location(Location(1888,8,1888,49)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarSource:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            Var'Unds'Gen0:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X2:SortString{},
            Var'Unds'Gen1:SortString{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X3:SortInt{},
            \dv{SortInt{}}("0")
          ),
          \top{R} ()
        ))))),
    \equals{SortString{},R} (
      Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int{}(X0:SortString{},X1:SortString{},X2:SortString{},X3:SortInt{}),
     \and{SortString{}} (
       VarSource:SortString{},
        \top{SortString{}}())))
  [UNIQUE'Unds'ID{}("4367434b0f61c404f7a2e926426bd23874dd547de689c5d15089967fbab2b3d5"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1888,8,1888,49)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `replaceAll(_,_,_)_STRING-COMMON_String_String_String_String`(Source,ToReplace,Replacement)=>`replace(_,_,_,_)_STRING-COMMON_String_String_String_String_Int`(Source,ToReplace,Replacement,`countAllOccurrences(_,_)_STRING-COMMON_Int_String_String`(Source,ToReplace)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(262167183c3ec2e214d12bac6e639d7ac1a9f973582e16eca6c1af1da7ecc0a5), org.kframework.attributes.Location(Location(1889,8,1889,154)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarSource:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarToReplace:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X2:SortString{},
            VarReplacement:SortString{}
          ),
          \top{R} ()
        )))),
    \equals{SortString{},R} (
      LblreplaceAll'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String{}(X0:SortString{},X1:SortString{},X2:SortString{}),
     \and{SortString{}} (
       Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},VarReplacement:SortString{},LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String{}(VarSource:SortString{},VarToReplace:SortString{})),
        \top{SortString{}}())))
  [UNIQUE'Unds'ID{}("262167183c3ec2e214d12bac6e639d7ac1a9f973582e16eca6c1af1da7ecc0a5"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1889,8,1889,154)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `replaceFirst(_,_,_)_STRING-COMMON_String_String_String_String`(Source,ToReplace,Replacement)=>`_+String__STRING-COMMON_String_String_String`(`_+String__STRING-COMMON_String_String_String`(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(Source,#token("0","Int"),`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToReplace,#token("0","Int"))),Replacement),`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(Source,`_+Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToReplace,#token("0","Int")),`lengthString(_)_STRING-COMMON_Int_String`(ToReplace)),`lengthString(_)_STRING-COMMON_Int_String`(Source))) requires `_>=Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToReplace,#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(e290042e5b5b2f620c0ca1871e708c3713c62b63b283e317bb7568e13968fe0c), org.kframework.attributes.Location(Location(1877,8,1879,66)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-GT-Eqls'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0")),\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarSource:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarToReplace:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X2:SortString{},
            VarReplacement:SortString{}
          ),
          \top{R} ()
        )))),
    \equals{SortString{},R} (
      LblreplaceFirst'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String{}(X0:SortString{},X1:SortString{},X2:SortString{}),
     \and{SortString{}} (
       Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarSource:SortString{},\dv{SortInt{}}("0"),LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0"))),VarReplacement:SortString{}),LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarSource:SortString{},Lbl'UndsPlus'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0")),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarToReplace:SortString{})),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarSource:SortString{}))),
        \top{SortString{}}())))
  [UNIQUE'Unds'ID{}("e290042e5b5b2f620c0ca1871e708c3713c62b63b283e317bb7568e13968fe0c"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1877,8,1879,66)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]")]

// rule `replaceFirst(_,_,_)_STRING-COMMON_String_String_String_String`(Source,ToReplace,_Gen0)=>Source requires `_<Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToReplace,#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(8fbd1c8efb9988236eddc95fc2af4a3e74f6ec94d696ee47209543fd0826dd34), org.kframework.attributes.Location(Location(1880,8,1881,57)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-LT-'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0")),\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarSource:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarToReplace:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X2:SortString{},
            Var'Unds'Gen0:SortString{}
          ),
          \top{R} ()
        )))),
    \equals{SortString{},R} (
      LblreplaceFirst'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String{}(X0:SortString{},X1:SortString{},X2:SortString{}),
     \and{SortString{}} (
       VarSource:SortString{},
        \top{SortString{}}())))
  [UNIQUE'Unds'ID{}("8fbd1c8efb9988236eddc95fc2af4a3e74f6ec94d696ee47209543fd0826dd34"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1880,8,1881,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]")]

// rule `rfindChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,S2,I)=>`maxInt(_,_)_INT-COMMON_Int_Int_Int`(`rfindString(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("0","Int"),#token("1","Int")),I),`rfindChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("1","Int"),`lengthString(_)_STRING-COMMON_Int_String`(S2)),I)) requires `_=/=String__STRING-COMMON_Bool_String_String`(S2,#token("\"\"","String")) ensures #token("true","Bool") [UNIQUE_ID(b7f740050d72a847424b022a9c8217325aba8a154a42831aa3c7a3b0727f3205), org.kframework.attributes.Location(Location(1869,8,1869,182)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(VarS2:SortString{},\dv{SortString{}}("")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarS1:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarS2:SortString{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarI:SortInt{}
          ),
          \top{R} ()
        )))),
    \equals{SortInt{},R} (
      LblrfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(X0:SortString{},X1:SortString{},X2:SortInt{}),
     \and{SortInt{}} (
       LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(LblrfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("0"),\dv{SortInt{}}("1")),VarI:SortInt{}),LblrfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("1"),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarS2:SortString{})),VarI:SortInt{})),
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("b7f740050d72a847424b022a9c8217325aba8a154a42831aa3c7a3b0727f3205"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1869,8,1869,182)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]")]

// rule `rfindChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(_Gen0,#token("\"\"","String"),_Gen1)=>#token("-1","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(23b9fa88124c547d94aed32124d1ccd1069732b059f4c8b430ab4617979690f6), org.kframework.attributes.Location(Location(1870,8,1870,33)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            Var'Unds'Gen0:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            \dv{SortString{}}("")
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            Var'Unds'Gen1:SortInt{}
          ),
          \top{R} ()
        )))),
    \equals{SortInt{},R} (
      LblrfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(X0:SortString{},X1:SortString{},X2:SortInt{}),
     \and{SortInt{}} (
       \dv{SortInt{}}("-1"),
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("23b9fa88124c547d94aed32124d1ccd1069732b059f4c8b430ab4617979690f6"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1870,8,1870,33)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `signExtendBitRangeInt(_,_,_)_INT-COMMON_Int_Int_Int_Int`(I,IDX,LEN)=>`_-Int_`(`_modInt_`(`_+Int_`(`bitRangeInt(_,_,_)_INT-COMMON_Int_Int_Int_Int`(I,IDX,LEN),`_<<Int_`(#token("1","Int"),`_-Int_`(LEN,#token("1","Int")))),`_<<Int_`(#token("1","Int"),LEN)),`_<<Int_`(#token("1","Int"),`_-Int_`(LEN,#token("1","Int")))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3b67f4bf2235fc46fc94b1d10e936100ea3fc4f2dbaa4e4a77593e8385f5004f), org.kframework.attributes.Location(Location(1416,8,1416,164)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarIDX:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarLEN:SortInt{}
          ),
          \top{R} ()
        )))),
    \equals{SortInt{},R} (
      LblsignExtendBitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int{}(X0:SortInt{},X1:SortInt{},X2:SortInt{}),
     \and{SortInt{}} (
       Lbl'Unds'-Int'Unds'{}(Lbl'Unds'modInt'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int{}(VarI:SortInt{},VarIDX:SortInt{},VarLEN:SortInt{}),Lbl'Unds-LT--LT-'Int'Unds'{}(\dv{SortInt{}}("1"),Lbl'Unds'-Int'Unds'{}(VarLEN:SortInt{},\dv{SortInt{}}("1")))),Lbl'Unds-LT--LT-'Int'Unds'{}(\dv{SortInt{}}("1"),VarLEN:SortInt{})),Lbl'Unds-LT--LT-'Int'Unds'{}(\dv{SortInt{}}("1"),Lbl'Unds'-Int'Unds'{}(VarLEN:SortInt{},\dv{SortInt{}}("1")))),
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("3b67f4bf2235fc46fc94b1d10e936100ea3fc4f2dbaa4e4a77593e8385f5004f"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1416,8,1416,164)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

endmodule [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(73,1,238,10)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 4/simple-typed-static.k)")]
