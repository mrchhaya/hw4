[topCellInitializer{}(LblinitGeneratedTopCell{}()), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)")]

module BASIC-K
    sort SortK{} []
    sort SortKItem{} []
endmodule
[]
module KSEQ
    import BASIC-K []
    symbol kseq{}(SortKItem{}, SortK{}) : SortK{} [constructor{}(), functional{}(), injective{}()]
    symbol dotk{}() : SortK{} [constructor{}(), functional{}(), injective{}()]
    symbol append{}(SortK{}, SortK{}) : SortK{} [function{}(), functional{}()]
    axiom {R} \implies{R}(
        \and{R}(
            \top{R}(),
            \and{R}(
                \in{SortK{}, R}(X0:SortK{}, dotk{}()),
            \and{R}(
                \in{SortK{}, R}(X1:SortK{}, TAIL:SortK{}),
                \top{R}()
            ))
        ),
        \equals{SortK{}, R}(
            append{}(X0:SortK{}, X1:SortK{}),
            \and{SortK{}}(
                TAIL:SortK{},
                \top{SortK{}}()
            )
        )
    ) []
    axiom {R} \implies{R}(
        \and{R}(
            \top{R}(),
            \and{R}(
                \in{SortK{}, R}(X0:SortK{}, kseq{}(K:SortKItem{}, KS:SortK{})),
            \and{R}(
                \in{SortK{}, R}(X1:SortK{}, TAIL:SortK{}),
                \top{R}()
            ))
        ),
        \equals{SortK{}, R}(
            append{}(X0:SortK{}, X1:SortK{}),
            \and{SortK{}}(
                kseq{}(K:SortKItem{}, append{}(KS:SortK{}, TAIL:SortK{})),
                \top{SortK{}}()
            )
        )
    ) []
endmodule
[]
module INJ
    symbol inj{From, To}(From) : To [sortInjection{}()]
    axiom {S1, S2, S3, R} \equals{S3, R}(inj{S2, S3}(inj{S1, S2}(T:S1)), inj{S1, S3}(T:S1)) [simplification{}()]
endmodule
[]
module K
    import KSEQ []
    import INJ []
    alias weakExistsFinally{A}(A) : A where weakExistsFinally{A}(@X:A) := @X:A []
    alias weakAlwaysFinally{A}(A) : A where weakAlwaysFinally{A}(@X:A) := @X:A []
    alias allPathGlobally{A}(A) : A where allPathGlobally{A}(@X:A) := @X:A []
endmodule
[]

module SIMPLE-TYPED-DYNAMIC

// imports
  import K []

// sorts
  sort SortStoreCellOpt{} []
  sort SortTCellFragment{} []
  sort SortControlCellFragment{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(97,3,97,29)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)")]
  sort SortIdCell{} []
  hooked-sort SortThreadCellMap{} [cellCollection{}(), concat{}(Lbl'Unds'ThreadCellMap'Unds'{}()), element{}(LblThreadCellMapItem{}()), hook{}("MAP.Map"), unit{}(Lbl'Stop'ThreadCellMap{}())]
  sort SortStoreCell{} []
  sort SortKCellOpt{} []
  sort SortEnvCell{} []
  sort SortThreadsCell{} []
  sort SortVal{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(45,3,45,13)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)")]
  sort SortThreadCell{} []
  sort SortControlCellOpt{} []
  sort SortIOInt{} []
  sort SortXstackCellOpt{} []
  sort SortVals{} []
  sort SortThreadsCellOpt{} []
  sort SortGeneratedTopCellFragment{} []
  sort SortIOFile{} []
  hooked-sort SortList{} [concat{}(Lbl'Unds'List'Unds'{}()), element{}(LblListItem{}()), hook{}("LIST.List"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(913,3,913,32)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), unit{}(Lbl'Stop'List{}())]
  sort SortNextLocCellOpt{} []
  sort SortTypes{} []
  sort SortKCell{} []
  sort SortInputCell{} []
  sort SortEnvCellOpt{} []
  sort SortGeneratedTopCell{} []
  sort SortGeneratedCounterCell{} []
  sort SortFstackCell{} []
  sort SortOutputCellOpt{} []
  sort SortParam{} []
  hooked-sort SortFloat{} [hasDomainValues{}(), hook{}("FLOAT.Float"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1470,3,1470,35)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)")]
  sort SortOutputCell{} []
  sort SortGenvCellOpt{} []
  sort SortBusyCell{} []
  sort SortTCellOpt{} []
  hooked-sort SortMap{} [concat{}(Lbl'Unds'Map'Unds'{}()), element{}(Lbl'UndsPipe'-'-GT-Unds'{}()), hook{}("MAP.Map"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(218,3,218,29)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), unit{}(Lbl'Stop'Map{}())]
  hooked-sort SortString{} [hasDomainValues{}(), hook{}("STRING.String"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1683,3,1683,38)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)")]
  sort SortIOString{} []
  sort SortId{} [hasDomainValues{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2235,3,2235,20)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), token{}()]
  sort SortBlock{} []
  sort SortGenvCell{} []
  sort SortGeneratedCounterCellOpt{} []
  sort SortThreadsCellFragment{} []
  sort SortIdCellOpt{} []
  sort SortKConfigVar{} [hasDomainValues{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(40,3,40,28)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/kast.md)"), token{}()]
  sort SortReturnTypeCellOpt{} []
  sort SortExp{} []
  sort SortTerminatedCellOpt{} []
  hooked-sort SortInt{} [hasDomainValues{}(), hook{}("INT.Int"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1189,3,1189,29)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)")]
  sort SortBusyCellOpt{} []
  sort SortIOError{} []
  sort SortInputCellOpt{} []
  hooked-sort SortSet{} [concat{}(Lbl'Unds'Set'Unds'{}()), element{}(LblSetItem{}()), hook{}("SET.Set"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(700,3,700,29)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), unit{}(Lbl'Stop'Set{}())]
  sort SortXstackCell{} []
  sort SortHoldsCellOpt{} []
  sort SortReturnTypeCell{} []
  sort SortNextLocCell{} []
  sort SortExps{} []
  sort SortFstackCellOpt{} []
  sort SortTerminatedCell{} []
  sort SortThreadCellFragment{} []
  sort SortType{} []
  sort SortKResult{} []
  sort SortControlCell{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(96,3,96,21)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)")]
  sort SortHoldsCell{} []
  sort SortStream{} []
  sort SortTCell{} []
  sort SortStmt{} []
  hooked-sort SortBool{} [hasDomainValues{}(), hook{}("BOOL.Bool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1068,3,1068,32)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)")]
  sort SortParams{} []

// symbols
  symbol Lbl'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(SortExp{}) : SortExp{} [constructor{}(), format{}("%c!%r %1"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(38,18,38,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), priorities{}(Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblspawn'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(), strict{}(""), terminals{}("10")]
  symbol Lbl'Hash'E2BIG{}() : SortIOError{} [constructor{}(), format{}("%c#E2BIG%r"), functional{}(), injective{}(), klabel{}("#E2BIG"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2386,22,2386,55)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EACCES{}() : SortIOError{} [constructor{}(), format{}("%c#EACCES%r"), functional{}(), injective{}(), klabel{}("#EACCES"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2387,22,2387,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EADDRINUSE{}() : SortIOError{} [constructor{}(), format{}("%c#EADDRINUSE%r"), functional{}(), injective{}(), klabel{}("#EADDRINUSE"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2436,22,2436,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EADDRNOTAVAIL{}() : SortIOError{} [constructor{}(), format{}("%c#EADDRNOTAVAIL%r"), functional{}(), injective{}(), klabel{}("#EADDRNOTAVAIL"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2437,22,2437,71)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EAFNOSUPPORT{}() : SortIOError{} [constructor{}(), format{}("%c#EAFNOSUPPORT%r"), functional{}(), injective{}(), klabel{}("#EAFNOSUPPORT"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2435,22,2435,69)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EAGAIN{}() : SortIOError{} [constructor{}(), format{}("%c#EAGAIN%r"), functional{}(), injective{}(), klabel{}("#EAGAIN"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2388,22,2388,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EALREADY{}() : SortIOError{} [constructor{}(), format{}("%c#EALREADY%r"), functional{}(), injective{}(), klabel{}("#EALREADY"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2425,22,2425,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EBADF{}() : SortIOError{} [constructor{}(), format{}("%c#EBADF%r"), functional{}(), injective{}(), klabel{}("#EBADF"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2389,22,2389,55)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EBUSY{}() : SortIOError{} [constructor{}(), format{}("%c#EBUSY%r"), functional{}(), injective{}(), klabel{}("#EBUSY"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2390,22,2390,55)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ECHILD{}() : SortIOError{} [constructor{}(), format{}("%c#ECHILD%r"), functional{}(), injective{}(), klabel{}("#ECHILD"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2391,22,2391,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ECONNABORTED{}() : SortIOError{} [constructor{}(), format{}("%c#ECONNABORTED%r"), functional{}(), injective{}(), klabel{}("#ECONNABORTED"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2441,22,2441,69)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ECONNREFUSED{}() : SortIOError{} [constructor{}(), format{}("%c#ECONNREFUSED%r"), functional{}(), injective{}(), klabel{}("#ECONNREFUSED"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2449,22,2449,69)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ECONNRESET{}() : SortIOError{} [constructor{}(), format{}("%c#ECONNRESET%r"), functional{}(), injective{}(), klabel{}("#ECONNRESET"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2442,22,2442,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EDEADLK{}() : SortIOError{} [constructor{}(), format{}("%c#EDEADLK%r"), functional{}(), injective{}(), klabel{}("#EDEADLK"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2392,22,2392,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EDESTADDRREQ{}() : SortIOError{} [constructor{}(), format{}("%c#EDESTADDRREQ%r"), functional{}(), injective{}(), klabel{}("#EDESTADDRREQ"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2427,22,2427,69)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EDOM{}() : SortIOError{} [constructor{}(), format{}("%c#EDOM%r"), functional{}(), injective{}(), klabel{}("#EDOM"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2393,22,2393,53)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EEXIST{}() : SortIOError{} [constructor{}(), format{}("%c#EEXIST%r"), functional{}(), injective{}(), klabel{}("#EEXIST"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2394,22,2394,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EFAULT{}() : SortIOError{} [constructor{}(), format{}("%c#EFAULT%r"), functional{}(), injective{}(), klabel{}("#EFAULT"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2395,22,2395,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EFBIG{}() : SortIOError{} [constructor{}(), format{}("%c#EFBIG%r"), functional{}(), injective{}(), klabel{}("#EFBIG"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2396,22,2396,55)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EHOSTDOWN{}() : SortIOError{} [constructor{}(), format{}("%c#EHOSTDOWN%r"), functional{}(), injective{}(), klabel{}("#EHOSTDOWN"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2450,22,2450,63)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EHOSTUNREACH{}() : SortIOError{} [constructor{}(), format{}("%c#EHOSTUNREACH%r"), functional{}(), injective{}(), klabel{}("#EHOSTUNREACH"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2451,22,2451,69)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EINPROGRESS{}() : SortIOError{} [constructor{}(), format{}("%c#EINPROGRESS%r"), functional{}(), injective{}(), klabel{}("#EINPROGRESS"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2424,22,2424,67)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EINTR{}() : SortIOError{} [constructor{}(), format{}("%c#EINTR%r"), functional{}(), injective{}(), klabel{}("#EINTR"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2397,22,2397,55)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EINVAL{}() : SortIOError{} [constructor{}(), format{}("%c#EINVAL%r"), functional{}(), injective{}(), klabel{}("#EINVAL"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2398,22,2398,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EIO{}() : SortIOError{} [constructor{}(), format{}("%c#EIO%r"), functional{}(), injective{}(), klabel{}("#EIO"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2399,22,2399,51)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EISCONN{}() : SortIOError{} [constructor{}(), format{}("%c#EISCONN%r"), functional{}(), injective{}(), klabel{}("#EISCONN"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2444,22,2444,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EISDIR{}() : SortIOError{} [constructor{}(), format{}("%c#EISDIR%r"), functional{}(), injective{}(), klabel{}("#EISDIR"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2400,22,2400,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ELOOP{}() : SortIOError{} [constructor{}(), format{}("%c#ELOOP%r"), functional{}(), injective{}(), klabel{}("#ELOOP"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2452,22,2452,55)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EMFILE{}() : SortIOError{} [constructor{}(), format{}("%c#EMFILE%r"), functional{}(), injective{}(), klabel{}("#EMFILE"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2401,22,2401,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EMLINK{}() : SortIOError{} [constructor{}(), format{}("%c#EMLINK%r"), functional{}(), injective{}(), klabel{}("#EMLINK"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2402,22,2402,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EMSGSIZE{}() : SortIOError{} [constructor{}(), format{}("%c#EMSGSIZE%r"), functional{}(), injective{}(), klabel{}("#EMSGSIZE"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2428,22,2428,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ENAMETOOLONG{}() : SortIOError{} [constructor{}(), format{}("%c#ENAMETOOLONG%r"), functional{}(), injective{}(), klabel{}("#ENAMETOOLONG"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2403,22,2403,69)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ENETDOWN{}() : SortIOError{} [constructor{}(), format{}("%c#ENETDOWN%r"), functional{}(), injective{}(), klabel{}("#ENETDOWN"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2438,22,2438,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ENETRESET{}() : SortIOError{} [constructor{}(), format{}("%c#ENETRESET%r"), functional{}(), injective{}(), klabel{}("#ENETRESET"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2440,22,2440,63)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ENETUNREACH{}() : SortIOError{} [constructor{}(), format{}("%c#ENETUNREACH%r"), functional{}(), injective{}(), klabel{}("#ENETUNREACH"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2439,22,2439,67)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ENFILE{}() : SortIOError{} [constructor{}(), format{}("%c#ENFILE%r"), functional{}(), injective{}(), klabel{}("#ENFILE"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2404,22,2404,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ENOBUFS{}() : SortIOError{} [constructor{}(), format{}("%c#ENOBUFS%r"), functional{}(), injective{}(), klabel{}("#ENOBUFS"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2443,22,2443,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ENODEV{}() : SortIOError{} [constructor{}(), format{}("%c#ENODEV%r"), functional{}(), injective{}(), klabel{}("#ENODEV"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2405,22,2405,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ENOENT{}() : SortIOError{} [constructor{}(), format{}("%c#ENOENT%r"), functional{}(), injective{}(), klabel{}("#ENOENT"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2406,22,2406,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ENOEXEC{}() : SortIOError{} [constructor{}(), format{}("%c#ENOEXEC%r"), functional{}(), injective{}(), klabel{}("#ENOEXEC"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2407,22,2407,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ENOLCK{}() : SortIOError{} [constructor{}(), format{}("%c#ENOLCK%r"), functional{}(), injective{}(), klabel{}("#ENOLCK"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2408,22,2408,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ENOMEM{}() : SortIOError{} [constructor{}(), format{}("%c#ENOMEM%r"), functional{}(), injective{}(), klabel{}("#ENOMEM"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2409,22,2409,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ENOPROTOOPT{}() : SortIOError{} [constructor{}(), format{}("%c#ENOPROTOOPT%r"), functional{}(), injective{}(), klabel{}("#ENOPROTOOPT"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2430,22,2430,67)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ENOSPC{}() : SortIOError{} [constructor{}(), format{}("%c#ENOSPC%r"), functional{}(), injective{}(), klabel{}("#ENOSPC"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2410,22,2410,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ENOSYS{}() : SortIOError{} [constructor{}(), format{}("%c#ENOSYS%r"), functional{}(), injective{}(), klabel{}("#ENOSYS"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2411,22,2411,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ENOTCONN{}() : SortIOError{} [constructor{}(), format{}("%c#ENOTCONN%r"), functional{}(), injective{}(), klabel{}("#ENOTCONN"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2445,22,2445,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ENOTDIR{}() : SortIOError{} [constructor{}(), format{}("%c#ENOTDIR%r"), functional{}(), injective{}(), klabel{}("#ENOTDIR"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2412,22,2412,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ENOTEMPTY{}() : SortIOError{} [constructor{}(), format{}("%c#ENOTEMPTY%r"), functional{}(), injective{}(), klabel{}("#ENOTEMPTY"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2413,22,2413,63)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ENOTSOCK{}() : SortIOError{} [constructor{}(), format{}("%c#ENOTSOCK%r"), functional{}(), injective{}(), klabel{}("#ENOTSOCK"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2426,22,2426,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ENOTTY{}() : SortIOError{} [constructor{}(), format{}("%c#ENOTTY%r"), functional{}(), injective{}(), klabel{}("#ENOTTY"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2414,22,2414,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ENXIO{}() : SortIOError{} [constructor{}(), format{}("%c#ENXIO%r"), functional{}(), injective{}(), klabel{}("#ENXIO"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2415,22,2415,55)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EOF{}() : SortIOError{} [constructor{}(), format{}("%c#EOF%r"), functional{}(), injective{}(), klabel{}("#EOF"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2385,22,2385,51)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EOPNOTSUPP{}() : SortIOError{} [constructor{}(), format{}("%c#EOPNOTSUPP%r"), functional{}(), injective{}(), klabel{}("#EOPNOTSUPP"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2433,22,2433,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EOVERFLOW{}() : SortIOError{} [constructor{}(), format{}("%c#EOVERFLOW%r"), functional{}(), injective{}(), klabel{}("#EOVERFLOW"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2453,22,2453,63)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EPERM{}() : SortIOError{} [constructor{}(), format{}("%c#EPERM%r"), functional{}(), injective{}(), klabel{}("#EPERM"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2416,22,2416,55)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EPFNOSUPPORT{}() : SortIOError{} [constructor{}(), format{}("%c#EPFNOSUPPORT%r"), functional{}(), injective{}(), klabel{}("#EPFNOSUPPORT"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2434,22,2434,69)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EPIPE{}() : SortIOError{} [constructor{}(), format{}("%c#EPIPE%r"), functional{}(), injective{}(), klabel{}("#EPIPE"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2417,22,2417,55)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EPROTONOSUPPORT{}() : SortIOError{} [constructor{}(), format{}("%c#EPROTONOSUPPORT%r"), functional{}(), injective{}(), klabel{}("#EPROTONOSUPPORT"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2431,22,2431,75)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EPROTOTYPE{}() : SortIOError{} [constructor{}(), format{}("%c#EPROTOTYPE%r"), functional{}(), injective{}(), klabel{}("#EPROTOTYPE"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2429,22,2429,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ERANGE{}() : SortIOError{} [constructor{}(), format{}("%c#ERANGE%r"), functional{}(), injective{}(), klabel{}("#ERANGE"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2418,22,2418,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EROFS{}() : SortIOError{} [constructor{}(), format{}("%c#EROFS%r"), functional{}(), injective{}(), klabel{}("#EROFS"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2419,22,2419,55)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ESHUTDOWN{}() : SortIOError{} [constructor{}(), format{}("%c#ESHUTDOWN%r"), functional{}(), injective{}(), klabel{}("#ESHUTDOWN"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2446,22,2446,63)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ESOCKTNOSUPPORT{}() : SortIOError{} [constructor{}(), format{}("%c#ESOCKTNOSUPPORT%r"), functional{}(), injective{}(), klabel{}("#ESOCKTNOSUPPORT"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2432,22,2432,75)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ESPIPE{}() : SortIOError{} [constructor{}(), format{}("%c#ESPIPE%r"), functional{}(), injective{}(), klabel{}("#ESPIPE"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2420,22,2420,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ESRCH{}() : SortIOError{} [constructor{}(), format{}("%c#ESRCH%r"), functional{}(), injective{}(), klabel{}("#ESRCH"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2421,22,2421,55)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ETIMEDOUT{}() : SortIOError{} [constructor{}(), format{}("%c#ETIMEDOUT%r"), functional{}(), injective{}(), klabel{}("#ETIMEDOUT"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2448,22,2448,63)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'ETOOMANYREFS{}() : SortIOError{} [constructor{}(), format{}("%c#ETOOMANYREFS%r"), functional{}(), injective{}(), klabel{}("#ETOOMANYREFS"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2447,22,2447,69)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EWOULDBLOCK{}() : SortIOError{} [constructor{}(), format{}("%c#EWOULDBLOCK%r"), functional{}(), injective{}(), klabel{}("#EWOULDBLOCK"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2423,22,2423,67)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  symbol Lbl'Hash'EXDEV{}() : SortIOError{} [constructor{}(), format{}("%c#EXDEV%r"), functional{}(), injective{}(), klabel{}("#EXDEV"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2422,22,2422,55)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1")]
  hooked-symbol Lbl'Hash'accept'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'Int{}(SortInt{}) : SortIOInt{} [format{}("%c#accept%r %c(... %r fd: %1 %c)%r"), function{}(), hook{}("IO.accept"), impure{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2551,20,2551,81)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  hooked-symbol Lbl'Hash'argv'LParRParUnds'K-REFLECTION'Unds'List{}() : SortList{} [format{}("%c#argv%r %c(%r %c)%r"), function{}(), hook{}("KREFLECTION.argv"), klabel{}("#argv"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2343,19,2343,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("111")]
  symbol Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(SortK{}) : SortStream{} [constructor{}(), format{}("%c#buffer%r %c(%r %1 %c)%r"), functional{}(), injective{}(), klabel{}("#buffer"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2655,21,2655,31)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  hooked-symbol Lbl'Hash'close'LParUndsRParUnds'K-IO'Unds'K'Unds'Int{}(SortInt{}) : SortK{} [format{}("%c#close%r %c(... %r fd: %1 %c)%r"), function{}(), hook{}("IO.close"), impure{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2525,16,2525,75)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  hooked-symbol Lbl'Hash'configuration'Unds'K-REFLECTION'Unds'K{}() : SortK{} [format{}("%c#configuration%r"), function{}(), hook{}("KREFLECTION.configuration"), impure{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2332,16,2332,84)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1")]
  symbol Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}() : SortKItem{} [constructor{}(), format{}("%c#freezer!__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp0_%r %c(%r %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("111")]
  symbol Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}() : SortKItem{} [constructor{}(), format{}("%c#freezer++__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp0_%r %c(%r %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("111")]
  symbol Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}() : SortKItem{} [constructor{}(), format{}("%c#freezer-__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp0_%r %c(%r %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("111")]
  symbol Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_!=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp0_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_!=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_%%__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp0_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_%%__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_&&__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp0_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_(_)_SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exps0_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_(_)_SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exps1_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_*__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp0_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_*__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_+__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp0_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_+__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_,__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exps_Exp_Exps0_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_,__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exps_Exp_Exps1_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_-__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp0_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_-__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_/__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp0_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_/__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}() : SortKItem{} [constructor{}(), format{}("%c#freezer_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp0_%r %c(%r %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("111")]
  symbol Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_<=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp0_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_<=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_<__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp0_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_<__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_==__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp0_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_==__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp0_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_>=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp0_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_>=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_>__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp0_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_>__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_[_]_SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exps0_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_[_]_SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exps1_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(SortK{}, SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer__;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Type_Exps2_%r %c(%r %1 %c,%r %2 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("110101")]
  symbol Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezer_||__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp0_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}() : SortKItem{} [constructor{}(), format{}("%c#freezeracquire_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp0_%r %c(%r %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("111")]
  symbol Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(SortK{}, SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezerif(_)_else__SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp_Block_Block0_%r %c(%r %1 %c,%r %2 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("110101")]
  symbol Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}() : SortKItem{} [constructor{}(), format{}("%c#freezerjoin_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp0_%r %c(%r %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("111")]
  symbol Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K0'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezerlvalue(_)_SIMPLE-TYPED-DYNAMIC_Exp_K0_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K1'Unds'{}(SortK{}) : SortKItem{} [constructor{}(), format{}("%c#freezerlvalue(_)_SIMPLE-TYPED-DYNAMIC_Exp_K1_%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}() : SortKItem{} [constructor{}(), format{}("%c#freezerprint(_);_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exps0_%r %c(%r %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("111")]
  symbol Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}() : SortKItem{} [constructor{}(), format{}("%c#freezerrelease_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp0_%r %c(%r %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("111")]
  symbol Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}() : SortKItem{} [constructor{}(), format{}("%c#freezerrendezvous_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp0_%r %c(%r %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("111")]
  symbol Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}() : SortKItem{} [constructor{}(), format{}("%c#freezerreturn_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp0_%r %c(%r %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("111")]
  symbol Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}() : SortKItem{} [constructor{}(), format{}("%c#freezersizeOf(_)_SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp0_%r %c(%r %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("111")]
  symbol Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}() : SortKItem{} [constructor{}(), format{}("%c#freezerthrow_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp0_%r %c(%r %c)%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("111")]
  hooked-symbol Lbl'Hash'fresh'LParUndsRParUnds'K-REFLECTION'Unds'KItem'Unds'String{}(SortString{}) : SortKItem{} [format{}("%c#fresh%r %c(%r %1 %c)%r"), function{}(), hook{}("KREFLECTION.fresh"), impure{}(), klabel{}("#fresh"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2334,20,2334,80)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  hooked-symbol Lbl'Hash'getc'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'Int{}(SortInt{}) : SortIOInt{} [format{}("%c#getc%r %c(... %r fd: %1 %c)%r"), function{}(), hook{}("IO.getc"), impure{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2506,20,2506,89)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  hooked-symbol Lbl'Hash'getenv'LParUndsRParUnds'K-REFLECTION'Unds'K'Unds'String{}(SortString{}) : SortK{} [format{}("%c#getenv%r %c(%r %1 %c)%r"), function{}(), hook{}("KREFLECTION.getenv"), impure{}(), klabel{}("#getenv"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2337,16,2337,76)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  hooked-symbol Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortSort}(SortBool{}, SortSort, SortSort) : SortSort [format{}("%c#if%r %1 %c#then%r %2 %c#else%r %3 %c#fi%r"), function{}(), functional{}(), hook{}("KEQUAL.ite"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2277,26,2277,121)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), smt-hook{}("ite"), terminals{}("1010101"), total{}()]
  symbol Lbl'Hash'istream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(SortInt{}) : SortStream{} [constructor{}(), format{}("%c#istream%r %c(%r %1 %c)%r"), functional{}(), injective{}(), klabel{}("#istream"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2656,21,2656,34)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  hooked-symbol Lbl'Hash'kompiledDirectory'LParRParUnds'K-REFLECTION'Unds'String{}() : SortString{} [format{}("%c#kompiledDirectory%r %c(%r %c)%r"), function{}(), hook{}("KREFLECTION.kompiledDir"), klabel{}("#kompiledDirectory"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2339,21,2339,83)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("111")]
  hooked-symbol Lbl'Hash'lock'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortK{} [format{}("%c#lock%r %c(... %r fd: %1 %c,%r endIndex: %2 %c)%r"), function{}(), hook{}("IO.lock"), impure{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2537,16,2537,91)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101")]
  hooked-symbol Lbl'Hash'log{}(SortString{}) : SortK{} [format{}("%c#log%r %c(... %r value: %1 %c)%r"), function{}(), functional{}(), hook{}("IO.logString"), impure{}(), klabel{}("#log"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2631,16,2631,102)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), returnsUnit{}(), right{}(), symbol'Kywd'{}(), terminals{}("1101"), total{}()]
  hooked-symbol Lbl'Hash'logToFile{}(SortString{}, SortString{}) : SortK{} [format{}("%c#logToFile%r %c(... %r name: %1 %c,%r value: %2 %c)%r"), function{}(), functional{}(), hook{}("IO.log"), impure{}(), klabel{}("#logToFile"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2622,16,2622,116)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), returnsUnit{}(), right{}(), symbol'Kywd'{}(), terminals{}("110101"), total{}()]
  hooked-symbol Lbl'Hash'mkstemp'LParUndsRParUnds'K-IO'Unds'IOFile'Unds'String{}(SortString{}) : SortIOFile{} [format{}("%c#mkstemp%r %c(... %r template: %1 %c)%r"), function{}(), hook{}("IO.mkstemp"), impure{}(), klabel{}("#mkstemp"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2599,21,2599,84)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'noParse{}(SortString{}) : SortIOError{} [constructor{}(), format{}("%c#noParse%r %c(%r %1 %c)%r"), functional{}(), injective{}(), klabel{}("#noParse"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2348,22,2348,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1101")]
  symbol Lbl'Hash'open'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'String{}(SortString{}) : SortIOInt{} [format{}("%c#open%r %c(... %r path: %1 %c)%r"), function{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2476,20,2476,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  hooked-symbol Lbl'Hash'open'LParUndsCommUndsRParUnds'K-IO'Unds'IOInt'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortIOInt{} [format{}("%c#open%r %c(... %r path: %1 %c,%r mode: %2 %c)%r"), function{}(), hook{}("IO.open"), impure{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2477,18,2477,97)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101")]
  symbol Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(SortInt{}) : SortStream{} [constructor{}(), format{}("%c#ostream%r %c(%r %1 %c)%r"), functional{}(), injective{}(), klabel{}("#ostream"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2658,21,2658,34)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'parseInput'LParUndsCommUndsRParUnds'K-IO'Unds'Stream'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortStream{} [constructor{}(), format{}("%c#parseInput%r %c(%r %1 %c,%r %2 %c)%r"), functional{}(), injective{}(), klabel{}("#parseInput"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2657,21,2657,48)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101")]
  hooked-symbol Lbl'Hash'parseKORE'LParUndsRParUnds'K-REFLECTION'Unds'Sort'Unds'String{SortSort}(SortString{}) : SortSort [format{}("%c#parseKORE%r %c(%r %1 %c)%r"), function{}(), hook{}("KREFLECTION.parseKORE"), klabel{}("#parseKORE"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2346,26,2346,84)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  hooked-symbol Lbl'Hash'putc'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortK{} [format{}("%c#putc%r %c(... %r fd: %1 %c,%r value: %2 %c)%r"), function{}(), hook{}("IO.putc"), impure{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2516,16,2516,93)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101")]
  hooked-symbol Lbl'Hash'read'LParUndsCommUndsRParUnds'K-IO'Unds'IOString'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortIOString{} [format{}("%c#read%r %c(... %r fd: %1 %c,%r length: %2 %c)%r"), function{}(), hook{}("IO.read"), impure{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2507,23,2507,99)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101")]
  hooked-symbol Lbl'Hash'remove'LParUndsRParUnds'K-IO'Unds'K'Unds'String{}(SortString{}) : SortK{} [format{}("%c#remove%r %c(... %r path: %1 %c)%r"), function{}(), functional{}(), hook{}("IO.remove"), impure{}(), klabel{}("#remove"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2610,16,2610,80)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  hooked-symbol Lbl'Hash'seek'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortK{} [format{}("%c#seek%r %c(... %r fd: %1 %c,%r index: %2 %c)%r"), function{}(), hook{}("IO.seek"), impure{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2492,16,2492,88)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101")]
  hooked-symbol Lbl'Hash'seekEnd'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortK{} [format{}("%c#seekEnd%r %c(... %r fd: %1 %c,%r fromEnd: %2 %c)%r"), function{}(), hook{}("IO.seekEnd"), impure{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2493,16,2493,96)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101")]
  hooked-symbol Lbl'Hash'shutdownWrite'LParUndsRParUnds'K-IO'Unds'K'Unds'Int{}(SortInt{}) : SortK{} [format{}("%c#shutdownWrite%r %c(... %r fd: %1 %c)%r"), function{}(), hook{}("IO.shutdownWrite"), impure{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2552,16,2552,91)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  hooked-symbol Lbl'Hash'sort'LParUndsRParUnds'K-REFLECTION'Unds'String'Unds'K{}(SortK{}) : SortString{} [format{}("%c#sort%r %c(%r %1 %c)%r"), function{}(), hook{}("KREFLECTION.sort"), klabel{}("#sort"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2333,21,2333,64)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'stderr'Unds'K-IO'Unds'Int{}() : SortInt{} [format{}("%c#stderr%r"), function{}(), functional{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2572,19,2572,46)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1"), total{}()]
  symbol Lbl'Hash'stdin'Unds'K-IO'Unds'Int{}() : SortInt{} [format{}("%c#stdin%r"), function{}(), functional{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2570,18,2570,46)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1"), total{}()]
  symbol Lbl'Hash'stdout'Unds'K-IO'Unds'Int{}() : SortInt{} [format{}("%c#stdout%r"), function{}(), functional{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2571,19,2571,46)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1"), total{}()]
  hooked-symbol Lbl'Hash'system'LParUndsRParUnds'K-IO'Unds'KItem'Unds'String{}(SortString{}) : SortKItem{} [format{}("%c#system%r %c(%r %1 %c)%r"), function{}(), hook{}("IO.system"), impure{}(), klabel{}("#system"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2588,20,2588,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'systemResult{}(SortInt{}, SortString{}, SortString{}) : SortKItem{} [constructor{}(), format{}("%c#systemResult%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), functional{}(), injective{}(), klabel{}("#systemResult"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2589,20,2589,143)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("11010101")]
  hooked-symbol Lbl'Hash'tell'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'Int{}(SortInt{}) : SortIOInt{} [format{}("%c#tell%r %c(... %r fd: %1 %c)%r"), function{}(), hook{}("IO.tell"), impure{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2491,20,2491,77)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbl'Hash'tempFile{}(SortString{}, SortInt{}) : SortIOFile{} [constructor{}(), format{}("%c#tempFile%r %c(... %r path: %1 %c,%r fd: %2 %c)%r"), functional{}(), injective{}(), klabel{}("#tempFile"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2601,21,2601,93)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("110101")]
  hooked-symbol Lbl'Hash'time'LParRParUnds'K-IO'Unds'Int{}() : SortInt{} [format{}("%c#time%r %c(%r %c)%r"), function{}(), hook{}("IO.time"), impure{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2561,18,2561,67)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("111")]
  hooked-symbol Lbl'Hash'trace{}(SortKItem{}) : SortK{} [format{}("%c#trace%r %c(... %r value: %1 %c)%r"), function{}(), functional{}(), hook{}("IO.traceTerm"), impure{}(), klabel{}("#trace"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2642,16,2642,103)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), returnsUnit{}(), right{}(), symbol'Kywd'{}(), terminals{}("1101"), total{}()]
  hooked-symbol Lbl'Hash'traceK{}(SortK{}) : SortK{} [format{}("%c#traceK%r %c(... %r value: %1 %c)%r"), function{}(), functional{}(), hook{}("IO.traceTerm"), impure{}(), klabel{}("#traceK"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2643,16,2643,103)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), returnsUnit{}(), right{}(), symbol'Kywd'{}(), terminals{}("1101"), total{}()]
  symbol Lbl'Hash'unknownIOError{}(SortInt{}) : SortIOError{} [constructor{}(), format{}("%c#unknownIOError%r %c(... %r errno: %1 %c)%r"), functional{}(), injective{}(), klabel{}("#unknownIOError"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2385,54,2385,90)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1101")]
  hooked-symbol Lbl'Hash'unlock'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortK{} [format{}("%c#unlock%r %c(... %r fd: %1 %c,%r endIndex: %2 %c)%r"), function{}(), hook{}("IO.unlock"), impure{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2538,16,2538,95)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101")]
  hooked-symbol Lbl'Hash'unparseKORE'LParUndsRParUnds'K-REFLECTION'Unds'String'Unds'Sort{SortSort}(SortSort) : SortString{} [format{}("%c#unparseKORE%r %c(%r %1 %c)%r"), function{}(), hook{}("KREFLECTION.printKORE"), klabel{}("#unparseKORE"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2347,28,2347,86)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  hooked-symbol Lbl'Hash'write'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'String{}(SortInt{}, SortString{}) : SortK{} [format{}("%c#write%r %c(... %r fd: %1 %c,%r value: %2 %c)%r"), function{}(), hook{}("IO.write"), impure{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2517,16,2517,93)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101")]
  symbol Lbl'LParUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type'Unds'Map'Unds'K'Unds'ControlCellFragment{}(SortType{}, SortMap{}, SortK{}, SortControlCellFragment{}) : SortKItem{} [constructor{}(), format{}("%c(%r %1 %c,%r %2 %c,%r %3 %c,%r %4 %c)%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(201,20,201,52)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), priorities{}(), right{}(), terminals{}("101010101")]
  symbol Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Param'Unds'Stmt'Unds'K'Unds'Map'Unds'ControlCellFragment{}(SortParam{}, SortStmt{}, SortK{}, SortMap{}, SortControlCellFragment{}) : SortKItem{} [constructor{}(), format{}("%c(%r %1 %c,%r %2 %c,%r %3 %c,%r %4 %c,%r %5 %c)%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(247,20,247,58)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), priorities{}(), right{}(), terminals{}("10101010101")]
  symbol Lbl'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(SortExp{}) : SortExp{} [constructor{}(), format{}("%c++%r %1"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,18,18,26)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), priorities{}(Lbl'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(),Lblread'LParRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp{}(),Lbl'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),LblsizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(),Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblspawn'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}()), right{}(), terminals{}("10")]
  symbol Lbl-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(SortExp{}) : SortExp{} [constructor{}(), format{}("%c-%r %1"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(21,18,21,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), priorities{}(Lbl'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblspawn'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}()), right{}(), strict{}(""), terminals{}("10")]
  hooked-symbol Lbl'Stop'List{}() : SortList{} [format{}("%c.List%r"), function{}(), functional{}(), hook{}("LIST.unit"), klabel{}(".List"), latex{}("\\dotCt{List}"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(937,19,937,142)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), smtlib{}("smt_seq_nil"), symbol'Kywd'{}(), terminals{}("1"), total{}()]
  symbol Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps'QuotRBraUnds'Exps{}() : SortExps{} [anywhere{}(), format{}("%c.Exps%r"), functional{}(), injective{}(), klabel{}(".List{\"exps\"}"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(44,19,44,64)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), priorities{}(), right{}(), terminals{}("1"), userList{}("*")]
  symbol Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Params'Unds'Param'Unds'Params'QuotRBraUnds'Params{}() : SortParams{} [constructor{}(), format{}("%c.Params%r"), functional{}(), injective{}(), klabel{}(".List{\"_,__SIMPLE-TYPED-DYNAMIC-SYNTAX\"}"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(11,21,11,36)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), priorities{}(), right{}(), terminals{}("1"), userList{}("*")]
  symbol Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}() : SortTypes{} [constructor{}(), format{}("%c.Types%r"), functional{}(), injective{}(), klabel{}(".List{\"exps\"}"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(9,20,9,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), priorities{}(), right{}(), terminals{}("1"), userList{}("*")]
  symbol Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}() : SortVals{} [constructor{}(), format{}("%c.Vals%r"), functional{}(), injective{}(), klabel{}(".List{\"exps\"}"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(46,19,46,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), priorities{}(), right{}(), terminals{}("1"), userList{}("*")]
  hooked-symbol Lbl'Stop'Map{}() : SortMap{} [format{}("%c.Map%r"), function{}(), functional{}(), hook{}("MAP.unit"), klabel{}(".Map"), latex{}("\\dotCt{Map}"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(248,18,248,124)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1"), total{}()]
  hooked-symbol Lbl'Stop'Set{}() : SortSet{} [format{}("%c.Set%r"), function{}(), functional{}(), hook{}("SET.unit"), klabel{}(".Set"), latex{}("\\dotCt{Set}"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(729,18,729,118)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1"), total{}()]
  hooked-symbol Lbl'Stop'ThreadCellMap{}() : SortThreadCellMap{} [format{}("%c.ThreadCellMap%r"), function{}(), hook{}("MAP.unit"), left{}(), priorities{}(), right{}(), terminals{}("1")]
  symbol Lbl'-LT-'T'-GT-'{}(SortThreadsCell{}, SortGenvCell{}, SortStoreCell{}, SortBusyCell{}, SortTerminatedCell{}, SortInputCell{}, SortOutputCell{}, SortNextLocCell{}) : SortTCell{} [cell{}(), cellName{}("T"), color{}("red"), colors{}("red,red"), constructor{}(), format{}("%c<T>%r%i%n%1%n%2%n%3%n%4%n%5%n%6%n%7%n%8%d%n%c</T>%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(99,17,123,21)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), priorities{}(), right{}(), terminals{}("1000000001")]
  symbol Lbl'-LT-'T'-GT-'-fragment{}(SortThreadsCellOpt{}, SortGenvCellOpt{}, SortStoreCellOpt{}, SortBusyCellOpt{}, SortTerminatedCellOpt{}, SortInputCellOpt{}, SortOutputCellOpt{}, SortNextLocCellOpt{}) : SortTCellFragment{} [cellFragment{}("TCell"), constructor{}(), format{}("%c<T>-fragment%r %1 %2 %3 %4 %5 %6 %7 %8 %c</T>-fragment%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1000000001")]
  symbol Lbl'-LT-'busy'-GT-'{}(SortSet{}) : SortBusyCell{} [cell{}(), cellName{}("busy"), color{}("cyan"), colors{}("cyan,cyan"), constructor{}(), format{}("%c<busy>%r%i%n%1%d%n%c</busy>%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(118,19,118,49)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), priorities{}(), right{}(), terminals{}("101")]
  symbol Lbl'-LT-'control'-GT-'{}(SortFstackCell{}, SortXstackCell{}, SortReturnTypeCell{}) : SortControlCell{} [cell{}(), cellName{}("control"), color{}("cyan"), colors{}("cyan,cyan"), constructor{}(), format{}("%c<control>%r%i%n%1%n%2%n%3%d%n%c</control>%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(105,23,109,34)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), priorities{}(), right{}(), terminals{}("10001")]
  symbol Lbl'-LT-'control'-GT-'-fragment{}(SortFstackCellOpt{}, SortXstackCellOpt{}, SortReturnTypeCellOpt{}) : SortControlCellFragment{} [cellFragment{}("ControlCell"), constructor{}(), format{}("%c<control>-fragment%r %1 %2 %3 %c</control>-fragment%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("10001")]
  symbol Lbl'-LT-'env'-GT-'{}(SortMap{}) : SortEnvCell{} [cell{}(), cellName{}("env"), color{}("violet"), colors{}("violet,violet"), constructor{}(), format{}("%c<env>%r%i%n%1%d%n%c</env>%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(111,23,111,55)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), priorities{}(), right{}(), terminals{}("101")]
  symbol Lbl'-LT-'fstack'-GT-'{}(SortList{}) : SortFstackCell{} [cell{}(), cellName{}("fstack"), color{}("blue"), colors{}("blue,blue"), constructor{}(), format{}("%c<fstack>%r%i%n%1%d%n%c</fstack>%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(106,25,106,62)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), priorities{}(), right{}(), terminals{}("101")]
  symbol Lbl'-LT-'generatedCounter'-GT-'{}(SortInt{}) : SortGeneratedCounterCell{} [cell{}(), cellName{}("generatedCounter"), constructor{}(), format{}("%c<generatedCounter>%r%i%n%1%d%n%c</generatedCounter>%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("101")]
  symbol Lbl'-LT-'generatedTop'-GT-'{}(SortTCell{}, SortGeneratedCounterCell{}) : SortGeneratedTopCell{} [cell{}(), cellName{}("generatedTop"), constructor{}(), format{}("%1"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1001")]
  symbol Lbl'-LT-'generatedTop'-GT-'-fragment{}(SortTCellOpt{}, SortGeneratedCounterCellOpt{}) : SortGeneratedTopCellFragment{} [cellFragment{}("GeneratedTopCell"), constructor{}(), format{}("%c<generatedTop>-fragment%r %1 %2 %c</generatedTop>-fragment%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1001")]
  symbol Lbl'-LT-'genv'-GT-'{}(SortMap{}) : SortGenvCell{} [cell{}(), cellName{}("genv"), color{}("pink"), colors{}("pink,pink"), constructor{}(), format{}("%c<genv>%r%i%n%1%d%n%c</genv>%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(116,19,116,51)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), priorities{}(), right{}(), terminals{}("101")]
  symbol Lbl'-LT-'holds'-GT-'{}(SortMap{}) : SortHoldsCell{} [cell{}(), cellName{}("holds"), color{}("Orchid"), colors{}("Orchid,Orchid"), constructor{}(), format{}("%c<holds>%r%i%n%1%d%n%c</holds>%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(112,23,112,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), priorities{}(), right{}(), terminals{}("101")]
  symbol Lbl'-LT-'id'-GT-'{}(SortInt{}) : SortIdCell{} [cell{}(), cellName{}("id"), color{}("pink"), colors{}("pink,pink"), constructor{}(), format{}("%c<id>%r%i%n%1%d%n%c</id>%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(102,23,102,48)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), priorities{}(), right{}(), terminals{}("101")]
  symbol Lbl'-LT-'input'-GT-'{}(SortList{}) : SortInputCell{} [cell{}(), cellName{}("input"), color{}("magenta"), colors{}("magenta,magenta"), constructor{}(), format{}("%c<input>%r%i%n%1%d%n%c</input>%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(120,19,120,72)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), priorities{}(), right{}(), stream{}("stdin"), terminals{}("101")]
  symbol Lbl'-LT-'k'-GT-'{}(SortK{}) : SortKCell{} [cell{}(), cellName{}("k"), color{}("green"), colors{}("green,green"), constructor{}(), format{}("%c<k>%r%i%n%1%d%n%c</k>%r"), functional{}(), injective{}(), left{}(), maincell{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(103,23,103,68)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), priorities{}(), right{}(), terminals{}("101")]
  symbol Lbl'-LT-'nextLoc'-GT-'{}(SortInt{}) : SortNextLocCell{} [cell{}(), cellName{}("nextLoc"), color{}("gray"), colors{}("gray,gray"), constructor{}(), format{}("%c<nextLoc>%r%i%n%1%d%n%c</nextLoc>%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(122,19,122,54)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), priorities{}(), right{}(), terminals{}("101")]
  symbol Lbl'-LT-'output'-GT-'{}(SortList{}) : SortOutputCell{} [cell{}(), cellName{}("output"), color{}("brown"), colors{}("brown,brown"), constructor{}(), format{}("%c<output>%r%i%n%1%d%n%c</output>%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(121,19,121,73)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), priorities{}(), right{}(), stream{}("stdout"), terminals{}("101")]
  symbol Lbl'-LT-'returnType'-GT-'{}(SortType{}) : SortReturnTypeCell{} [cell{}(), cellName{}("returnType"), color{}("LimeGreen"), colors{}("LimeGreen,LimeGreen"), constructor{}(), format{}("%c<returnType>%r%i%n%1%d%n%c</returnType>%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(108,25,108,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), priorities{}(), right{}(), terminals{}("101")]
  symbol Lbl'-LT-'store'-GT-'{}(SortMap{}) : SortStoreCell{} [cell{}(), cellName{}("store"), color{}("LimeGreen"), colors{}("LimeGreen,LimeGreen"), constructor{}(), format{}("%c<store>%r%i%n%1%d%n%c</store>%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(117,19,117,58)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), priorities{}(), right{}(), terminals{}("101")]
  symbol Lbl'-LT-'terminated'-GT-'{}(SortSet{}) : SortTerminatedCell{} [cell{}(), cellName{}("terminated"), color{}("red"), colors{}("red,red"), constructor{}(), format{}("%c<terminated>%r%i%n%1%d%n%c</terminated>%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(119,19,119,62)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), priorities{}(), right{}(), terminals{}("101")]
  symbol Lbl'-LT-'thread'-GT-'{}(SortIdCell{}, SortKCell{}, SortControlCell{}, SortEnvCell{}, SortHoldsCell{}) : SortThreadCell{} [cell{}(), cellName{}("thread"), color{}("yellow"), colors{}("yellow,yellow"), constructor{}(), format{}("%c<thread>%r%i%n%1%n%2%n%3%n%4%n%5%d%n%c</thread>%r"), functional{}(), injective{}(), left{}(), multiplicity{}("*"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(101,21,113,30)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), priorities{}(), right{}(), terminals{}("1000001"), type{}("Map")]
  symbol Lbl'-LT-'thread'-GT-'-fragment{}(SortIdCellOpt{}, SortKCellOpt{}, SortControlCellOpt{}, SortEnvCellOpt{}, SortHoldsCellOpt{}) : SortThreadCellFragment{} [cellFragment{}("ThreadCell"), constructor{}(), format{}("%c<thread>-fragment%r %1 %2 %3 %4 %5 %c</thread>-fragment%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1000001")]
  symbol Lbl'-LT-'threads'-GT-'{}(SortThreadCellMap{}) : SortThreadsCell{} [cell{}(), cellName{}("threads"), color{}("orange"), colors{}("orange,orange"), constructor{}(), format{}("%c<threads>%r%i%n%1%d%n%c</threads>%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(100,19,114,29)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), priorities{}(), right{}(), terminals{}("101")]
  symbol Lbl'-LT-'threads'-GT-'-fragment{}(SortThreadCellMap{}) : SortThreadsCellFragment{} [cellFragment{}("ThreadsCell"), constructor{}(), format{}("%c<threads>-fragment%r %1 %c</threads>-fragment%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("101")]
  symbol Lbl'-LT-'xstack'-GT-'{}(SortList{}) : SortXstackCell{} [cell{}(), cellName{}("xstack"), color{}("purple"), colors{}("purple,purple"), constructor{}(), format{}("%c<xstack>%r%i%n%1%d%n%c</xstack>%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(107,25,107,64)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), priorities{}(), right{}(), terminals{}("101")]
  hooked-symbol LblBase2String'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortString{} [format{}("%cBase2String%r %c(%r %1 %c,%r %2 %c)%r"), function{}(), hook{}("STRING.base2string"), klabel{}("Base2String"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1812,21,1812,99)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101")]
  symbol LblBool2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Bool{}(SortBool{}) : SortString{} [format{}("%cBool2String%r %c(%r %1 %c)%r"), function{}(), functional{}(), klabel{}("Bool2String"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1762,21,1762,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  hooked-symbol LblFloat2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Float{}(SortFloat{}) : SortString{} [format{}("%cFloat2String%r %c(%r %1 %c)%r"), function{}(), functional{}(), hook{}("STRING.float2string"), klabel{}("Float2String"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1789,21,1789,101)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  hooked-symbol LblFloat2String'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'Float'Unds'String{}(SortFloat{}, SortString{}) : SortString{} [format{}("%cFloat2String%r %c(%r %1 %c,%r %2 %c)%r"), function{}(), hook{}("STRING.floatFormat"), klabel{}("FloatFormat"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1790,21,1790,122)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101")]
  hooked-symbol LblId2String'LParUndsRParUnds'ID-COMMON'Unds'String'Unds'Id{}(SortId{}) : SortString{} [format{}("%cId2String%r %c(%r %1 %c)%r"), function{}(), functional{}(), hook{}("STRING.token2string"), klabel{}("Id2String"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2242,21,2242,85)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  hooked-symbol LblInt2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int{}(SortInt{}) : SortString{} [format{}("%cInt2String%r %c(%r %1 %c)%r"), function{}(), functional{}(), hook{}("STRING.int2string"), klabel{}("Int2String"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1811,21,1811,99)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  hooked-symbol LblList'Coln'get{}(SortList{}, SortInt{}) : SortKItem{} [format{}("%1 %c[%r %2 %c]%r"), function{}(), hook{}("LIST.get"), klabel{}("List:get"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(956,20,956,99)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("0101")]
  hooked-symbol LblList'Coln'range{}(SortList{}, SortInt{}, SortInt{}) : SortList{} [format{}("%crange%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}(), hook{}("LIST.range"), klabel{}("List:range"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1003,19,1003,120)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("11010101")]
  hooked-symbol LblListItem{}(SortKItem{}) : SortList{} [format{}("%cListItem%r %c(%r %1 %c)%r"), function{}(), functional{}(), hook{}("LIST.element"), klabel{}("ListItem"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(945,19,945,132)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), smtlib{}("smt_seq_elem"), symbol'Kywd'{}(), terminals{}("1101"), total{}()]
  hooked-symbol LblMap'Coln'lookup{}(SortMap{}, SortKItem{}) : SortKItem{} [format{}("%1 %c[%r %2 %c]%r"), function{}(), hook{}("MAP.lookup"), klabel{}("Map:lookup"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(271,20,271,113)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("0101")]
  hooked-symbol LblMap'Coln'update{}(SortMap{}, SortKItem{}, SortKItem{}) : SortMap{} [format{}("%1 %c[%r %2 %c<-%r %3 %c]%r"), function{}(), functional{}(), hook{}("MAP.update"), klabel{}("Map:update"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(290,18,290,140)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), prefer{}(), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("010101"), total{}()]
  hooked-symbol LblSet'Coln'difference{}(SortSet{}, SortSet{}) : SortSet{} [format{}("%1 %c-Set%r %2"), function{}(), functional{}(), hook{}("SET.difference"), klabel{}("Set:difference"), latex{}("{#1}-_{\\it Set}{#2}"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(769,18,769,142)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("010"), total{}()]
  hooked-symbol LblSet'Coln'in{}(SortKItem{}, SortSet{}) : SortBool{} [format{}("%1 %cin%r %2"), function{}(), functional{}(), hook{}("SET.in"), klabel{}("Set:in"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(777,19,777,102)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("010"), total{}()]
  hooked-symbol LblSetItem{}(SortKItem{}) : SortSet{} [format{}("%cSetItem%r %c(%r %1 %c)%r"), function{}(), functional{}(), hook{}("SET.element"), injective{}(), klabel{}("SetItem"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(737,18,737,119)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("1101"), total{}()]
  hooked-symbol LblString2Base'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'Int{}(SortString{}, SortInt{}) : SortInt{} [format{}("%cString2Base%r %c(%r %1 %c,%r %2 %c)%r"), function{}(), hook{}("STRING.string2base"), klabel{}("String2Base"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1813,21,1813,99)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101")]
  symbol LblString2Bool'LParUndsRParUnds'STRING-COMMON'Unds'Bool'Unds'String{}(SortString{}) : SortBool{} [format{}("%cString2Bool%r %c(%r %1 %c)%r"), function{}(), klabel{}("String2Bool"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1768,19,1768,49)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  hooked-symbol LblString2Float'LParUndsRParUnds'STRING-COMMON'Unds'Float'Unds'String{}(SortString{}) : SortFloat{} [format{}("%cString2Float%r %c(%r %1 %c)%r"), function{}(), hook{}("STRING.string2float"), klabel{}("String2Float"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1791,21,1791,94)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  hooked-symbol LblString2Id'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'String{}(SortString{}) : SortId{} [format{}("%cString2Id%r %c(%r %1 %c)%r"), function{}(), functional{}(), hook{}("STRING.string2token"), klabel{}("String2Id"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2243,17,2243,80)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  hooked-symbol LblString2Int'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(SortString{}) : SortInt{} [format{}("%cString2Int%r %c(%r %1 %c)%r"), function{}(), hook{}("STRING.string2int"), klabel{}("String2Int"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1810,21,1810,92)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  hooked-symbol LblThreadCellMap'Coln'in'Unds'keys{}(SortIdCell{}, SortThreadCellMap{}) : SortBool{} [format{}("%1 %cin_keys%r %c(%r %2 %c)%r"), function{}(), functional{}(), hook{}("MAP.in_keys"), left{}(), priorities{}(), right{}(), terminals{}("01101"), total{}()]
  hooked-symbol LblThreadCellMapItem{}(SortIdCell{}, SortThreadCell{}) : SortThreadCellMap{} [format{}("%2"), function{}(), hook{}("MAP.element"), left{}(), priorities{}(), right{}(), terminals{}("110101")]
  symbol LblThreadCellMapKey{}(SortThreadCell{}) : SortIdCell{} [format{}("%cThreadCellMapKey%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [constructor{}(), format{}("%1 %c!=%r %2"), functional{}(), injective{}(), left{}(Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(37,18,37,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), priorities{}(Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblspawn'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}()), right{}(Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), strict{}(""), terminals{}("010")]
  hooked-symbol Lbl'UndsPerc'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [format{}("%1 %c%%Int%r %2"), function{}(), hook{}("INT.tmod"), klabel{}("_%Int_"), latex{}("{#1}\\mathrel{\\%_{\\scriptstyle\\it Int}}{#2}"), left{}(Lbl'UndsStar'Int'Unds'{}(),Lbl'Unds'divInt'Unds'{}(),Lbl'UndsPerc'Int'Unds'{}(),Lbl'UndsSlsh'Int'Unds'{}(),Lbl'Unds'modInt'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1237,18,1237,171)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}(),Lbl'Unds'-Int'Unds'{}()), right{}(), smt-hook{}("mod"), symbol'Kywd'{}(), terminals{}("010")]
  symbol Lbl'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [constructor{}(), format{}("%1 %c%%%r %2"), functional{}(), injective{}(), left{}(Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(27,18,27,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), priorities{}(Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblspawn'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}()), right{}(), strict{}(""), terminals{}("010")]
  symbol Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [constructor{}(), format{}("%1 %c&&%r %2"), functional{}(), injective{}(), left{}(Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(40,18,40,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), priorities{}(Lblspawn'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(), strict{}("1"), terminals{}("010")]
  hooked-symbol Lbl'UndsAnd-'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [comm{}(), format{}("%1 %c&Int%r %2"), function{}(), functional{}(), hook{}("INT.and"), klabel{}("_&Int_"), latex{}("{#1}\\mathrel{\\&_{\\scriptstyle\\it Int}}{#2}"), left{}(Lbl'UndsAnd-'Int'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1248,18,1248,184)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}()), right{}(), smtlib{}("andInt"), symbol'Kywd'{}(), terminals{}("010"), total{}()]
  symbol Lbl'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(SortExp{}, SortExps{}) : SortExp{} [constructor{}(), format{}("%1 %c(%r %2 %c)%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(20,18,20,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), priorities{}(Lbl'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblspawn'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}()), right{}(), strict{}(""), terminals{}("0101")]
  hooked-symbol Lbl'UndsStar'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [comm{}(), format{}("%1 %c*Int%r %2"), function{}(), functional{}(), hook{}("INT.mul"), klabel{}("_*Int_"), latex{}("{#1}\\mathrel{\\ast_{\\scriptstyle\\it Int}}{#2}"), left{}(Lbl'Unds'modInt'Unds'{}(),Lbl'UndsPerc'Int'Unds'{}(),Lbl'UndsSlsh'Int'Unds'{}(),Lbl'Unds'divInt'Unds'{}(),Lbl'UndsStar'Int'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1233,18,1233,183)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}(),Lbl'Unds'-Int'Unds'{}()), right{}(), smt-hook{}("*"), symbol'Kywd'{}(), terminals{}("010"), total{}()]
  symbol Lbl'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [constructor{}(), format{}("%1 %c*%r %2"), functional{}(), injective{}(), left{}(Lbl'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(25,18,25,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), priorities{}(Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblspawn'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}()), right{}(), strict{}(""), terminals{}("010")]
  hooked-symbol Lbl'UndsPlus'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [comm{}(), format{}("%1 %c+Int%r %2"), function{}(), functional{}(), hook{}("INT.add"), klabel{}("_+Int_"), latex{}("{#1}\\mathrel{+_{\\scriptstyle\\it Int}}{#2}"), left{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds'-Int'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1242,18,1242,180)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}()), right{}(), smt-hook{}("+"), symbol'Kywd'{}(), terminals{}("010"), total{}()]
  hooked-symbol Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortString{} [format{}("%1 %c+String%r %2"), function{}(), functional{}(), hook{}("STRING.concat"), latex{}("{#1}+_{\\scriptstyle\\it String}{#2}"), left{}(Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1701,21,1701,135)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010"), total{}()]
  symbol Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [constructor{}(), format{}("%1 %c+%r %2"), functional{}(), injective{}(), left{}(Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(29,18,29,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), priorities{}(Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblspawn'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}()), right{}(), strict{}(""), terminals{}("010")]
  symbol Lbl'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(SortExp{}, SortExps{}) : SortExps{} [anywhere{}(), format{}("%1 %c,%r %2"), functional{}(), injective{}(), klabel{}("exps"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(44,19,44,64)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), priorities{}(), right{}(), strict{}(""), terminals{}("010"), userList{}("*")]
  symbol Lbl'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Params'Unds'Param'Unds'Params{}(SortParam{}, SortParams{}) : SortParams{} [constructor{}(), format{}("%1 %c,%r %2"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(11,21,11,36)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), priorities{}(), right{}(), terminals{}("010"), userList{}("*")]
  symbol Lbl'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types{}(SortType{}, SortTypes{}) : SortTypes{} [constructor{}(), format{}("%1 %c,%r %2"), functional{}(), injective{}(), klabel{}("exps"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(9,20,9,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), priorities{}(), right{}(), terminals{}("010"), userList{}("*")]
  symbol Lbl'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals{}(SortVal{}, SortVals{}) : SortVals{} [constructor{}(), format{}("%1 %c,%r %2"), functional{}(), injective{}(), klabel{}("exps"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(46,19,46,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), priorities{}(), right{}(), terminals{}("010"), userList{}("*")]
  symbol Lbl'Unds'-'-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Type'Unds'Types'Unds'Type{}(SortTypes{}, SortType{}) : SortType{} [constructor{}(), format{}("%1 %c->%r %2"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(8,19,8,34)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), priorities{}(), right{}(), terminals{}("010")]
  hooked-symbol Lbl'Unds'-Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [format{}("%1 %c-Int%r %2"), function{}(), functional{}(), hook{}("INT.sub"), klabel{}("_-Int_"), latex{}("{#1}\\mathrel{-_{\\scriptstyle\\it Int}}{#2}"), left{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds'-Int'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1243,18,1243,174)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}()), right{}(), smt-hook{}("-"), symbol'Kywd'{}(), terminals{}("010"), total{}()]
  hooked-symbol Lbl'Unds'-Map'UndsUnds'MAP'Unds'Map'Unds'Map'Unds'Map{}(SortMap{}, SortMap{}) : SortMap{} [format{}("%1 %c-Map%r %2"), function{}(), functional{}(), hook{}("MAP.difference"), latex{}("{#1}-_{\\it Map}{#2}"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(311,18,311,116)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010"), total{}()]
  symbol Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [constructor{}(), format{}("%1 %c-%r %2"), functional{}(), injective{}(), left{}(Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(30,18,30,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), priorities{}(Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblspawn'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}()), right{}(), strict{}(""), terminals{}("010")]
  symbol Lbl'UndsStopStopStopUndsPipe'-'-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC'Unds'Map'Unds'Int'Unds'Int'Unds'K{}(SortInt{}, SortInt{}, SortK{}) : SortMap{} [format{}("%1 %c...%r %2 %c|->%r %3"), function{}(), latex{}("{#1}\\ldots{#2}\\mapsto{#3}"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(342,18,343,49)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), priorities{}(), right{}(), terminals{}("01010")]
  hooked-symbol Lbl'UndsSlsh'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [format{}("%1 %c/Int%r %2"), function{}(), hook{}("INT.tdiv"), klabel{}("_/Int_"), latex{}("{#1}\\mathrel{\\div_{\\scriptstyle\\it Int}}{#2}"), left{}(Lbl'UndsSlsh'Int'Unds'{}(),Lbl'Unds'modInt'Unds'{}(),Lbl'Unds'divInt'Unds'{}(),Lbl'UndsPerc'Int'Unds'{}(),Lbl'UndsStar'Int'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1236,18,1236,173)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}(),Lbl'Unds'-Int'Unds'{}()), right{}(), smt-hook{}("div"), symbol'Kywd'{}(), terminals{}("010")]
  symbol Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [constructor{}(), format{}("%1 %c/%r %2"), functional{}(), injective{}(), left{}(Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(26,18,26,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), priorities{}(Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblspawn'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}()), right{}(), strict{}(""), terminals{}("010")]
  symbol Lbl'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(SortExp{}) : SortStmt{} [constructor{}(), format{}("%1 %c;%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(52,19,52,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), priorities{}(), right{}(), strict{}(""), terminals{}("01")]
  hooked-symbol Lbl'Unds-LT--LT-'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [format{}("%1 %c<<Int%r %2"), function{}(), hook{}("INT.shl"), klabel{}("_<<Int_"), latex{}("{#1}\\mathrel{\\ll_{\\scriptstyle\\it Int}}{#2}"), left{}(Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1246,18,1246,173)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}()), right{}(), smtlib{}("shlInt"), symbol'Kywd'{}(), terminals{}("010")]
  hooked-symbol Lbl'Unds-LT-Eqls'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [format{}("%1 %c<=Int%r %2"), function{}(), functional{}(), hook{}("INT.le"), klabel{}("_<=Int_"), latex{}("{#1}\\mathrel{\\leq_{\\scriptstyle\\it Int}}{#2}"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1304,19,1304,166)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), smt-hook{}("<="), symbol'Kywd'{}(), terminals{}("010"), total{}()]
  hooked-symbol Lbl'Unds-LT-Eqls'Map'UndsUnds'MAP'Unds'Bool'Unds'Map'Unds'Map{}(SortMap{}, SortMap{}) : SortBool{} [format{}("%1 %c<=Map%r %2"), function{}(), functional{}(), hook{}("MAP.inclusion"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(383,19,383,87)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010"), total{}()]
  hooked-symbol Lbl'Unds-LT-Eqls'Set'UndsUnds'SET'Unds'Bool'Unds'Set'Unds'Set{}(SortSet{}, SortSet{}) : SortBool{} [format{}("%1 %c<=Set%r %2"), function{}(), functional{}(), hook{}("SET.inclusion"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(786,19,786,81)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010"), total{}()]
  hooked-symbol Lbl'Unds-LT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [format{}("%1 %c<=String%r %2"), function{}(), functional{}(), hook{}("STRING.le"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1846,19,1846,78)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010"), total{}()]
  symbol Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [constructor{}(), format{}("%1 %c<=%r %2"), functional{}(), injective{}(), left{}(Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(33,18,33,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), priorities{}(Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblspawn'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}()), right{}(Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), strict{}(""), terminals{}("010")]
  hooked-symbol Lbl'Unds-LT-'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [format{}("%1 %c<Int%r %2"), function{}(), functional{}(), hook{}("INT.lt"), klabel{}("_<Int_"), latex{}("{#1}\\mathrel{<_{\\scriptstyle\\it Int}}{#2}"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1305,19,1305,161)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), smt-hook{}("<"), symbol'Kywd'{}(), terminals{}("010"), total{}()]
  hooked-symbol Lbl'Unds-LT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [format{}("%1 %c<String%r %2"), function{}(), functional{}(), hook{}("STRING.lt"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1845,19,1845,78)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010"), total{}()]
  symbol Lbl'Unds-LT-Unds-GT-Unds'SIMPLE-TYPED-DYNAMIC'Unds'Type'Unds'Type'Unds'Vals{}(SortType{}, SortVals{}) : SortType{} [format{}("%1 %c<%r %2 %c>%r"), function{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(338,19,338,48)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), priorities{}(), right{}(), terminals{}("0101")]
  symbol Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [constructor{}(), format{}("%1 %c<%r %2"), functional{}(), injective{}(), left{}(Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(32,18,32,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), priorities{}(Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblspawn'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}()), right{}(Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), strict{}(""), terminals{}("010")]
  hooked-symbol Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [comm{}(), format{}("%1 %c=/=Bool%r %2"), function{}(), functional{}(), hook{}("BOOL.ne"), klabel{}("_=/=Bool_"), left{}(Lbl'UndsEqlsEqls'Bool'Unds'{}(),Lbl'UndsEqlsSlshEqls'Bool'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1109,19,1109,134)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), smt-hook{}("distinct"), symbol'Kywd'{}(), terminals{}("010"), total{}()]
  hooked-symbol Lbl'UndsEqlsSlshEqls'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [comm{}(), format{}("%1 %c=/=Int%r %2"), function{}(), functional{}(), hook{}("INT.ne"), klabel{}("_=/=Int_"), latex{}("{#1}\\mathrel{{=}{/}{=}_{\\scriptstyle\\it Int}}{#2}"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1309,19,1309,184)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), smt-hook{}("distinct"), symbol'Kywd'{}(), terminals{}("010"), total{}()]
  hooked-symbol Lbl'UndsEqlsSlshEqls'K'Unds'{}(SortK{}, SortK{}) : SortBool{} [comm{}(), format{}("%1 %c=/=K%r %2"), function{}(), functional{}(), group{}("notEqualEqualK"), hook{}("KEQUAL.ne"), klabel{}("_=/=K_"), latex{}("{#1}\\mathrel{\\neq_K}{#2}"), left{}(Lbl'UndsEqlsEqls'K'Unds'{}(),Lbl'UndsEqlsSlshEqls'K'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2273,19,2273,179)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(Lbl'Unds'orElseBool'Unds'{}(),Lbl'Unds'orBool'Unds'{}(),Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'Unds'andThenBool'Unds'{}(),Lbl'Unds'impliesBool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}(),Lbl'Unds'andBool'Unds'{}(),LblnotBool'Unds'{}(),Lbl'Unds'xorBool'Unds'{}()), right{}(), smt-hook{}("distinct"), symbol'Kywd'{}(), terminals{}("010"), total{}()]
  hooked-symbol Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [comm{}(), format{}("%1 %c=/=String%r %2"), function{}(), functional{}(), hook{}("STRING.ne"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1842,19,1842,85)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010"), total{}()]
  hooked-symbol Lbl'UndsEqlsEqls'Bool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [comm{}(), format{}("%1 %c==Bool%r %2"), function{}(), functional{}(), hook{}("BOOL.eq"), klabel{}("_==Bool_"), left{}(Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1108,19,1108,126)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), smt-hook{}("="), symbol'Kywd'{}(), terminals{}("010"), total{}()]
  hooked-symbol Lbl'UndsEqlsEqls'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [comm{}(), format{}("%1 %c==Int%r %2"), function{}(), functional{}(), hook{}("INT.eq"), klabel{}("_==Int_"), latex{}("{#1}\\mathrel{{=}{=}_{\\scriptstyle\\it Int}}{#2}"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1308,19,1308,173)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), smt-hook{}("="), symbol'Kywd'{}(), terminals{}("010"), total{}()]
  hooked-symbol Lbl'UndsEqlsEqls'K'Unds'{}(SortK{}, SortK{}) : SortBool{} [comm{}(), format{}("%1 %c==K%r %2"), function{}(), functional{}(), group{}("equalEqualK"), hook{}("KEQUAL.eq"), klabel{}("_==K_"), latex{}("{#1}\\mathrel{=_K}{#2}"), left{}(Lbl'UndsEqlsSlshEqls'K'Unds'{}(),Lbl'UndsEqlsEqls'K'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2272,19,2272,165)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(Lbl'Unds'orElseBool'Unds'{}(),Lbl'Unds'orBool'Unds'{}(),Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'Unds'andThenBool'Unds'{}(),Lbl'Unds'impliesBool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}(),Lbl'Unds'andBool'Unds'{}(),LblnotBool'Unds'{}(),Lbl'Unds'xorBool'Unds'{}()), right{}(), smt-hook{}("="), symbol'Kywd'{}(), terminals{}("010"), total{}()]
  hooked-symbol Lbl'UndsEqlsEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [comm{}(), format{}("%1 %c==String%r %2"), function{}(), functional{}(), hook{}("STRING.eq"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1841,19,1841,85)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010"), total{}()]
  symbol Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [constructor{}(), format{}("%1 %c==%r %2"), functional{}(), injective{}(), left{}(Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(36,18,36,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), priorities{}(Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblspawn'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}()), right{}(Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), strict{}(""), terminals{}("010")]
  symbol Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [constructor{}(), format{}("%1 %c=%r %2"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(43,18,43,60)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), priorities{}(), right{}(Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), strict{}("2"), terminals{}("010")]
  hooked-symbol Lbl'Unds-GT-Eqls'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [format{}("%1 %c>=Int%r %2"), function{}(), functional{}(), hook{}("INT.ge"), klabel{}("_>=Int_"), latex{}("{#1}\\mathrel{\\geq_{\\scriptstyle\\it Int}}{#2}"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1306,19,1306,166)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), smt-hook{}(">="), symbol'Kywd'{}(), terminals{}("010"), total{}()]
  hooked-symbol Lbl'Unds-GT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [format{}("%1 %c>=String%r %2"), function{}(), functional{}(), hook{}("STRING.ge"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1848,19,1848,78)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010"), total{}()]
  symbol Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [constructor{}(), format{}("%1 %c>=%r %2"), functional{}(), injective{}(), left{}(Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(35,18,35,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), priorities{}(Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblspawn'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}()), right{}(Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), strict{}(""), terminals{}("010")]
  hooked-symbol Lbl'Unds-GT--GT-'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [format{}("%1 %c>>Int%r %2"), function{}(), hook{}("INT.shr"), klabel{}("_>>Int_"), latex{}("{#1}\\mathrel{\\gg_{\\scriptstyle\\it Int}}{#2}"), left{}(Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'Unds-GT--GT-'Int'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1245,18,1245,173)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}()), right{}(), smtlib{}("shrInt"), symbol'Kywd'{}(), terminals{}("010")]
  hooked-symbol Lbl'Unds-GT-'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [format{}("%1 %c>Int%r %2"), function{}(), functional{}(), hook{}("INT.gt"), klabel{}("_>Int_"), latex{}("{#1}\\mathrel{>_{\\scriptstyle\\it Int}}{#2}"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1307,19,1307,161)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), smt-hook{}(">"), symbol'Kywd'{}(), terminals{}("010"), total{}()]
  hooked-symbol Lbl'Unds-GT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [format{}("%1 %c>String%r %2"), function{}(), functional{}(), hook{}("STRING.gt"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1847,19,1847,78)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010"), total{}()]
  symbol Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [constructor{}(), format{}("%1 %c>%r %2"), functional{}(), injective{}(), left{}(Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(34,18,34,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), priorities{}(Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblspawn'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}()), right{}(Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), strict{}(""), terminals{}("010")]
  hooked-symbol Lbl'Unds'List'Unds'{}(SortList{}, SortList{}) : SortList{} [assoc{}(), element{}(LblListItem{}()), format{}("%1%n%2"), function{}(), functional{}(), hook{}("LIST.concat"), klabel{}("_List_"), left{}(Lbl'Unds'List'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(929,19,929,188)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), smtlib{}("smt_seq_concat"), symbol'Kywd'{}(), terminals{}("00"), total{}(), unit{}(Lbl'Stop'List{}())]
  hooked-symbol Lbl'Unds'Map'Unds'{}(SortMap{}, SortMap{}) : SortMap{} [assoc{}(), comm{}(), element{}(Lbl'UndsPipe'-'-GT-Unds'{}()), format{}("%1%n%2"), function{}(), hook{}("MAP.concat"), index{}("0"), klabel{}("_Map_"), left{}(Lbl'Unds'Map'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(240,18,240,173)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("00"), unit{}(Lbl'Stop'Map{}())]
  hooked-symbol Lbl'Unds'Set'Unds'{}(SortSet{}, SortSet{}) : SortSet{} [assoc{}(), comm{}(), element{}(LblSetItem{}()), format{}("%1%n%2"), function{}(), hook{}("SET.concat"), idem{}(), klabel{}("_Set_"), left{}(Lbl'Unds'Set'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(721,18,721,165)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("00"), unit{}(Lbl'Stop'Set{}())]
  hooked-symbol Lbl'Unds'ThreadCellMap'Unds'{}(SortThreadCellMap{}, SortThreadCellMap{}) : SortThreadCellMap{} [assoc{}(), avoid{}(), cellCollection{}(), comm{}(), element{}(LblThreadCellMapItem{}()), format{}("%1 %2"), function{}(), hook{}("MAP.concat"), left{}(), priorities{}(), right{}(), terminals{}("00"), unit{}(Lbl'Stop'ThreadCellMap{}()), wrapElement{}("<thread>")]
  symbol Lbl'UndsLSqBRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Type'Unds'Type{}(SortType{}) : SortType{} [constructor{}(), format{}("%1 %c[%r %c]%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(6,19,6,31)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), priorities{}(Lbl'Unds'-'-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Type'Unds'Types'Unds'Type{}()), right{}(), terminals{}("011")]
  hooked-symbol Lbl'UndsLSqBUnds-LT-'-'UndsRSqBUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'KItem{}(SortList{}, SortInt{}, SortKItem{}) : SortList{} [format{}("%1 %c[%r %2 %c<-%r %3 %c]%r"), function{}(), hook{}("LIST.update"), klabel{}("List:set"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(965,19,965,108)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010101")]
  hooked-symbol Lbl'UndsLSqBUnds-LT-'-undef'RSqB'{}(SortMap{}, SortKItem{}) : SortMap{} [format{}("%1 %c[%r %2 %c<-%r %cundef%r %c]%r"), function{}(), functional{}(), hook{}("MAP.remove"), klabel{}("_[_<-undef]"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(299,18,299,117)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), symbol'Kywd'{}(), terminals{}("010111"), total{}()]
  symbol Lbl'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(SortExp{}, SortExps{}) : SortExp{} [anywhere{}(), format{}("%1 %c[%r %2 %c]%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(19,18,19,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), priorities{}(Lblread'LParRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp{}(),Lbl'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),LblsizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(),Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblspawn'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}()), right{}(), strict{}(""), terminals{}("0101")]
  hooked-symbol Lbl'UndsLSqBUndsRSqB'orDefault'UndsUnds'MAP'Unds'KItem'Unds'Map'Unds'KItem'Unds'KItem{}(SortMap{}, SortKItem{}, SortKItem{}) : SortKItem{} [format{}("%1 %c[%r %2 %c]%r %corDefault%r %3"), function{}(), functional{}(), hook{}("MAP.lookupOrDefault"), klabel{}("Map:lookupOrDefault"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(281,20,281,134)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010110"), total{}()]
  hooked-symbol Lbl'UndsXor-Perc'Int'UndsUnds'{}(SortInt{}, SortInt{}, SortInt{}) : SortInt{} [format{}("%1 %c^%%Int%r %2 %3"), function{}(), hook{}("INT.powmod"), klabel{}("_^%Int__"), left{}(Lbl'UndsXor-Perc'Int'UndsUnds'{}(),Lbl'UndsXor-'Int'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1231,18,1231,139)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds'divInt'Unds'{}(),Lbl'UndsPerc'Int'Unds'{}(),Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsSlsh'Int'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsStar'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}(),Lbl'Unds'modInt'Unds'{}(),Lbl'Unds'-Int'Unds'{}()), right{}(), smt-hook{}("(mod (^ #1 #2) #3)"), symbol'Kywd'{}(), terminals{}("0100")]
  hooked-symbol Lbl'UndsXor-'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [format{}("%1 %c^Int%r %2"), function{}(), hook{}("INT.pow"), klabel{}("_^Int_"), latex{}("{#1}\\mathrel{{\\char`\\^}_{\\!\\scriptstyle\\it Int}}{#2}"), left{}(Lbl'UndsXor-'Int'Unds'{}(),Lbl'UndsXor-Perc'Int'UndsUnds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1230,18,1230,178)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds'divInt'Unds'{}(),Lbl'UndsPerc'Int'Unds'{}(),Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsSlsh'Int'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsStar'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}(),Lbl'Unds'modInt'Unds'{}(),Lbl'Unds'-Int'Unds'{}()), right{}(), smt-hook{}("^"), symbol'Kywd'{}(), terminals{}("010")]
  symbol Lbl'UndsUndsLParUndsRParUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Id'Unds'Params'Unds'Block{}(SortType{}, SortId{}, SortParams{}, SortBlock{}) : SortStmt{} [constructor{}(), format{}("%1 %2 %c(%r %3 %c)%r %4"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(14,19,14,47)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), priorities{}(), right{}(), terminals{}("001010")]
  symbol Lbl'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps{}(SortType{}, SortExps{}) : SortStmt{} [anywhere{}(), format{}("%1 %2 %c;%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(13,19,13,32)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), priorities{}(), right{}(), terminals{}("001")]
  symbol Lbl'UndsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Param'Unds'Type'Unds'Id{}(SortType{}, SortId{}) : SortParam{} [constructor{}(), format{}("%1 %2"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(10,20,10,27)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), priorities{}(), right{}(), terminals{}("00")]
  symbol Lbl'UndsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(SortStmt{}, SortStmt{}) : SortStmt{} [constructor{}(), format{}("%1 %2"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(67,19,67,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), priorities{}(), right{}(Lbl'UndsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}()), terminals{}("00")]
  hooked-symbol Lbl'Unds'andBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [format{}("%1 %candBool%r %2"), function{}(), functional{}(), group{}("boolOperation"), hook{}("BOOL.and"), klabel{}("_andBool_"), latex{}("{#1}\\wedge_{\\scriptstyle\\it Bool}{#2}"), left{}(Lbl'Unds'andBool'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1101,19,1101,192)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}()), right{}(), smt-hook{}("and"), symbol'Kywd'{}(), terminals{}("010"), total{}()]
  hooked-symbol Lbl'Unds'andThenBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [format{}("%1 %candThenBool%r %2"), function{}(), functional{}(), group{}("boolOperation"), hook{}("BOOL.andThen"), klabel{}("_andThenBool_"), left{}(Lbl'Unds'andThenBool'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1102,19,1102,154)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}()), right{}(), smt-hook{}("and"), symbol'Kywd'{}(), terminals{}("010"), total{}()]
  hooked-symbol Lbl'Unds'divInt'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [format{}("%1 %cdivInt%r %2"), function{}(), hook{}("INT.ediv"), klabel{}("_divInt_"), left{}(Lbl'UndsSlsh'Int'Unds'{}(),Lbl'Unds'modInt'Unds'{}(),Lbl'UndsStar'Int'Unds'{}(),Lbl'UndsPerc'Int'Unds'{}(),Lbl'Unds'divInt'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1239,18,1239,122)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}(),Lbl'Unds'-Int'Unds'{}()), right{}(), smt-hook{}("div"), symbol'Kywd'{}(), terminals{}("010")]
  symbol Lbl'Unds'dividesInt'UndsUnds'INT-COMMON'Unds'Bool'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortBool{} [format{}("%1 %cdividesInt%r %2"), function{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1318,19,1318,53)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010")]
  hooked-symbol Lbl'Unds'impliesBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [format{}("%1 %cimpliesBool%r %2"), function{}(), functional{}(), group{}("boolOperation"), hook{}("BOOL.implies"), klabel{}("_impliesBool_"), left{}(Lbl'Unds'impliesBool'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1106,19,1106,153)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}()), right{}(), smt-hook{}("=>"), symbol'Kywd'{}(), terminals{}("010"), total{}()]
  hooked-symbol Lbl'Unds'in'UndsUnds'LIST'Unds'Bool'Unds'KItem'Unds'List{}(SortKItem{}, SortList{}) : SortBool{} [format{}("%1 %cin%r %2"), function{}(), functional{}(), hook{}("LIST.in"), klabel{}("_inList_"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1012,19,1012,97)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010"), total{}()]
  hooked-symbol Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(SortKItem{}, SortMap{}) : SortBool{} [format{}("%1 %cin_keys%r %c(%r %2 %c)%r"), function{}(), functional{}(), hook{}("MAP.in_keys"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(357,19,357,89)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("01101"), total{}()]
  hooked-symbol Lbl'Unds'modInt'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [format{}("%1 %cmodInt%r %2"), function{}(), hook{}("INT.emod"), klabel{}("_modInt_"), left{}(Lbl'UndsStar'Int'Unds'{}(),Lbl'UndsPerc'Int'Unds'{}(),Lbl'Unds'divInt'Unds'{}(),Lbl'UndsSlsh'Int'Unds'{}(),Lbl'Unds'modInt'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1240,18,1240,122)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}(),Lbl'Unds'-Int'Unds'{}()), right{}(), smt-hook{}("mod"), symbol'Kywd'{}(), terminals{}("010")]
  hooked-symbol Lbl'Unds'orBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [format{}("%1 %corBool%r %2"), function{}(), functional{}(), group{}("boolOperation"), hook{}("BOOL.or"), klabel{}("_orBool_"), latex{}("{#1}\\vee_{\\scriptstyle\\it Bool}{#2}"), left{}(Lbl'Unds'orBool'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1104,19,1104,187)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}()), right{}(), smt-hook{}("or"), symbol'Kywd'{}(), terminals{}("010"), total{}()]
  hooked-symbol Lbl'Unds'orElseBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [format{}("%1 %corElseBool%r %2"), function{}(), functional{}(), group{}("boolOperation"), hook{}("BOOL.orElse"), klabel{}("_orElseBool_"), left{}(Lbl'Unds'orElseBool'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1105,19,1105,151)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}()), right{}(), smt-hook{}("or"), symbol'Kywd'{}(), terminals{}("010"), total{}()]
  hooked-symbol Lbl'Unds'xorBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [format{}("%1 %cxorBool%r %2"), function{}(), functional{}(), group{}("boolOperation"), hook{}("BOOL.xor"), klabel{}("_xorBool_"), left{}(Lbl'Unds'xorBool'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1103,19,1103,146)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}()), right{}(), smt-hook{}("xor"), symbol'Kywd'{}(), terminals{}("010"), total{}()]
  hooked-symbol Lbl'Unds'xorInt'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [comm{}(), format{}("%1 %cxorInt%r %2"), function{}(), functional{}(), hook{}("INT.xor"), klabel{}("_xorInt_"), latex{}("{#1}\\mathrel{\\oplus_{\\scriptstyle\\it Int}}{#2}"), left{}(Lbl'Unds'xorInt'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1250,18,1250,190)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(Lbl'UndsPipe'Int'Unds'{}()), right{}(), smtlib{}("xorInt"), symbol'Kywd'{}(), terminals{}("010"), total{}()]
  hooked-symbol Lbl'UndsPipe'-'-GT-Unds'{}(SortKItem{}, SortKItem{}) : SortMap{} [format{}("%1 %c|->%r %2"), function{}(), functional{}(), hook{}("MAP.element"), injective{}(), klabel{}("_|->_"), latex{}("{#1}\\mapsto{#2}"), left{}(Lbl'UndsPipe'-'-GT-Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(257,18,257,151)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(Lbl'Stop'Map{}(),Lbl'Unds'Map'Unds'{}()), right{}(Lbl'UndsPipe'-'-GT-Unds'{}()), symbol'Kywd'{}(), terminals{}("010"), total{}()]
  hooked-symbol Lbl'UndsPipe'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [comm{}(), format{}("%1 %c|Int%r %2"), function{}(), functional{}(), hook{}("INT.or"), klabel{}("_|Int_"), latex{}("{#1}\\mathrel{|_{\\scriptstyle\\it Int}}{#2}"), left{}(Lbl'UndsPipe'Int'Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1252,18,1252,181)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), smtlib{}("orInt"), symbol'Kywd'{}(), terminals{}("010"), total{}()]
  hooked-symbol Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(SortSet{}, SortSet{}) : SortSet{} [comm{}(), format{}("%1 %c|Set%r %2"), function{}(), functional{}(), hook{}("SET.union"), left{}(Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(748,18,748,92)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010"), total{}()]
  symbol Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [constructor{}(), format{}("%1 %c||%r %2"), functional{}(), injective{}(), left{}(Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(41,18,41,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), priorities{}(Lblspawn'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(), strict{}("1"), terminals{}("010")]
  hooked-symbol LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(SortInt{}) : SortInt{} [format{}("%cabsInt%r %c(%r %1 %c)%r"), function{}(), functional{}(), hook{}("INT.abs"), klabel{}("absInt"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1269,18,1269,119)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), smt-hook{}("(ite (< #1 0) (- 0 #1) #1)"), terminals{}("1101"), total{}()]
  symbol Lblacquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(SortExp{}) : SortStmt{} [constructor{}(), format{}("%cacquire%r %1 %c;%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(63,19,63,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), priorities{}(), right{}(), strict{}(""), terminals{}("101")]
  symbol Lblarray'LParUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Val'Unds'Type'Unds'Int'Unds'Int{}(SortType{}, SortInt{}, SortInt{}) : SortVal{} [constructor{}(), format{}("%carray%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), functional{}(), injective{}(), klabel{}("array"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(83,18,83,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), priorities{}(), right{}(), terminals{}("11010101")]
  hooked-symbol LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}, SortInt{}) : SortInt{} [format{}("%cbitRangeInt%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}(), hook{}("INT.bitRange"), klabel{}("bitRangeInt"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1294,18,1294,103)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101")]
  symbol Lblbool'Unds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Type{}() : SortType{} [constructor{}(), format{}("%cbool%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(5,36,5,42)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), priorities{}(Lbl'Unds'-'-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Type'Unds'Types'Unds'Type{}()), right{}(), terminals{}("1")]
  hooked-symbol LblcategoryChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'String{}(SortString{}) : SortString{} [format{}("%ccategoryChar%r %c(%r %1 %c)%r"), function{}(), hook{}("STRING.category"), klabel{}("categoryChar"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1858,21,1858,81)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  hooked-symbol Lblchoice'LParUndsRParUnds'MAP'Unds'KItem'Unds'Map{}(SortMap{}) : SortKItem{} [format{}("%cchoice%r %c(%r %1 %c)%r"), function{}(), hook{}("MAP.choice"), klabel{}("Map:choice"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(393,20,393,101)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  hooked-symbol Lblchoice'LParUndsRParUnds'SET'Unds'KItem'Unds'Set{}(SortSet{}) : SortKItem{} [format{}("%cchoice%r %c(%r %1 %c)%r"), function{}(), hook{}("SET.choice"), klabel{}("Set:choice"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(804,20,804,95)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  hooked-symbol LblchrChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int{}(SortInt{}) : SortString{} [format{}("%cchrChar%r %c(%r %1 %c)%r"), function{}(), hook{}("STRING.chr"), klabel{}("chrChar"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1718,21,1718,70)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  hooked-symbol LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortInt{} [format{}("%ccountAllOccurrences%r %c(... %r haystack: %1 %c,%r needle: %2 %c)%r"), function{}(), functional{}(), hook{}("STRING.countAllOccurrences"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1831,18,1831,146)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101"), total{}()]
  hooked-symbol LbldirectionalityChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'String{}(SortString{}) : SortString{} [format{}("%cdirectionalityChar%r %c(%r %1 %c)%r"), function{}(), hook{}("STRING.directionality"), klabel{}("directionalityChar"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1859,21,1859,87)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lblexecute'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}() : SortKItem{} [constructor{}(), format{}("%cexecute%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(159,20,159,29)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), priorities{}(), right{}(), terminals{}("1")]
  hooked-symbol LblfillList'LParUndsCommUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'Int'Unds'KItem{}(SortList{}, SortInt{}, SortInt{}, SortKItem{}) : SortList{} [format{}("%cfillList%r %c(%r %1 %c,%r %2 %c,%r %3 %c,%r %4 %c)%r"), function{}(), hook{}("LIST.fill"), klabel{}("fillList"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(993,19,993,100)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101010101")]
  hooked-symbol LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(SortString{}, SortString{}, SortInt{}) : SortInt{} [format{}("%cfindChar%r %c(... %r haystack: %1 %c,%r needles: %2 %c,%r index: %3 %c)%r"), function{}(), hook{}("STRING.findChar"), klabel{}("findChar"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1755,18,1755,116)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101")]
  hooked-symbol LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(SortString{}, SortString{}, SortInt{}) : SortInt{} [format{}("%cfindString%r %c(... %r haystack: %1 %c,%r needle: %2 %c,%r index: %3 %c)%r"), function{}(), hook{}("STRING.find"), klabel{}("findString"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1744,18,1744,111)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101")]
  symbol Lblfor'LParUndsUndsSClnUndsRParUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Exp'Unds'Exp'Unds'Block{}(SortStmt{}, SortExp{}, SortExp{}, SortBlock{}) : SortStmt{} [format{}("%cfor%r %c(%r %1 %2 %c;%r %3 %c)%r %4"), functional{}(), injective{}(), left{}(), macro{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(56,19,56,64)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), priorities{}(), right{}(), terminals{}("11001010")]
  symbol LblfreshId'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'Int{}(SortInt{}) : SortId{} [format{}("%cfreshId%r %c(%r %1 %c)%r"), freshGenerator{}(), function{}(), functional{}(), klabel{}("freshId"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2244,17,2244,75)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), private{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int{}(SortInt{}) : SortInt{} [format{}("%cfreshInt%r %c(%r %1 %c)%r"), freshGenerator{}(), function{}(), functional{}(), klabel{}("freshInt"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1432,18,1432,77)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), private{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblgetGeneratedCounterCell{}(SortGeneratedTopCell{}) : SortGeneratedCounterCell{} [format{}("%cgetGeneratedCounterCell%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  hooked-symbol LblgetKLabel'LParUndsRParUnds'K-REFLECTION'Unds'KItem'Unds'K{}(SortK{}) : SortKItem{} [format{}("%cgetKLabel%r %c(%r %1 %c)%r"), function{}(), hook{}("KREFLECTION.getKLabel"), klabel{}("getKLabel"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2335,20,2335,73)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  symbol LblgetTypes'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Types'Unds'Params{}(SortParams{}) : SortTypes{} [format{}("%cgetTypes%r %c(%r %1 %c)%r"), function{}(), klabel{}("getTypes"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(357,20,357,48)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lblif'LParUndsRParUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(SortExp{}, SortBlock{}) : SortStmt{} [format{}("%cif%r %c(%r %1 %c)%r %2"), functional{}(), injective{}(), left{}(), macro{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(54,19,54,64)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), priorities{}(), right{}(), terminals{}("11010")]
  symbol Lblif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(SortExp{}, SortBlock{}, SortBlock{}) : SortStmt{} [avoid{}(), constructor{}(), format{}("%cif%r %c(%r %1 %c)%r %2 %celse%r %3"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(53,19,53,75)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), priorities{}(), right{}(), strict{}("1"), terminals{}("1101010")]
  symbol LblinitBusyCell{}() : SortBusyCell{} [format{}("%cinitBusyCell%r"), function{}(), initializer{}(), left{}(), priorities{}(), right{}(), terminals{}("1")]
  symbol LblinitControlCell{}() : SortControlCell{} [format{}("%cinitControlCell%r"), function{}(), initializer{}(), left{}(), priorities{}(), right{}(), terminals{}("1")]
  symbol LblinitEnvCell{}() : SortEnvCell{} [format{}("%cinitEnvCell%r"), function{}(), initializer{}(), left{}(), priorities{}(), right{}(), terminals{}("1")]
  symbol LblinitFstackCell{}() : SortFstackCell{} [format{}("%cinitFstackCell%r"), function{}(), initializer{}(), left{}(), priorities{}(), right{}(), terminals{}("1")]
  symbol LblinitGeneratedCounterCell{}() : SortGeneratedCounterCell{} [format{}("%cinitGeneratedCounterCell%r"), function{}(), initializer{}(), left{}(), priorities{}(), right{}(), terminals{}("1")]
  symbol LblinitGeneratedTopCell{}(SortMap{}) : SortGeneratedTopCell{} [format{}("%cinitGeneratedTopCell%r %c(%r %1 %c)%r"), function{}(), initializer{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol LblinitGenvCell{}() : SortGenvCell{} [format{}("%cinitGenvCell%r"), function{}(), initializer{}(), left{}(), priorities{}(), right{}(), terminals{}("1")]
  symbol LblinitHoldsCell{}() : SortHoldsCell{} [format{}("%cinitHoldsCell%r"), function{}(), initializer{}(), left{}(), priorities{}(), right{}(), terminals{}("1")]
  symbol LblinitIdCell{}() : SortIdCell{} [format{}("%cinitIdCell%r"), function{}(), initializer{}(), left{}(), priorities{}(), right{}(), terminals{}("1")]
  symbol LblinitInputCell{}(SortMap{}) : SortInputCell{} [format{}("%cinitInputCell%r %c(%r %1 %c)%r"), function{}(), initializer{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol LblinitKCell{}(SortMap{}) : SortKCell{} [format{}("%cinitKCell%r %c(%r %1 %c)%r"), function{}(), initializer{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol LblinitNextLocCell{}() : SortNextLocCell{} [format{}("%cinitNextLocCell%r"), function{}(), initializer{}(), left{}(), priorities{}(), right{}(), terminals{}("1")]
  symbol LblinitOutputCell{}(SortMap{}) : SortOutputCell{} [format{}("%cinitOutputCell%r %c(%r %1 %c)%r"), function{}(), initializer{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol LblinitReturnTypeCell{}() : SortReturnTypeCell{} [format{}("%cinitReturnTypeCell%r"), function{}(), initializer{}(), left{}(), priorities{}(), right{}(), terminals{}("1")]
  symbol LblinitStoreCell{}() : SortStoreCell{} [format{}("%cinitStoreCell%r"), function{}(), initializer{}(), left{}(), priorities{}(), right{}(), terminals{}("1")]
  symbol LblinitTCell{}(SortMap{}) : SortTCell{} [format{}("%cinitTCell%r %c(%r %1 %c)%r"), function{}(), initializer{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol LblinitTerminatedCell{}() : SortTerminatedCell{} [format{}("%cinitTerminatedCell%r"), function{}(), initializer{}(), left{}(), priorities{}(), right{}(), terminals{}("1")]
  symbol LblinitThreadCell{}(SortMap{}) : SortThreadCellMap{} [format{}("%cinitThreadCell%r %c(%r %1 %c)%r"), function{}(), initializer{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol LblinitThreadsCell{}(SortMap{}) : SortThreadsCell{} [format{}("%cinitThreadsCell%r %c(%r %1 %c)%r"), function{}(), initializer{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol LblinitXstackCell{}() : SortXstackCell{} [format{}("%cinitXstackCell%r"), function{}(), initializer{}(), left{}(), priorities{}(), right{}(), terminals{}("1")]
  symbol Lblint'Unds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Type{}() : SortType{} [constructor{}(), format{}("%cint%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(5,28,5,33)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), priorities{}(Lbl'Unds'-'-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Type'Unds'Types'Unds'Type{}()), right{}(), terminals{}("1")]
  hooked-symbol LblintersectSet'LParUndsCommUndsRParUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(SortSet{}, SortSet{}) : SortSet{} [comm{}(), format{}("%cintersectSet%r %c(%r %1 %c,%r %2 %c)%r"), function{}(), functional{}(), hook{}("SET.intersection"), klabel{}("intersectSet"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(759,18,759,90)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101"), total{}()]
  symbol LblisBlock{}(SortK{}) : SortBool{} [format{}("%cisBlock%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("Block"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisBool{}(SortK{}) : SortBool{} [format{}("%cisBool%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("Bool"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisBusyCell{}(SortK{}) : SortBool{} [format{}("%cisBusyCell%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("BusyCell"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisBusyCellOpt{}(SortK{}) : SortBool{} [format{}("%cisBusyCellOpt%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("BusyCellOpt"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisControlCell{}(SortK{}) : SortBool{} [format{}("%cisControlCell%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("ControlCell"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisControlCellFragment{}(SortK{}) : SortBool{} [format{}("%cisControlCellFragment%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("ControlCellFragment"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisControlCellOpt{}(SortK{}) : SortBool{} [format{}("%cisControlCellOpt%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("ControlCellOpt"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisEnvCell{}(SortK{}) : SortBool{} [format{}("%cisEnvCell%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("EnvCell"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisEnvCellOpt{}(SortK{}) : SortBool{} [format{}("%cisEnvCellOpt%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("EnvCellOpt"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisExp{}(SortK{}) : SortBool{} [format{}("%cisExp%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("Exp"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisExps{}(SortK{}) : SortBool{} [format{}("%cisExps%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("Exps"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisFloat{}(SortK{}) : SortBool{} [format{}("%cisFloat%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("Float"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisFstackCell{}(SortK{}) : SortBool{} [format{}("%cisFstackCell%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("FstackCell"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisFstackCellOpt{}(SortK{}) : SortBool{} [format{}("%cisFstackCellOpt%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("FstackCellOpt"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisGeneratedCounterCell{}(SortK{}) : SortBool{} [format{}("%cisGeneratedCounterCell%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("GeneratedCounterCell"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisGeneratedCounterCellOpt{}(SortK{}) : SortBool{} [format{}("%cisGeneratedCounterCellOpt%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("GeneratedCounterCellOpt"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisGeneratedTopCell{}(SortK{}) : SortBool{} [format{}("%cisGeneratedTopCell%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("GeneratedTopCell"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisGeneratedTopCellFragment{}(SortK{}) : SortBool{} [format{}("%cisGeneratedTopCellFragment%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("GeneratedTopCellFragment"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisGenvCell{}(SortK{}) : SortBool{} [format{}("%cisGenvCell%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("GenvCell"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisGenvCellOpt{}(SortK{}) : SortBool{} [format{}("%cisGenvCellOpt%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("GenvCellOpt"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisHoldsCell{}(SortK{}) : SortBool{} [format{}("%cisHoldsCell%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("HoldsCell"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisHoldsCellOpt{}(SortK{}) : SortBool{} [format{}("%cisHoldsCellOpt%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("HoldsCellOpt"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisIOError{}(SortK{}) : SortBool{} [format{}("%cisIOError%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("IOError"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisIOFile{}(SortK{}) : SortBool{} [format{}("%cisIOFile%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("IOFile"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisIOInt{}(SortK{}) : SortBool{} [format{}("%cisIOInt%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("IOInt"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisIOString{}(SortK{}) : SortBool{} [format{}("%cisIOString%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("IOString"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisId{}(SortK{}) : SortBool{} [format{}("%cisId%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("Id"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisIdCell{}(SortK{}) : SortBool{} [format{}("%cisIdCell%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("IdCell"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisIdCellOpt{}(SortK{}) : SortBool{} [format{}("%cisIdCellOpt%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("IdCellOpt"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisInputCell{}(SortK{}) : SortBool{} [format{}("%cisInputCell%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("InputCell"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisInputCellOpt{}(SortK{}) : SortBool{} [format{}("%cisInputCellOpt%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("InputCellOpt"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisInt{}(SortK{}) : SortBool{} [format{}("%cisInt%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("Int"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisK{}(SortK{}) : SortBool{} [format{}("%cisK%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("K"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisKCell{}(SortK{}) : SortBool{} [format{}("%cisKCell%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("KCell"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisKCellOpt{}(SortK{}) : SortBool{} [format{}("%cisKCellOpt%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("KCellOpt"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisKConfigVar{}(SortK{}) : SortBool{} [format{}("%cisKConfigVar%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("KConfigVar"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisKItem{}(SortK{}) : SortBool{} [format{}("%cisKItem%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("KItem"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisKResult{}(SortK{}) : SortBool{} [format{}("%cisKResult%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("KResult"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisList{}(SortK{}) : SortBool{} [format{}("%cisList%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("List"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisMap{}(SortK{}) : SortBool{} [format{}("%cisMap%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("Map"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisNextLocCell{}(SortK{}) : SortBool{} [format{}("%cisNextLocCell%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("NextLocCell"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisNextLocCellOpt{}(SortK{}) : SortBool{} [format{}("%cisNextLocCellOpt%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("NextLocCellOpt"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisOutputCell{}(SortK{}) : SortBool{} [format{}("%cisOutputCell%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("OutputCell"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisOutputCellOpt{}(SortK{}) : SortBool{} [format{}("%cisOutputCellOpt%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("OutputCellOpt"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisParam{}(SortK{}) : SortBool{} [format{}("%cisParam%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("Param"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisParams{}(SortK{}) : SortBool{} [format{}("%cisParams%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("Params"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisReturnTypeCell{}(SortK{}) : SortBool{} [format{}("%cisReturnTypeCell%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("ReturnTypeCell"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisReturnTypeCellOpt{}(SortK{}) : SortBool{} [format{}("%cisReturnTypeCellOpt%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("ReturnTypeCellOpt"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisSet{}(SortK{}) : SortBool{} [format{}("%cisSet%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("Set"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisStmt{}(SortK{}) : SortBool{} [format{}("%cisStmt%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("Stmt"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisStoreCell{}(SortK{}) : SortBool{} [format{}("%cisStoreCell%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("StoreCell"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisStoreCellOpt{}(SortK{}) : SortBool{} [format{}("%cisStoreCellOpt%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("StoreCellOpt"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisStream{}(SortK{}) : SortBool{} [format{}("%cisStream%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("Stream"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisString{}(SortK{}) : SortBool{} [format{}("%cisString%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("String"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisTCell{}(SortK{}) : SortBool{} [format{}("%cisTCell%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("TCell"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisTCellFragment{}(SortK{}) : SortBool{} [format{}("%cisTCellFragment%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("TCellFragment"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisTCellOpt{}(SortK{}) : SortBool{} [format{}("%cisTCellOpt%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("TCellOpt"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisTerminatedCell{}(SortK{}) : SortBool{} [format{}("%cisTerminatedCell%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("TerminatedCell"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisTerminatedCellOpt{}(SortK{}) : SortBool{} [format{}("%cisTerminatedCellOpt%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("TerminatedCellOpt"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisThreadCell{}(SortK{}) : SortBool{} [format{}("%cisThreadCell%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("ThreadCell"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisThreadCellFragment{}(SortK{}) : SortBool{} [format{}("%cisThreadCellFragment%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("ThreadCellFragment"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisThreadCellMap{}(SortK{}) : SortBool{} [format{}("%cisThreadCellMap%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("ThreadCellMap"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisThreadsCell{}(SortK{}) : SortBool{} [format{}("%cisThreadsCell%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("ThreadsCell"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisThreadsCellFragment{}(SortK{}) : SortBool{} [format{}("%cisThreadsCellFragment%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("ThreadsCellFragment"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisThreadsCellOpt{}(SortK{}) : SortBool{} [format{}("%cisThreadsCellOpt%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("ThreadsCellOpt"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisType{}(SortK{}) : SortBool{} [format{}("%cisType%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("Type"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisTypes{}(SortK{}) : SortBool{} [format{}("%cisTypes%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("Types"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisVal{}(SortK{}) : SortBool{} [format{}("%cisVal%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("Val"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisVals{}(SortK{}) : SortBool{} [format{}("%cisVals%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("Vals"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisXstackCell{}(SortK{}) : SortBool{} [format{}("%cisXstackCell%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("XstackCell"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblisXstackCellOpt{}(SortK{}) : SortBool{} [format{}("%cisXstackCellOpt%r %c(%r %1 %c)%r"), function{}(), functional{}(), left{}(), predicate{}("XstackCellOpt"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol Lbljoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(SortExp{}) : SortStmt{} [constructor{}(), format{}("%cjoin%r %1 %c;%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(62,19,62,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), priorities{}(), right{}(), strict{}(""), terminals{}("101")]
  hooked-symbol Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map{}(SortMap{}) : SortSet{} [format{}("%ckeys%r %c(%r %1 %c)%r"), function{}(), functional{}(), hook{}("MAP.keys"), klabel{}("keys"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(341,18,341,82)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  hooked-symbol Lblkeys'Unds'list'LParUndsRParUnds'MAP'Unds'List'Unds'Map{}(SortMap{}) : SortList{} [format{}("%ckeys_list%r %c(%r %1 %c)%r"), function{}(), hook{}("MAP.keys_list"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(349,19,349,80)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbllambda'LParUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Val'Unds'Type'Unds'Params'Unds'Stmt{}(SortType{}, SortParams{}, SortStmt{}) : SortVal{} [constructor{}(), format{}("%clambda%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), functional{}(), injective{}(), klabel{}("lambda"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(84,18,84,42)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), priorities{}(), right{}(), terminals{}("11010101")]
  hooked-symbol LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(SortString{}) : SortInt{} [format{}("%clengthString%r %c(%r %1 %c)%r"), function{}(), functional{}(), hook{}("STRING.length"), klabel{}("lengthString"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1709,18,1709,80)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol Lblloc'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Val'Unds'Int{}(SortInt{}) : SortVal{} [constructor{}(), format{}("%cloc%r %c(%r %1 %c)%r"), functional{}(), injective{}(), klabel{}("loc"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(327,18,327,26)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), priorities{}(), right{}(), terminals{}("1101")]
  hooked-symbol Lbllog2Int'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(SortInt{}) : SortInt{} [format{}("%clog2Int%r %c(%r %1 %c)%r"), function{}(), hook{}("INT.log2"), klabel{}("log2Int"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1280,18,1280,75)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbllookup'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'Int{}(SortInt{}) : SortExp{} [constructor{}(), format{}("%clookup%r %c(%r %1 %c)%r"), functional{}(), injective{}(), klabel{}("lookup"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(317,18,317,29)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lbllvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K{}(SortK{}) : SortExp{} [constructor{}(), format{}("%clvalue%r %c(%r %1 %c)%r"), functional{}(), injective{}(), klabel{}("lvalue"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(326,18,326,27)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), priorities{}(), right{}(), terminals{}("1101")]
  hooked-symbol LblmakeList'LParUndsCommUndsRParUnds'LIST'Unds'List'Unds'Int'Unds'KItem{}(SortInt{}, SortKItem{}) : SortList{} [format{}("%cmakeList%r %c(... %r length: %1 %c,%r value: %2 %c)%r"), function{}(), hook{}("LIST.make"), klabel{}("makeList"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(974,19,974,82)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101")]
  hooked-symbol LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortInt{} [format{}("%cmaxInt%r %c(%r %1 %c,%r %2 %c)%r"), function{}(), functional{}(), hook{}("INT.max"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1261,18,1261,114)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), smt-hook{}("(ite (< #1 #2) #2 #1)"), terminals{}("110101"), total{}()]
  hooked-symbol LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortInt{} [format{}("%cminInt%r %c(%r %1 %c,%r %2 %c)%r"), function{}(), functional{}(), hook{}("INT.min"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1260,18,1260,114)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), smt-hook{}("(ite (< #1 #2) #1 #2)"), terminals{}("110101"), total{}()]
  symbol LblmkDecls'LParUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Stmt'Unds'Params'Unds'Vals{}(SortParams{}, SortVals{}) : SortStmt{} [format{}("%cmkDecls%r %c(%r %1 %c,%r %2 %c)%r"), function{}(), klabel{}("mkDecls"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(312,19,312,51)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), priorities{}(), right{}(), terminals{}("110101")]
  hooked-symbol LblnewUUID'Unds'STRING-COMMON'Unds'String{}() : SortString{} [format{}("%cnewUUID%r"), function{}(), hook{}("STRING.uuid"), impure{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1861,21,1861,68)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1")]
  symbol LblnoBusyCell{}() : SortBusyCellOpt{} [cellOptAbsent{}("BusyCell"), constructor{}(), format{}("%cnoBusyCell%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1")]
  symbol LblnoControlCell{}() : SortControlCellOpt{} [cellOptAbsent{}("ControlCell"), constructor{}(), format{}("%cnoControlCell%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1")]
  symbol LblnoEnvCell{}() : SortEnvCellOpt{} [cellOptAbsent{}("EnvCell"), constructor{}(), format{}("%cnoEnvCell%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1")]
  symbol LblnoFstackCell{}() : SortFstackCellOpt{} [cellOptAbsent{}("FstackCell"), constructor{}(), format{}("%cnoFstackCell%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1")]
  symbol LblnoGeneratedCounterCell{}() : SortGeneratedCounterCellOpt{} [cellOptAbsent{}("GeneratedCounterCell"), constructor{}(), format{}("%cnoGeneratedCounterCell%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1")]
  symbol LblnoGenvCell{}() : SortGenvCellOpt{} [cellOptAbsent{}("GenvCell"), constructor{}(), format{}("%cnoGenvCell%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1")]
  symbol LblnoHoldsCell{}() : SortHoldsCellOpt{} [cellOptAbsent{}("HoldsCell"), constructor{}(), format{}("%cnoHoldsCell%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1")]
  symbol LblnoIdCell{}() : SortIdCellOpt{} [cellOptAbsent{}("IdCell"), constructor{}(), format{}("%cnoIdCell%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1")]
  symbol LblnoInputCell{}() : SortInputCellOpt{} [cellOptAbsent{}("InputCell"), constructor{}(), format{}("%cnoInputCell%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1")]
  symbol LblnoKCell{}() : SortKCellOpt{} [cellOptAbsent{}("KCell"), constructor{}(), format{}("%cnoKCell%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1")]
  symbol LblnoNextLocCell{}() : SortNextLocCellOpt{} [cellOptAbsent{}("NextLocCell"), constructor{}(), format{}("%cnoNextLocCell%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1")]
  symbol LblnoOutputCell{}() : SortOutputCellOpt{} [cellOptAbsent{}("OutputCell"), constructor{}(), format{}("%cnoOutputCell%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1")]
  symbol LblnoReturnTypeCell{}() : SortReturnTypeCellOpt{} [cellOptAbsent{}("ReturnTypeCell"), constructor{}(), format{}("%cnoReturnTypeCell%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1")]
  symbol LblnoStoreCell{}() : SortStoreCellOpt{} [cellOptAbsent{}("StoreCell"), constructor{}(), format{}("%cnoStoreCell%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1")]
  symbol LblnoTCell{}() : SortTCellOpt{} [cellOptAbsent{}("TCell"), constructor{}(), format{}("%cnoTCell%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1")]
  symbol LblnoTerminatedCell{}() : SortTerminatedCellOpt{} [cellOptAbsent{}("TerminatedCell"), constructor{}(), format{}("%cnoTerminatedCell%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1")]
  symbol LblnoThreadsCell{}() : SortThreadsCellOpt{} [cellOptAbsent{}("ThreadsCell"), constructor{}(), format{}("%cnoThreadsCell%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1")]
  symbol LblnoXstackCell{}() : SortXstackCellOpt{} [cellOptAbsent{}("XstackCell"), constructor{}(), format{}("%cnoXstackCell%r"), functional{}(), injective{}(), left{}(), priorities{}(), right{}(), terminals{}("1")]
  hooked-symbol LblnotBool'Unds'{}(SortBool{}) : SortBool{} [format{}("%cnotBool%r %1"), function{}(), functional{}(), group{}("boolOperation"), hook{}("BOOL.not"), klabel{}("notBool_"), latex{}("\\neg_{\\scriptstyle\\it Bool}{#1}"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1100,19,1100,179)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(Lbl'Unds'orElseBool'Unds'{}(),Lbl'Unds'orBool'Unds'{}(),Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'Unds'andThenBool'Unds'{}(),Lbl'Unds'impliesBool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}(),Lbl'Unds'andBool'Unds'{}(),Lbl'Unds'xorBool'Unds'{}()), right{}(), smt-hook{}("not"), symbol'Kywd'{}(), terminals{}("10"), total{}()]
  symbol Lblnothing'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Val'Unds'Type{}(SortType{}) : SortVal{} [constructor{}(), format{}("%cnothing%r %c(%r %1 %c)%r"), functional{}(), injective{}(), klabel{}("nothing"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(221,18,221,31)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), priorities{}(), right{}(), terminals{}("1101")]
  hooked-symbol LblordChar'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(SortString{}) : SortInt{} [format{}("%cordChar%r %c(%r %1 %c)%r"), function{}(), hook{}("STRING.ord"), klabel{}("ordChar"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1719,18,1719,70)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lblpopx'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}() : SortKItem{} [constructor{}(), format{}("%cpopx%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(249,20,249,26)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), priorities{}(), right{}(), terminals{}("1")]
  symbol Lblprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps{}(SortExps{}) : SortStmt{} [constructor{}(), format{}("%cprint%r %c(%r %1 %c)%r %c;%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(57,19,57,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), priorities{}(), right{}(), strict{}(""), terminals{}("11011")]
  symbol Lblproject'ColnHash'tempFile'Coln'fd{}(SortIOFile{}) : SortInt{} [format{}("%cfd%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'ColnHash'tempFile'Coln'path{}(SortIOFile{}) : SortString{} [format{}("%cpath%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'ColnHash'unknownIOError'Coln'errno{}(SortIOError{}) : SortInt{} [format{}("%cerrno%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'Block{}(SortK{}) : SortBlock{} [format{}("%cproject:Block%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'Bool{}(SortK{}) : SortBool{} [format{}("%cproject:Bool%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'BusyCell{}(SortK{}) : SortBusyCell{} [format{}("%cproject:BusyCell%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'BusyCellOpt{}(SortK{}) : SortBusyCellOpt{} [format{}("%cproject:BusyCellOpt%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'ControlCell{}(SortK{}) : SortControlCell{} [format{}("%cproject:ControlCell%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'ControlCellFragment{}(SortK{}) : SortControlCellFragment{} [format{}("%cproject:ControlCellFragment%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'ControlCellOpt{}(SortK{}) : SortControlCellOpt{} [format{}("%cproject:ControlCellOpt%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'EnvCell{}(SortK{}) : SortEnvCell{} [format{}("%cproject:EnvCell%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'EnvCellOpt{}(SortK{}) : SortEnvCellOpt{} [format{}("%cproject:EnvCellOpt%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'Exp{}(SortK{}) : SortExp{} [format{}("%cproject:Exp%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'Exps{}(SortK{}) : SortExps{} [format{}("%cproject:Exps%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'Float{}(SortK{}) : SortFloat{} [format{}("%cproject:Float%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'FstackCell{}(SortK{}) : SortFstackCell{} [format{}("%cproject:FstackCell%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'FstackCellOpt{}(SortK{}) : SortFstackCellOpt{} [format{}("%cproject:FstackCellOpt%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'GeneratedCounterCell{}(SortK{}) : SortGeneratedCounterCell{} [format{}("%cproject:GeneratedCounterCell%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'GeneratedCounterCellOpt{}(SortK{}) : SortGeneratedCounterCellOpt{} [format{}("%cproject:GeneratedCounterCellOpt%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'GeneratedTopCell{}(SortK{}) : SortGeneratedTopCell{} [format{}("%cproject:GeneratedTopCell%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'GeneratedTopCellFragment{}(SortK{}) : SortGeneratedTopCellFragment{} [format{}("%cproject:GeneratedTopCellFragment%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'GenvCell{}(SortK{}) : SortGenvCell{} [format{}("%cproject:GenvCell%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'GenvCellOpt{}(SortK{}) : SortGenvCellOpt{} [format{}("%cproject:GenvCellOpt%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'HoldsCell{}(SortK{}) : SortHoldsCell{} [format{}("%cproject:HoldsCell%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'HoldsCellOpt{}(SortK{}) : SortHoldsCellOpt{} [format{}("%cproject:HoldsCellOpt%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'IOError{}(SortK{}) : SortIOError{} [format{}("%cproject:IOError%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'IOFile{}(SortK{}) : SortIOFile{} [format{}("%cproject:IOFile%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'IOInt{}(SortK{}) : SortIOInt{} [format{}("%cproject:IOInt%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'IOString{}(SortK{}) : SortIOString{} [format{}("%cproject:IOString%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'Id{}(SortK{}) : SortId{} [format{}("%cproject:Id%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'IdCell{}(SortK{}) : SortIdCell{} [format{}("%cproject:IdCell%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'IdCellOpt{}(SortK{}) : SortIdCellOpt{} [format{}("%cproject:IdCellOpt%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'InputCell{}(SortK{}) : SortInputCell{} [format{}("%cproject:InputCell%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'InputCellOpt{}(SortK{}) : SortInputCellOpt{} [format{}("%cproject:InputCellOpt%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'Int{}(SortK{}) : SortInt{} [format{}("%cproject:Int%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'K{}(SortK{}) : SortK{} [format{}("%cproject:K%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'KCell{}(SortK{}) : SortKCell{} [format{}("%cproject:KCell%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'KCellOpt{}(SortK{}) : SortKCellOpt{} [format{}("%cproject:KCellOpt%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'KItem{}(SortK{}) : SortKItem{} [format{}("%cproject:KItem%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'KResult{}(SortK{}) : SortKResult{} [format{}("%cproject:KResult%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'List{}(SortK{}) : SortList{} [format{}("%cproject:List%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'Map{}(SortK{}) : SortMap{} [format{}("%cproject:Map%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'NextLocCell{}(SortK{}) : SortNextLocCell{} [format{}("%cproject:NextLocCell%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'NextLocCellOpt{}(SortK{}) : SortNextLocCellOpt{} [format{}("%cproject:NextLocCellOpt%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'OutputCell{}(SortK{}) : SortOutputCell{} [format{}("%cproject:OutputCell%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'OutputCellOpt{}(SortK{}) : SortOutputCellOpt{} [format{}("%cproject:OutputCellOpt%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'Param{}(SortK{}) : SortParam{} [format{}("%cproject:Param%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'Params{}(SortK{}) : SortParams{} [format{}("%cproject:Params%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'ReturnTypeCell{}(SortK{}) : SortReturnTypeCell{} [format{}("%cproject:ReturnTypeCell%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'ReturnTypeCellOpt{}(SortK{}) : SortReturnTypeCellOpt{} [format{}("%cproject:ReturnTypeCellOpt%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'Set{}(SortK{}) : SortSet{} [format{}("%cproject:Set%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'Stmt{}(SortK{}) : SortStmt{} [format{}("%cproject:Stmt%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'StoreCell{}(SortK{}) : SortStoreCell{} [format{}("%cproject:StoreCell%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'StoreCellOpt{}(SortK{}) : SortStoreCellOpt{} [format{}("%cproject:StoreCellOpt%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'Stream{}(SortK{}) : SortStream{} [format{}("%cproject:Stream%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'String{}(SortK{}) : SortString{} [format{}("%cproject:String%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'TCell{}(SortK{}) : SortTCell{} [format{}("%cproject:TCell%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'TCellFragment{}(SortK{}) : SortTCellFragment{} [format{}("%cproject:TCellFragment%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'TCellOpt{}(SortK{}) : SortTCellOpt{} [format{}("%cproject:TCellOpt%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'TerminatedCell{}(SortK{}) : SortTerminatedCell{} [format{}("%cproject:TerminatedCell%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'TerminatedCellOpt{}(SortK{}) : SortTerminatedCellOpt{} [format{}("%cproject:TerminatedCellOpt%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'ThreadCell{}(SortK{}) : SortThreadCell{} [format{}("%cproject:ThreadCell%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'ThreadCellFragment{}(SortK{}) : SortThreadCellFragment{} [format{}("%cproject:ThreadCellFragment%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'ThreadCellMap{}(SortK{}) : SortThreadCellMap{} [format{}("%cproject:ThreadCellMap%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'ThreadsCell{}(SortK{}) : SortThreadsCell{} [format{}("%cproject:ThreadsCell%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'ThreadsCellFragment{}(SortK{}) : SortThreadsCellFragment{} [format{}("%cproject:ThreadsCellFragment%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'ThreadsCellOpt{}(SortK{}) : SortThreadsCellOpt{} [format{}("%cproject:ThreadsCellOpt%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'Type{}(SortK{}) : SortType{} [format{}("%cproject:Type%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'Types{}(SortK{}) : SortTypes{} [format{}("%cproject:Types%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'Val{}(SortK{}) : SortVal{} [format{}("%cproject:Val%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'Vals{}(SortK{}) : SortVals{} [format{}("%cproject:Vals%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'XstackCell{}(SortK{}) : SortXstackCell{} [format{}("%cproject:XstackCell%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  symbol Lblproject'Coln'XstackCellOpt{}(SortK{}) : SortXstackCellOpt{} [format{}("%cproject:XstackCellOpt%r %c(%r %1 %c)%r"), function{}(), left{}(), priorities{}(), projection{}(), right{}(), terminals{}("1101")]
  hooked-symbol LblrandInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(SortInt{}) : SortInt{} [format{}("%crandInt%r %c(%r %1 %c)%r"), function{}(), hook{}("INT.rand"), impure{}(), klabel{}("randInt"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1328,18,1328,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lblread'LParRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp{}() : SortExp{} [constructor{}(), format{}("%cread%r %c(%r %c)%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(23,18,23,32)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), priorities{}(Lbl'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblspawn'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}()), right{}(), terminals{}("111")]
  symbol Lblrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(SortExp{}) : SortStmt{} [constructor{}(), format{}("%crelease%r %1 %c;%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(64,19,64,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), priorities{}(), right{}(), strict{}(""), terminals{}("101")]
  hooked-symbol LblremoveAll'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Set{}(SortMap{}, SortSet{}) : SortMap{} [format{}("%cremoveAll%r %c(%r %1 %c,%r %2 %c)%r"), function{}(), functional{}(), hook{}("MAP.removeAll"), klabel{}("removeAll"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(333,18,333,87)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101"), total{}()]
  symbol Lblrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(SortExp{}) : SortStmt{} [constructor{}(), format{}("%crendezvous%r %1 %c;%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(65,19,65,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), priorities{}(), right{}(), strict{}(""), terminals{}("101")]
  hooked-symbol Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int{}(SortString{}, SortString{}, SortString{}, SortInt{}) : SortString{} [format{}("%creplace%r %c(... %r haystack: %1 %c,%r needle: %2 %c,%r replacement: %3 %c,%r times: %4 %c)%r"), function{}(), hook{}("STRING.replace"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1829,21,1829,146)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101010101")]
  hooked-symbol LblreplaceAll'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String{}(SortString{}, SortString{}, SortString{}) : SortString{} [format{}("%creplaceAll%r %c(... %r haystack: %1 %c,%r needle: %2 %c,%r replacement: %3 %c)%r"), function{}(), functional{}(), hook{}("STRING.replaceAll"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1828,21,1828,149)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101"), total{}()]
  hooked-symbol LblreplaceFirst'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String{}(SortString{}, SortString{}, SortString{}) : SortString{} [format{}("%creplaceFirst%r %c(... %r haystack: %1 %c,%r needle: %2 %c,%r replacement: %3 %c)%r"), function{}(), functional{}(), hook{}("STRING.replaceFirst"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1830,21,1830,151)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101"), total{}()]
  symbol Lblreturn'SClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt{}() : SortStmt{} [constructor{}(), format{}("%creturn%r %c;%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(59,19,59,31)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), priorities{}(), right{}(), terminals{}("11")]
  symbol Lblreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(SortExp{}) : SortStmt{} [constructor{}(), format{}("%creturn%r %1 %c;%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(58,19,58,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), priorities{}(), right{}(), strict{}(""), terminals{}("101")]
  hooked-symbol LblrfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(SortString{}, SortString{}, SortInt{}) : SortInt{} [format{}("%crfindChar%r %c(... %r haystack: %1 %c,%r needles: %2 %c,%r index: %3 %c)%r"), function{}(), hook{}("STRING.rfindChar"), klabel{}("rfindChar"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1756,18,1756,117)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101")]
  hooked-symbol LblrfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(SortString{}, SortString{}, SortInt{}) : SortInt{} [format{}("%crfindString%r %c(... %r haystack: %1 %c,%r needle: %2 %c,%r index: %3 %c)%r"), function{}(), hook{}("STRING.rfind"), klabel{}("rfindString"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1745,18,1745,112)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101")]
  symbol LblsetEnv'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Map{}(SortMap{}) : SortKItem{} [constructor{}(), format{}("%csetEnv%r %c(%r %1 %c)%r"), functional{}(), injective{}(), klabel{}("setEnv"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(322,20,322,31)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), priorities{}(), right{}(), terminals{}("1101")]
  hooked-symbol LblsignExtendBitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}, SortInt{}) : SortInt{} [format{}("%csignExtendBitRangeInt%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}(), hook{}("INT.signExtendBitRange"), klabel{}("signExtendBitRangeInt"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1295,18,1295,113)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101")]
  hooked-symbol Lblsize'LParUndsRParUnds'LIST'Unds'Int'Unds'List{}(SortList{}) : SortInt{} [format{}("%csize%r %c(%r %1 %c)%r"), function{}(), functional{}(), hook{}("LIST.size"), klabel{}("sizeList"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1020,18,1020,117)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), smtlib{}("smt_seq_len"), terminals{}("1101"), total{}()]
  hooked-symbol Lblsize'LParUndsRParUnds'MAP'Unds'Int'Unds'Map{}(SortMap{}) : SortInt{} [format{}("%csize%r %c(%r %1 %c)%r"), function{}(), functional{}(), hook{}("MAP.size"), klabel{}("sizeMap"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(373,18,373,99)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  hooked-symbol Lblsize'LParUndsRParUnds'SET'Unds'Int'Unds'Set{}(SortSet{}) : SortInt{} [format{}("%csize%r %c(%r %1 %c)%r"), function{}(), functional{}(), hook{}("SET.size"), klabel{}("size"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(794,18,794,76)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), total{}()]
  symbol LblsizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(SortExp{}) : SortExp{} [constructor{}(), format{}("%csizeOf%r %c(%r %1 %c)%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(22,18,22,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), priorities{}(Lbl'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblspawn'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}()), right{}(), strict{}(""), terminals{}("1101")]
  symbol Lblspawn'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Block{}(SortBlock{}) : SortExp{} [constructor{}(), format{}("%cspawn%r %1"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(42,18,42,31)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), priorities{}(Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(), terminals{}("10")]
  hooked-symbol LblsrandInt'LParUndsRParUnds'INT-COMMON'Unds'K'Unds'Int{}(SortInt{}) : SortK{} [format{}("%csrandInt%r %c(%r %1 %c)%r"), function{}(), hook{}("INT.srand"), impure{}(), klabel{}("srandInt"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1329,16,1329,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lblstring'Unds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Type{}() : SortType{} [constructor{}(), format{}("%cstring%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(5,45,5,53)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), priorities{}(Lbl'Unds'-'-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Type'Unds'Types'Unds'Type{}()), right{}(), terminals{}("1")]
  hooked-symbol LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(SortString{}, SortInt{}, SortInt{}) : SortString{} [format{}("%csubstrString%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}(), functional{}(), hook{}("STRING.substr"), klabel{}("substrString"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1734,21,1734,117)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101"), total{}()]
  symbol Lblthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(SortExp{}) : SortStmt{} [constructor{}(), format{}("%cthrow%r %1 %c;%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(61,15,61,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), priorities{}(), right{}(), strict{}(""), terminals{}("101")]
  symbol Lbltry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block{}(SortBlock{}, SortParam{}, SortBlock{}) : SortStmt{} [constructor{}(), format{}("%ctry%r %1 %ccatch%r %c(%r %2 %c)%r %3"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(60,19,60,58)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), priorities{}(), right{}(), terminals{}("1011010")]
  symbol LbltypeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Type'Unds'K{}(SortK{}) : SortType{} [format{}("%ctypeOf%r %c(%r %1 %c)%r"), function{}(), klabel{}("typeOf"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(348,19,348,40)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lblundefined'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type{}(SortType{}) : SortKItem{} [constructor{}(), format{}("%cundefined%r %c(%r %1 %c)%r"), functional{}(), injective{}(), klabel{}("undefined"), latex{}("\\bot_{#1}"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(125,20,125,55)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), priorities{}(), right{}(), terminals{}("1101")]
  hooked-symbol LblupdateList'LParUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'List{}(SortList{}, SortInt{}, SortList{}) : SortList{} [format{}("%cupdateList%r %c(... %r dest: %1 %c,%r index: %2 %c,%r src: %3 %c)%r"), function{}(), hook{}("LIST.updateAll"), klabel{}("updateList"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(984,19,984,97)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101")]
  hooked-symbol LblupdateMap'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Map{}(SortMap{}, SortMap{}) : SortMap{} [format{}("%cupdateMap%r %c(%r %1 %c,%r %2 %c)%r"), function{}(), functional{}(), hook{}("MAP.updateAll"), klabel{}("updateMap"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(324,18,324,87)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101"), total{}()]
  hooked-symbol Lblvalues'LParUndsRParUnds'MAP'Unds'List'Unds'Map{}(SortMap{}) : SortList{} [format{}("%cvalues%r %c(%r %1 %c)%r"), function{}(), hook{}("MAP.values"), klabel{}("values"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(365,19,365,77)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101")]
  symbol Lblvoid'Unds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Type{}() : SortType{} [constructor{}(), format{}("%cvoid%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(5,19,5,25)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), priorities{}(Lbl'Unds'-'-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Type'Unds'Types'Unds'Type{}()), right{}(), terminals{}("1")]
  symbol Lblwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(SortExp{}, SortBlock{}) : SortStmt{} [constructor{}(), format{}("%cwhile%r %c(%r %1 %c)%r %2"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(55,19,55,44)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), priorities{}(), right{}(), terminals{}("11010")]
  symbol Lbl'LBraUndsRBraUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Block'Unds'Stmt{}(SortStmt{}) : SortBlock{} [constructor{}(), format{}("%c{%r %1 %c}%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(49,19,49,31)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), priorities{}(), right{}(), terminals{}("101")]
  symbol Lbl'LBraRBraUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Block{}() : SortBlock{} [constructor{}(), format{}("%c{%r %c}%r"), functional{}(), injective{}(), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(48,20,48,27)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), priorities{}(), right{}(), terminals{}("11")]
  hooked-symbol Lbl'Tild'Int'Unds'{}(SortInt{}) : SortInt{} [format{}("%c~Int%r %1"), function{}(), functional{}(), hook{}("INT.not"), klabel{}("~Int_"), latex{}("\\mathop{\\sim_{\\scriptstyle\\it Int}}{#1}"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1228,18,1228,168)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), priorities{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds'divInt'Unds'{}(),Lbl'UndsPerc'Int'Unds'{}(),Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsSlsh'Int'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'UndsXor-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsStar'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}(),Lbl'Unds'modInt'Unds'{}(),Lbl'UndsXor-Perc'Int'UndsUnds'{}(),Lbl'Unds'-Int'Unds'{}()), right{}(), smtlib{}("notInt"), symbol'Kywd'{}(), terminals{}("10"), total{}()]

// generated axioms
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortStoreCellOpt{}, SortKItem{}} (From:SortStoreCellOpt{}))) [subsort{SortStoreCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortIOString{}, SortKItem{}} (From:SortIOString{}))) [subsort{SortIOString{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortString{}, SortKItem{}} (From:SortString{}))) [subsort{SortString{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTCell{}, SortKItem{}} (From:SortTCell{}))) [subsort{SortTCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFstackCell{}, SortKItem{}} (From:SortFstackCell{}))) [subsort{SortFstackCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortType{}, SortKItem{}} (From:SortType{}))) [subsort{SortType{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortKCellOpt{}, SortKItem{}} (From:SortKCellOpt{}))) [subsort{SortKCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortParams{}, SortKItem{}} (From:SortParams{}))) [subsort{SortParams{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFstackCellOpt{}, SortKItem{}} (From:SortFstackCellOpt{}))) [subsort{SortFstackCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGeneratedCounterCellOpt{}, SortKItem{}} (From:SortGeneratedCounterCellOpt{}))) [subsort{SortGeneratedCounterCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortKResult{}, SortKItem{}} (From:SortKResult{}))) [subsort{SortKResult{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortGeneratedCounterCellOpt{}, \equals{SortGeneratedCounterCellOpt{}, R} (Val:SortGeneratedCounterCellOpt{}, inj{SortGeneratedCounterCell{}, SortGeneratedCounterCellOpt{}} (From:SortGeneratedCounterCell{}))) [subsort{SortGeneratedCounterCell{}, SortGeneratedCounterCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortReturnTypeCell{}, SortKItem{}} (From:SortReturnTypeCell{}))) [subsort{SortReturnTypeCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortEnvCellOpt{}, SortKItem{}} (From:SortEnvCellOpt{}))) [subsort{SortEnvCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortKCell{}, SortKItem{}} (From:SortKCell{}))) [subsort{SortKCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTCellOpt{}, SortKItem{}} (From:SortTCellOpt{}))) [subsort{SortTCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortControlCell{}, SortKItem{}} (From:SortControlCell{}))) [subsort{SortControlCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortNextLocCellOpt{}, \equals{SortNextLocCellOpt{}, R} (Val:SortNextLocCellOpt{}, inj{SortNextLocCell{}, SortNextLocCellOpt{}} (From:SortNextLocCell{}))) [subsort{SortNextLocCell{}, SortNextLocCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortBusyCellOpt{}, SortKItem{}} (From:SortBusyCellOpt{}))) [subsort{SortBusyCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortThreadsCellFragment{}, SortKItem{}} (From:SortThreadsCellFragment{}))) [subsort{SortThreadsCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortGenvCellOpt{}, \equals{SortGenvCellOpt{}, R} (Val:SortGenvCellOpt{}, inj{SortGenvCell{}, SortGenvCellOpt{}} (From:SortGenvCell{}))) [subsort{SortGenvCell{}, SortGenvCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortOutputCellOpt{}, \equals{SortOutputCellOpt{}, R} (Val:SortOutputCellOpt{}, inj{SortOutputCell{}, SortOutputCellOpt{}} (From:SortOutputCell{}))) [subsort{SortOutputCell{}, SortOutputCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortControlCellOpt{}, SortKItem{}} (From:SortControlCellOpt{}))) [subsort{SortControlCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortFstackCellOpt{}, \equals{SortFstackCellOpt{}, R} (Val:SortFstackCellOpt{}, inj{SortFstackCell{}, SortFstackCellOpt{}} (From:SortFstackCell{}))) [subsort{SortFstackCell{}, SortFstackCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKCellOpt{}, \equals{SortKCellOpt{}, R} (Val:SortKCellOpt{}, inj{SortKCell{}, SortKCellOpt{}} (From:SortKCell{}))) [subsort{SortKCell{}, SortKCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortXstackCell{}, SortKItem{}} (From:SortXstackCell{}))) [subsort{SortXstackCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortSet{}, SortKItem{}} (From:SortSet{}))) [subsort{SortSet{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortStoreCell{}, SortKItem{}} (From:SortStoreCell{}))) [subsort{SortStoreCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortIOError{}, SortKItem{}} (From:SortIOError{}))) [subsort{SortIOError{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTypes{}, SortKItem{}} (From:SortTypes{}))) [subsort{SortTypes{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortBlock{}, SortKItem{}} (From:SortBlock{}))) [subsort{SortBlock{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortNextLocCellOpt{}, SortKItem{}} (From:SortNextLocCellOpt{}))) [subsort{SortNextLocCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGeneratedCounterCell{}, SortKItem{}} (From:SortGeneratedCounterCell{}))) [subsort{SortGeneratedCounterCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortThreadsCell{}, SortKItem{}} (From:SortThreadsCell{}))) [subsort{SortThreadsCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortOutputCellOpt{}, SortKItem{}} (From:SortOutputCellOpt{}))) [subsort{SortOutputCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortTCellOpt{}, \equals{SortTCellOpt{}, R} (Val:SortTCellOpt{}, inj{SortTCell{}, SortTCellOpt{}} (From:SortTCell{}))) [subsort{SortTCell{}, SortTCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGenvCellOpt{}, SortKItem{}} (From:SortGenvCellOpt{}))) [subsort{SortGenvCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortInputCellOpt{}, SortKItem{}} (From:SortInputCellOpt{}))) [subsort{SortInputCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTCellFragment{}, SortKItem{}} (From:SortTCellFragment{}))) [subsort{SortTCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortIdCellOpt{}, \equals{SortIdCellOpt{}, R} (Val:SortIdCellOpt{}, inj{SortIdCell{}, SortIdCellOpt{}} (From:SortIdCell{}))) [subsort{SortIdCell{}, SortIdCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortExps{}, SortKItem{}} (From:SortExps{}))) [subsort{SortExps{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTerminatedCell{}, SortKItem{}} (From:SortTerminatedCell{}))) [subsort{SortTerminatedCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortReturnTypeCellOpt{}, SortKItem{}} (From:SortReturnTypeCellOpt{}))) [subsort{SortReturnTypeCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortVals{}, SortKItem{}} (From:SortVals{}))) [subsort{SortVals{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortThreadsCellOpt{}, \equals{SortThreadsCellOpt{}, R} (Val:SortThreadsCellOpt{}, inj{SortThreadsCell{}, SortThreadsCellOpt{}} (From:SortThreadsCell{}))) [subsort{SortThreadsCell{}, SortThreadsCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortIdCellOpt{}, SortKItem{}} (From:SortIdCellOpt{}))) [subsort{SortIdCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTerminatedCellOpt{}, SortKItem{}} (From:SortTerminatedCellOpt{}))) [subsort{SortTerminatedCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortStream{}, SortKItem{}} (From:SortStream{}))) [subsort{SortStream{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortHoldsCell{}, SortKItem{}} (From:SortHoldsCell{}))) [subsort{SortHoldsCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortIOFile{}, SortKItem{}} (From:SortIOFile{}))) [subsort{SortIOFile{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGeneratedTopCell{}, SortKItem{}} (From:SortGeneratedTopCell{}))) [subsort{SortGeneratedTopCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortBusyCellOpt{}, \equals{SortBusyCellOpt{}, R} (Val:SortBusyCellOpt{}, inj{SortBusyCell{}, SortBusyCellOpt{}} (From:SortBusyCell{}))) [subsort{SortBusyCell{}, SortBusyCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortHoldsCellOpt{}, \equals{SortHoldsCellOpt{}, R} (Val:SortHoldsCellOpt{}, inj{SortHoldsCell{}, SortHoldsCellOpt{}} (From:SortHoldsCell{}))) [subsort{SortHoldsCell{}, SortHoldsCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortThreadCellMap{}, SortKItem{}} (From:SortThreadCellMap{}))) [subsort{SortThreadCellMap{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortEnvCellOpt{}, \equals{SortEnvCellOpt{}, R} (Val:SortEnvCellOpt{}, inj{SortEnvCell{}, SortEnvCellOpt{}} (From:SortEnvCell{}))) [subsort{SortEnvCell{}, SortEnvCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortIOInt{}, SortKItem{}} (From:SortIOInt{}))) [subsort{SortIOInt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortStoreCellOpt{}, \equals{SortStoreCellOpt{}, R} (Val:SortStoreCellOpt{}, inj{SortStoreCell{}, SortStoreCellOpt{}} (From:SortStoreCell{}))) [subsort{SortStoreCell{}, SortStoreCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortHoldsCellOpt{}, SortKItem{}} (From:SortHoldsCellOpt{}))) [subsort{SortHoldsCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortReturnTypeCellOpt{}, \equals{SortReturnTypeCellOpt{}, R} (Val:SortReturnTypeCellOpt{}, inj{SortReturnTypeCell{}, SortReturnTypeCellOpt{}} (From:SortReturnTypeCell{}))) [subsort{SortReturnTypeCell{}, SortReturnTypeCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortInputCell{}, SortKItem{}} (From:SortInputCell{}))) [subsort{SortInputCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortBusyCell{}, SortKItem{}} (From:SortBusyCell{}))) [subsort{SortBusyCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortTerminatedCellOpt{}, \equals{SortTerminatedCellOpt{}, R} (Val:SortTerminatedCellOpt{}, inj{SortTerminatedCell{}, SortTerminatedCellOpt{}} (From:SortTerminatedCell{}))) [subsort{SortTerminatedCell{}, SortTerminatedCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortList{}, SortKItem{}} (From:SortList{}))) [subsort{SortList{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortId{}, SortKItem{}} (From:SortId{}))) [subsort{SortId{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFloat{}, SortKItem{}} (From:SortFloat{}))) [subsort{SortFloat{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortBool{}, SortKItem{}} (From:SortBool{}))) [subsort{SortBool{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortOutputCell{}, SortKItem{}} (From:SortOutputCell{}))) [subsort{SortOutputCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortThreadsCellOpt{}, SortKItem{}} (From:SortThreadsCellOpt{}))) [subsort{SortThreadsCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGenvCell{}, SortKItem{}} (From:SortGenvCell{}))) [subsort{SortGenvCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortVal{}, SortKItem{}} (From:SortVal{}))) [subsort{SortVal{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortXstackCellOpt{}, \equals{SortXstackCellOpt{}, R} (Val:SortXstackCellOpt{}, inj{SortXstackCell{}, SortXstackCellOpt{}} (From:SortXstackCell{}))) [subsort{SortXstackCell{}, SortXstackCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortParam{}, SortKItem{}} (From:SortParam{}))) [subsort{SortParam{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortInt{}, SortKItem{}} (From:SortInt{}))) [subsort{SortInt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGeneratedTopCellFragment{}, SortKItem{}} (From:SortGeneratedTopCellFragment{}))) [subsort{SortGeneratedTopCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortControlCellFragment{}, SortKItem{}} (From:SortControlCellFragment{}))) [subsort{SortControlCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortExp{}, SortKItem{}} (From:SortExp{}))) [subsort{SortExp{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortThreadCell{}, SortKItem{}} (From:SortThreadCell{}))) [subsort{SortThreadCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortEnvCell{}, SortKItem{}} (From:SortEnvCell{}))) [subsort{SortEnvCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortIdCell{}, SortKItem{}} (From:SortIdCell{}))) [subsort{SortIdCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortStmt{}, SortKItem{}} (From:SortStmt{}))) [subsort{SortStmt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMap{}, SortKItem{}} (From:SortMap{}))) [subsort{SortMap{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortXstackCellOpt{}, SortKItem{}} (From:SortXstackCellOpt{}))) [subsort{SortXstackCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortNextLocCell{}, SortKItem{}} (From:SortNextLocCell{}))) [subsort{SortNextLocCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortThreadCellFragment{}, SortKItem{}} (From:SortThreadCellFragment{}))) [subsort{SortThreadCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortControlCellOpt{}, \equals{SortControlCellOpt{}, R} (Val:SortControlCellOpt{}, inj{SortControlCell{}, SortControlCellOpt{}} (From:SortControlCell{}))) [subsort{SortControlCell{}, SortControlCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortThreadCellMap{}, \equals{SortThreadCellMap{}, R} (Val:SortThreadCellMap{}, inj{SortThreadCell{}, SortThreadCellMap{}} (From:SortThreadCell{}))) [subsort{SortThreadCell{}, SortThreadCellMap{}}()] // subsort
  axiom{R} \exists{R} (Val:SortInputCellOpt{}, \equals{SortInputCellOpt{}, R} (Val:SortInputCellOpt{}, inj{SortInputCell{}, SortInputCellOpt{}} (From:SortInputCell{}))) [subsort{SortInputCell{}, SortInputCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, inj{SortInt{}, SortExp{}} (From:SortInt{}))) [subsort{SortInt{}, SortExp{}}()] // subsort
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, inj{SortBool{}, SortExp{}} (From:SortBool{}))) [subsort{SortBool{}, SortExp{}}()] // subsort
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, inj{SortString{}, SortExp{}} (From:SortString{}))) [subsort{SortString{}, SortExp{}}()] // subsort
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, inj{SortId{}, SortExp{}} (From:SortId{}))) [subsort{SortId{}, SortExp{}}()] // subsort
  axiom{R} \exists{R} (Val:SortIOInt{}, \equals{SortIOInt{}, R} (Val:SortIOInt{}, inj{SortInt{}, SortIOInt{}} (From:SortInt{}))) [subsort{SortInt{}, SortIOInt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortIOInt{}, \equals{SortIOInt{}, R} (Val:SortIOInt{}, inj{SortIOError{}, SortIOInt{}} (From:SortIOError{}))) [subsort{SortIOError{}, SortIOInt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortIOString{}, \equals{SortIOString{}, R} (Val:SortIOString{}, inj{SortString{}, SortIOString{}} (From:SortString{}))) [subsort{SortString{}, SortIOString{}}()] // subsort
  axiom{R} \exists{R} (Val:SortIOString{}, \equals{SortIOString{}, R} (Val:SortIOString{}, inj{SortIOError{}, SortIOString{}} (From:SortIOError{}))) [subsort{SortIOError{}, SortIOString{}}()] // subsort
  axiom{R} \exists{R} (Val:SortIOFile{}, \equals{SortIOFile{}, R} (Val:SortIOFile{}, inj{SortIOError{}, SortIOFile{}} (From:SortIOError{}))) [subsort{SortIOError{}, SortIOFile{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortKConfigVar{}, SortKItem{}} (From:SortKConfigVar{}))) [subsort{SortKConfigVar{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, inj{SortBlock{}, SortStmt{}} (From:SortBlock{}))) [subsort{SortBlock{}, SortStmt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortVal{}, \equals{SortVal{}, R} (Val:SortVal{}, inj{SortInt{}, SortVal{}} (From:SortInt{}))) [subsort{SortInt{}, SortVal{}}()] // subsort
  axiom{R} \exists{R} (Val:SortVal{}, \equals{SortVal{}, R} (Val:SortVal{}, inj{SortBool{}, SortVal{}} (From:SortBool{}))) [subsort{SortBool{}, SortVal{}}()] // subsort
  axiom{R} \exists{R} (Val:SortVal{}, \equals{SortVal{}, R} (Val:SortVal{}, inj{SortString{}, SortVal{}} (From:SortString{}))) [subsort{SortString{}, SortVal{}}()] // subsort
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, inj{SortVal{}, SortExp{}} (From:SortVal{}))) [subsort{SortVal{}, SortExp{}}()] // subsort
  axiom{R} \exists{R} (Val:SortExps{}, \equals{SortExps{}, R} (Val:SortExps{}, inj{SortVals{}, SortExps{}} (From:SortVals{}))) [subsort{SortVals{}, SortExps{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKResult{}, \equals{SortKResult{}, R} (Val:SortKResult{}, inj{SortVal{}, SortKResult{}} (From:SortVal{}))) [subsort{SortVal{}, SortKResult{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKResult{}, \equals{SortKResult{}, R} (Val:SortKResult{}, inj{SortVals{}, SortKResult{}} (From:SortVals{}))) [subsort{SortVals{}, SortKResult{}}()] // subsort
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(K0:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{})), Lbl'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbllookup'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbllvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblread'LParRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), LblsizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblspawn'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'E2BIG{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EACCES{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EADDRINUSE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EADDRNOTAVAIL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EAFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EAGAIN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EALREADY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EBADF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EBUSY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ECHILD{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EACCES{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EADDRINUSE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EADDRNOTAVAIL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EAFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EAGAIN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EALREADY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EBADF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EBUSY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ECHILD{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EADDRINUSE{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EADDRNOTAVAIL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EAFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EAGAIN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EALREADY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EBADF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EBUSY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ECHILD{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EADDRNOTAVAIL{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EAFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EAGAIN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EALREADY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EBADF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EBUSY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ECHILD{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EAFNOSUPPORT{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EAGAIN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EALREADY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EBADF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EBUSY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ECHILD{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EAGAIN{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EALREADY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EBADF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EBUSY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ECHILD{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EALREADY{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EBADF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EBUSY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ECHILD{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EBADF{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EBUSY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ECHILD{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EBUSY{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ECHILD{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ECHILD{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ECONNABORTED{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ECONNREFUSED{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ECONNRESET{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EDEADLK{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EDESTADDRREQ{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EDOM{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EEXIST{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EFAULT{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EFBIG{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EHOSTDOWN{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EHOSTUNREACH{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EINPROGRESS{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EINTR{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EINVAL{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EIO{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EISCONN{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EISDIR{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ELOOP{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EMFILE{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EMLINK{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EMSGSIZE{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENAMETOOLONG{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENETDOWN{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENETRESET{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENETUNREACH{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENFILE{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOBUFS{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENODEV{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOENT{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOEXEC{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOLCK{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOMEM{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOPROTOOPT{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOSPC{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOSYS{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOTCONN{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOTDIR{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOTEMPTY{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOTSOCK{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOTTY{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENXIO{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EOF{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EOPNOTSUPP{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EOVERFLOW{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EPERM{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EPFNOSUPPORT{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EPIPE{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EPROTONOSUPPORT{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EPROTOTYPE{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ERANGE{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EROFS{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ESHUTDOWN{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESHUTDOWN{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESHUTDOWN{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESHUTDOWN{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESHUTDOWN{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESHUTDOWN{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESHUTDOWN{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESHUTDOWN{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESHUTDOWN{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESHUTDOWN{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ESOCKTNOSUPPORT{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESOCKTNOSUPPORT{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESOCKTNOSUPPORT{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESOCKTNOSUPPORT{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESOCKTNOSUPPORT{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESOCKTNOSUPPORT{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESOCKTNOSUPPORT{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESOCKTNOSUPPORT{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESOCKTNOSUPPORT{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ESPIPE{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESPIPE{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESPIPE{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESPIPE{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESPIPE{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESPIPE{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESPIPE{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESPIPE{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ESRCH{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESRCH{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESRCH{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESRCH{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESRCH{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESRCH{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESRCH{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ETIMEDOUT{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ETIMEDOUT{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ETIMEDOUT{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ETIMEDOUT{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ETIMEDOUT{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ETIMEDOUT{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ETOOMANYREFS{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ETOOMANYREFS{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ETOOMANYREFS{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ETOOMANYREFS{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ETOOMANYREFS{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EWOULDBLOCK{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EWOULDBLOCK{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EWOULDBLOCK{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EWOULDBLOCK{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EXDEV{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EXDEV{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EXDEV{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortStream{}, \equals{SortStream{}, R} (Val:SortStream{}, Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortStream{}} (\and{SortStream{}} (Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(X0:SortK{}), Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(Y0:SortK{})), Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStream{}} (\and{SortStream{}} (Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(X0:SortK{}), Lbl'Hash'istream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStream{}} (\and{SortStream{}} (Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(X0:SortK{}), Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStream{}} (\and{SortStream{}} (Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(X0:SortK{}), Lbl'Hash'parseInput'LParUndsCommUndsRParUnds'K-IO'Unds'Stream'Unds'String'Unds'String{}(Y0:SortString{}, Y1:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'LParUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type'Unds'Map'Unds'K'Unds'ControlCellFragment{}(Y0:SortType{}, Y1:SortMap{}, Y2:SortK{}, Y3:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Param'Unds'Stmt'Unds'K'Unds'Map'Unds'ControlCellFragment{}(Y0:SortParam{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lblexecute'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lblpopx'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), LblsetEnv'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lblundefined'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type{}(Y0:SortType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'LParUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type'Unds'Map'Unds'K'Unds'ControlCellFragment{}(Y0:SortType{}, Y1:SortMap{}, Y2:SortK{}, Y3:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Param'Unds'Stmt'Unds'K'Unds'Map'Unds'ControlCellFragment{}(Y0:SortParam{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lblexecute'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lblpopx'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), LblsetEnv'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lblundefined'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type{}(Y0:SortType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'LParUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type'Unds'Map'Unds'K'Unds'ControlCellFragment{}(Y0:SortType{}, Y1:SortMap{}, Y2:SortK{}, Y3:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Param'Unds'Stmt'Unds'K'Unds'Map'Unds'ControlCellFragment{}(Y0:SortParam{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lblexecute'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lblpopx'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), LblsetEnv'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lblundefined'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type{}(Y0:SortType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type'Unds'Map'Unds'K'Unds'ControlCellFragment{}(Y0:SortType{}, Y1:SortMap{}, Y2:SortK{}, Y3:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Param'Unds'Stmt'Unds'K'Unds'Map'Unds'ControlCellFragment{}(Y0:SortParam{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblexecute'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblpopx'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblundefined'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type{}(Y0:SortType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type'Unds'Map'Unds'K'Unds'ControlCellFragment{}(Y0:SortType{}, Y1:SortMap{}, Y2:SortK{}, Y3:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Param'Unds'Stmt'Unds'K'Unds'Map'Unds'ControlCellFragment{}(Y0:SortParam{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblexecute'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblpopx'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblundefined'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type{}(Y0:SortType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type'Unds'Map'Unds'K'Unds'ControlCellFragment{}(Y0:SortType{}, Y1:SortMap{}, Y2:SortK{}, Y3:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Param'Unds'Stmt'Unds'K'Unds'Map'Unds'ControlCellFragment{}(Y0:SortParam{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblexecute'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblpopx'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblundefined'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type{}(Y0:SortType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type'Unds'Map'Unds'K'Unds'ControlCellFragment{}(Y0:SortType{}, Y1:SortMap{}, Y2:SortK{}, Y3:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Param'Unds'Stmt'Unds'K'Unds'Map'Unds'ControlCellFragment{}(Y0:SortParam{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblexecute'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblpopx'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblundefined'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type{}(Y0:SortType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type'Unds'Map'Unds'K'Unds'ControlCellFragment{}(Y0:SortType{}, Y1:SortMap{}, Y2:SortK{}, Y3:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Param'Unds'Stmt'Unds'K'Unds'Map'Unds'ControlCellFragment{}(Y0:SortParam{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblexecute'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblpopx'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblundefined'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type{}(Y0:SortType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type'Unds'Map'Unds'K'Unds'ControlCellFragment{}(Y0:SortType{}, Y1:SortMap{}, Y2:SortK{}, Y3:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Param'Unds'Stmt'Unds'K'Unds'Map'Unds'ControlCellFragment{}(Y0:SortParam{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lblexecute'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lblpopx'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lblundefined'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type{}(Y0:SortType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type'Unds'Map'Unds'K'Unds'ControlCellFragment{}(Y0:SortType{}, Y1:SortMap{}, Y2:SortK{}, Y3:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Param'Unds'Stmt'Unds'K'Unds'Map'Unds'ControlCellFragment{}(Y0:SortParam{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lblexecute'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lblpopx'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lblundefined'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type{}(Y0:SortType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type'Unds'Map'Unds'K'Unds'ControlCellFragment{}(Y0:SortType{}, Y1:SortMap{}, Y2:SortK{}, Y3:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Param'Unds'Stmt'Unds'K'Unds'Map'Unds'ControlCellFragment{}(Y0:SortParam{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblexecute'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblpopx'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblundefined'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type{}(Y0:SortType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type'Unds'Map'Unds'K'Unds'ControlCellFragment{}(Y0:SortType{}, Y1:SortMap{}, Y2:SortK{}, Y3:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Param'Unds'Stmt'Unds'K'Unds'Map'Unds'ControlCellFragment{}(Y0:SortParam{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblexecute'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblpopx'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblundefined'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type{}(Y0:SortType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type'Unds'Map'Unds'K'Unds'ControlCellFragment{}(Y0:SortType{}, Y1:SortMap{}, Y2:SortK{}, Y3:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Param'Unds'Stmt'Unds'K'Unds'Map'Unds'ControlCellFragment{}(Y0:SortParam{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblexecute'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblpopx'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblundefined'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type{}(Y0:SortType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type'Unds'Map'Unds'K'Unds'ControlCellFragment{}(Y0:SortType{}, Y1:SortMap{}, Y2:SortK{}, Y3:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Param'Unds'Stmt'Unds'K'Unds'Map'Unds'ControlCellFragment{}(Y0:SortParam{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblexecute'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblpopx'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblundefined'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type{}(Y0:SortType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type'Unds'Map'Unds'K'Unds'ControlCellFragment{}(Y0:SortType{}, Y1:SortMap{}, Y2:SortK{}, Y3:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Param'Unds'Stmt'Unds'K'Unds'Map'Unds'ControlCellFragment{}(Y0:SortParam{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lblexecute'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lblpopx'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lblundefined'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type{}(Y0:SortType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type'Unds'Map'Unds'K'Unds'ControlCellFragment{}(Y0:SortType{}, Y1:SortMap{}, Y2:SortK{}, Y3:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Param'Unds'Stmt'Unds'K'Unds'Map'Unds'ControlCellFragment{}(Y0:SortParam{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lblexecute'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lblpopx'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lblundefined'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type{}(Y0:SortType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type'Unds'Map'Unds'K'Unds'ControlCellFragment{}(Y0:SortType{}, Y1:SortMap{}, Y2:SortK{}, Y3:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Param'Unds'Stmt'Unds'K'Unds'Map'Unds'ControlCellFragment{}(Y0:SortParam{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblexecute'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblpopx'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblundefined'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type{}(Y0:SortType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type'Unds'Map'Unds'K'Unds'ControlCellFragment{}(Y0:SortType{}, Y1:SortMap{}, Y2:SortK{}, Y3:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Param'Unds'Stmt'Unds'K'Unds'Map'Unds'ControlCellFragment{}(Y0:SortParam{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblexecute'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblpopx'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblundefined'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type{}(Y0:SortType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type'Unds'Map'Unds'K'Unds'ControlCellFragment{}(Y0:SortType{}, Y1:SortMap{}, Y2:SortK{}, Y3:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Param'Unds'Stmt'Unds'K'Unds'Map'Unds'ControlCellFragment{}(Y0:SortParam{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblexecute'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblpopx'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblundefined'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type{}(Y0:SortType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type'Unds'Map'Unds'K'Unds'ControlCellFragment{}(Y0:SortType{}, Y1:SortMap{}, Y2:SortK{}, Y3:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Param'Unds'Stmt'Unds'K'Unds'Map'Unds'ControlCellFragment{}(Y0:SortParam{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblexecute'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblpopx'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblundefined'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type{}(Y0:SortType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'LParUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type'Unds'Map'Unds'K'Unds'ControlCellFragment{}(Y0:SortType{}, Y1:SortMap{}, Y2:SortK{}, Y3:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Param'Unds'Stmt'Unds'K'Unds'Map'Unds'ControlCellFragment{}(Y0:SortParam{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lblexecute'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lblpopx'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblsetEnv'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lblundefined'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type{}(Y0:SortType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type'Unds'Map'Unds'K'Unds'ControlCellFragment{}(Y0:SortType{}, Y1:SortMap{}, Y2:SortK{}, Y3:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Param'Unds'Stmt'Unds'K'Unds'Map'Unds'ControlCellFragment{}(Y0:SortParam{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblexecute'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblpopx'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblundefined'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type{}(Y0:SortType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type'Unds'Map'Unds'K'Unds'ControlCellFragment{}(Y0:SortType{}, Y1:SortMap{}, Y2:SortK{}, Y3:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Param'Unds'Stmt'Unds'K'Unds'Map'Unds'ControlCellFragment{}(Y0:SortParam{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblexecute'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblpopx'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblundefined'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type{}(Y0:SortType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type'Unds'Map'Unds'K'Unds'ControlCellFragment{}(Y0:SortType{}, Y1:SortMap{}, Y2:SortK{}, Y3:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Param'Unds'Stmt'Unds'K'Unds'Map'Unds'ControlCellFragment{}(Y0:SortParam{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblexecute'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblpopx'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblundefined'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type{}(Y0:SortType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type'Unds'Map'Unds'K'Unds'ControlCellFragment{}(Y0:SortType{}, Y1:SortMap{}, Y2:SortK{}, Y3:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Param'Unds'Stmt'Unds'K'Unds'Map'Unds'ControlCellFragment{}(Y0:SortParam{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblexecute'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblpopx'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblundefined'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type{}(Y0:SortType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type'Unds'Map'Unds'K'Unds'ControlCellFragment{}(Y0:SortType{}, Y1:SortMap{}, Y2:SortK{}, Y3:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Param'Unds'Stmt'Unds'K'Unds'Map'Unds'ControlCellFragment{}(Y0:SortParam{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblexecute'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblpopx'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblundefined'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type{}(Y0:SortType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type'Unds'Map'Unds'K'Unds'ControlCellFragment{}(Y0:SortType{}, Y1:SortMap{}, Y2:SortK{}, Y3:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Param'Unds'Stmt'Unds'K'Unds'Map'Unds'ControlCellFragment{}(Y0:SortParam{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblexecute'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblpopx'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblundefined'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type{}(Y0:SortType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type'Unds'Map'Unds'K'Unds'ControlCellFragment{}(Y0:SortType{}, Y1:SortMap{}, Y2:SortK{}, Y3:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Param'Unds'Stmt'Unds'K'Unds'Map'Unds'ControlCellFragment{}(Y0:SortParam{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblexecute'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblpopx'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblundefined'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type{}(Y0:SortType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type'Unds'Map'Unds'K'Unds'ControlCellFragment{}(Y0:SortType{}, Y1:SortMap{}, Y2:SortK{}, Y3:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Param'Unds'Stmt'Unds'K'Unds'Map'Unds'ControlCellFragment{}(Y0:SortParam{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblexecute'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblpopx'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblundefined'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type{}(Y0:SortType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type'Unds'Map'Unds'K'Unds'ControlCellFragment{}(Y0:SortType{}, Y1:SortMap{}, Y2:SortK{}, Y3:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Param'Unds'Stmt'Unds'K'Unds'Map'Unds'ControlCellFragment{}(Y0:SortParam{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblexecute'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblpopx'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblundefined'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type{}(Y0:SortType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type'Unds'Map'Unds'K'Unds'ControlCellFragment{}(Y0:SortType{}, Y1:SortMap{}, Y2:SortK{}, Y3:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Param'Unds'Stmt'Unds'K'Unds'Map'Unds'ControlCellFragment{}(Y0:SortParam{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblexecute'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblpopx'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblundefined'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type{}(Y0:SortType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type'Unds'Map'Unds'K'Unds'ControlCellFragment{}(Y0:SortType{}, Y1:SortMap{}, Y2:SortK{}, Y3:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Param'Unds'Stmt'Unds'K'Unds'Map'Unds'ControlCellFragment{}(Y0:SortParam{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblexecute'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblpopx'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblundefined'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type{}(Y0:SortType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type'Unds'Map'Unds'K'Unds'ControlCellFragment{}(Y0:SortType{}, Y1:SortMap{}, Y2:SortK{}, Y3:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Param'Unds'Stmt'Unds'K'Unds'Map'Unds'ControlCellFragment{}(Y0:SortParam{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblexecute'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblpopx'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblundefined'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type{}(Y0:SortType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type'Unds'Map'Unds'K'Unds'ControlCellFragment{}(Y0:SortType{}, Y1:SortMap{}, Y2:SortK{}, Y3:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Param'Unds'Stmt'Unds'K'Unds'Map'Unds'ControlCellFragment{}(Y0:SortParam{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lblexecute'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lblpopx'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lblundefined'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type{}(Y0:SortType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type'Unds'Map'Unds'K'Unds'ControlCellFragment{}(Y0:SortType{}, Y1:SortMap{}, Y2:SortK{}, Y3:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Param'Unds'Stmt'Unds'K'Unds'Map'Unds'ControlCellFragment{}(Y0:SortParam{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lblexecute'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lblpopx'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lblundefined'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type{}(Y0:SortType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(K0:SortK{}, K1:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{})), Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}), \and{SortK{}} (X1:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type'Unds'Map'Unds'K'Unds'ControlCellFragment{}(Y0:SortType{}, Y1:SortMap{}, Y2:SortK{}, Y3:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Param'Unds'Stmt'Unds'K'Unds'Map'Unds'ControlCellFragment{}(Y0:SortParam{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(X0:SortK{}, X1:SortK{}), Lblexecute'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(X0:SortK{}, X1:SortK{}), Lblpopx'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(X0:SortK{}, X1:SortK{}), LblsetEnv'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(X0:SortK{}, X1:SortK{}), Lblundefined'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type{}(Y0:SortType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type'Unds'Map'Unds'K'Unds'ControlCellFragment{}(Y0:SortType{}, Y1:SortMap{}, Y2:SortK{}, Y3:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Param'Unds'Stmt'Unds'K'Unds'Map'Unds'ControlCellFragment{}(Y0:SortParam{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblexecute'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblpopx'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblundefined'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type{}(Y0:SortType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'LParUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type'Unds'Map'Unds'K'Unds'ControlCellFragment{}(Y0:SortType{}, Y1:SortMap{}, Y2:SortK{}, Y3:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Param'Unds'Stmt'Unds'K'Unds'Map'Unds'ControlCellFragment{}(Y0:SortParam{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lblexecute'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lblpopx'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblsetEnv'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lblundefined'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type{}(Y0:SortType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(K0:SortK{}, K1:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{})), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}), \and{SortK{}} (X1:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type'Unds'Map'Unds'K'Unds'ControlCellFragment{}(Y0:SortType{}, Y1:SortMap{}, Y2:SortK{}, Y3:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Param'Unds'Stmt'Unds'K'Unds'Map'Unds'ControlCellFragment{}(Y0:SortParam{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lblexecute'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lblpopx'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), LblsetEnv'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lblundefined'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type{}(Y0:SortType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'LParUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type'Unds'Map'Unds'K'Unds'ControlCellFragment{}(Y0:SortType{}, Y1:SortMap{}, Y2:SortK{}, Y3:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Param'Unds'Stmt'Unds'K'Unds'Map'Unds'ControlCellFragment{}(Y0:SortParam{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lblexecute'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lblpopx'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblsetEnv'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lblundefined'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type{}(Y0:SortType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K0'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type'Unds'Map'Unds'K'Unds'ControlCellFragment{}(Y0:SortType{}, Y1:SortMap{}, Y2:SortK{}, Y3:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K0'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Param'Unds'Stmt'Unds'K'Unds'Map'Unds'ControlCellFragment{}(Y0:SortParam{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K0'Unds'{}(X0:SortK{}), Lblexecute'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K0'Unds'{}(X0:SortK{}), Lblpopx'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K0'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K0'Unds'{}(X0:SortK{}), Lblundefined'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type{}(Y0:SortType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K1'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type'Unds'Map'Unds'K'Unds'ControlCellFragment{}(Y0:SortType{}, Y1:SortMap{}, Y2:SortK{}, Y3:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K1'Unds'{}(X0:SortK{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Param'Unds'Stmt'Unds'K'Unds'Map'Unds'ControlCellFragment{}(Y0:SortParam{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K1'Unds'{}(X0:SortK{}), Lblexecute'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K1'Unds'{}(X0:SortK{}), Lblpopx'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K1'Unds'{}(X0:SortK{}), LblsetEnv'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K1'Unds'{}(X0:SortK{}), Lblundefined'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type{}(Y0:SortType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(), Lbl'LParUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type'Unds'Map'Unds'K'Unds'ControlCellFragment{}(Y0:SortType{}, Y1:SortMap{}, Y2:SortK{}, Y3:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Param'Unds'Stmt'Unds'K'Unds'Map'Unds'ControlCellFragment{}(Y0:SortParam{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(), Lblexecute'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(), Lblpopx'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(), LblsetEnv'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(), Lblundefined'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type{}(Y0:SortType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'LParUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type'Unds'Map'Unds'K'Unds'ControlCellFragment{}(Y0:SortType{}, Y1:SortMap{}, Y2:SortK{}, Y3:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Param'Unds'Stmt'Unds'K'Unds'Map'Unds'ControlCellFragment{}(Y0:SortParam{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lblexecute'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lblpopx'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblsetEnv'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lblundefined'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type{}(Y0:SortType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'LParUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type'Unds'Map'Unds'K'Unds'ControlCellFragment{}(Y0:SortType{}, Y1:SortMap{}, Y2:SortK{}, Y3:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Param'Unds'Stmt'Unds'K'Unds'Map'Unds'ControlCellFragment{}(Y0:SortParam{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lblexecute'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lblpopx'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblsetEnv'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lblundefined'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type{}(Y0:SortType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'LParUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type'Unds'Map'Unds'K'Unds'ControlCellFragment{}(Y0:SortType{}, Y1:SortMap{}, Y2:SortK{}, Y3:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Param'Unds'Stmt'Unds'K'Unds'Map'Unds'ControlCellFragment{}(Y0:SortParam{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lblexecute'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lblpopx'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblsetEnv'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lblundefined'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type{}(Y0:SortType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'LParUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type'Unds'Map'Unds'K'Unds'ControlCellFragment{}(Y0:SortType{}, Y1:SortMap{}, Y2:SortK{}, Y3:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Param'Unds'Stmt'Unds'K'Unds'Map'Unds'ControlCellFragment{}(Y0:SortParam{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lblexecute'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lblpopx'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), LblsetEnv'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lblundefined'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type{}(Y0:SortType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'LParUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type'Unds'Map'Unds'K'Unds'ControlCellFragment{}(Y0:SortType{}, Y1:SortMap{}, Y2:SortK{}, Y3:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Param'Unds'Stmt'Unds'K'Unds'Map'Unds'ControlCellFragment{}(Y0:SortParam{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lblexecute'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lblpopx'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblsetEnv'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lblundefined'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type{}(Y0:SortType{}))) [constructor{}()] // no confusion different constructors
  axiom{R, SortSort} \exists{R} (Val:SortSort, \equals{SortSort, R} (Val:SortSort, Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortSort}(K0:SortBool{}, K1:SortSort, K2:SortSort))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStream{}, \equals{SortStream{}, R} (Val:SortStream{}, Lbl'Hash'istream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortStream{}} (\and{SortStream{}} (Lbl'Hash'istream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(X0:SortInt{}), Lbl'Hash'istream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(Y0:SortInt{})), Lbl'Hash'istream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStream{}} (\and{SortStream{}} (Lbl'Hash'istream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(X0:SortInt{}), Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStream{}} (\and{SortStream{}} (Lbl'Hash'istream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(X0:SortInt{}), Lbl'Hash'parseInput'LParUndsCommUndsRParUnds'K-IO'Unds'Stream'Unds'String'Unds'String{}(Y0:SortString{}, Y1:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortK{}, \equals{SortK{}, R} (Val:SortK{}, Lbl'Hash'log{}(K0:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortK{}, \equals{SortK{}, R} (Val:SortK{}, Lbl'Hash'logToFile{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'noParse{}(K0:SortString{}))) [functional{}()] // functional
  axiom{}\implies{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'noParse{}(X0:SortString{}), Lbl'Hash'noParse{}(Y0:SortString{})), Lbl'Hash'noParse{}(\and{SortString{}} (X0:SortString{}, Y0:SortString{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'noParse{}(X0:SortString{}), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortStream{}, \equals{SortStream{}, R} (Val:SortStream{}, Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortStream{}} (\and{SortStream{}} (Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(X0:SortInt{}), Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(Y0:SortInt{})), Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStream{}} (\and{SortStream{}} (Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(X0:SortInt{}), Lbl'Hash'parseInput'LParUndsCommUndsRParUnds'K-IO'Unds'Stream'Unds'String'Unds'String{}(Y0:SortString{}, Y1:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortStream{}, \equals{SortStream{}, R} (Val:SortStream{}, Lbl'Hash'parseInput'LParUndsCommUndsRParUnds'K-IO'Unds'Stream'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{}\implies{SortStream{}} (\and{SortStream{}} (Lbl'Hash'parseInput'LParUndsCommUndsRParUnds'K-IO'Unds'Stream'Unds'String'Unds'String{}(X0:SortString{}, X1:SortString{}), Lbl'Hash'parseInput'LParUndsCommUndsRParUnds'K-IO'Unds'Stream'Unds'String'Unds'String{}(Y0:SortString{}, Y1:SortString{})), Lbl'Hash'parseInput'LParUndsCommUndsRParUnds'K-IO'Unds'Stream'Unds'String'Unds'String{}(\and{SortString{}} (X0:SortString{}, Y0:SortString{}), \and{SortString{}} (X1:SortString{}, Y1:SortString{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortK{}, \equals{SortK{}, R} (Val:SortK{}, Lbl'Hash'remove'LParUndsRParUnds'K-IO'Unds'K'Unds'String{}(K0:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Hash'stderr'Unds'K-IO'Unds'Int{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Hash'stdin'Unds'K-IO'Unds'Int{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Hash'stdout'Unds'K-IO'Unds'Int{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'systemResult{}(K0:SortInt{}, K1:SortString{}, K2:SortString{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'systemResult{}(X0:SortInt{}, X1:SortString{}, X2:SortString{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{})), Lbl'Hash'systemResult{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}), \and{SortString{}} (X1:SortString{}, Y1:SortString{}), \and{SortString{}} (X2:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'systemResult{}(X0:SortInt{}, X1:SortString{}, X2:SortString{}), Lbl'LParUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type'Unds'Map'Unds'K'Unds'ControlCellFragment{}(Y0:SortType{}, Y1:SortMap{}, Y2:SortK{}, Y3:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'systemResult{}(X0:SortInt{}, X1:SortString{}, X2:SortString{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Param'Unds'Stmt'Unds'K'Unds'Map'Unds'ControlCellFragment{}(Y0:SortParam{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'systemResult{}(X0:SortInt{}, X1:SortString{}, X2:SortString{}), Lblexecute'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'systemResult{}(X0:SortInt{}, X1:SortString{}, X2:SortString{}), Lblpopx'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'systemResult{}(X0:SortInt{}, X1:SortString{}, X2:SortString{}), LblsetEnv'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'systemResult{}(X0:SortInt{}, X1:SortString{}, X2:SortString{}), Lblundefined'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type{}(Y0:SortType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOFile{}, \equals{SortIOFile{}, R} (Val:SortIOFile{}, Lbl'Hash'tempFile{}(K0:SortString{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortIOFile{}} (\and{SortIOFile{}} (Lbl'Hash'tempFile{}(X0:SortString{}, X1:SortInt{}), Lbl'Hash'tempFile{}(Y0:SortString{}, Y1:SortInt{})), Lbl'Hash'tempFile{}(\and{SortString{}} (X0:SortString{}, Y0:SortString{}), \and{SortInt{}} (X1:SortInt{}, Y1:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortK{}, \equals{SortK{}, R} (Val:SortK{}, Lbl'Hash'trace{}(K0:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortK{}, \equals{SortK{}, R} (Val:SortK{}, Lbl'Hash'traceK{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'unknownIOError{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'unknownIOError{}(X0:SortInt{}), Lbl'Hash'unknownIOError{}(Y0:SortInt{})), Lbl'Hash'unknownIOError{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'LParUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type'Unds'Map'Unds'K'Unds'ControlCellFragment{}(K0:SortType{}, K1:SortMap{}, K2:SortK{}, K3:SortControlCellFragment{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'LParUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type'Unds'Map'Unds'K'Unds'ControlCellFragment{}(X0:SortType{}, X1:SortMap{}, X2:SortK{}, X3:SortControlCellFragment{}), Lbl'LParUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type'Unds'Map'Unds'K'Unds'ControlCellFragment{}(Y0:SortType{}, Y1:SortMap{}, Y2:SortK{}, Y3:SortControlCellFragment{})), Lbl'LParUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type'Unds'Map'Unds'K'Unds'ControlCellFragment{}(\and{SortType{}} (X0:SortType{}, Y0:SortType{}), \and{SortMap{}} (X1:SortMap{}, Y1:SortMap{}), \and{SortK{}} (X2:SortK{}, Y2:SortK{}), \and{SortControlCellFragment{}} (X3:SortControlCellFragment{}, Y3:SortControlCellFragment{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'LParUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type'Unds'Map'Unds'K'Unds'ControlCellFragment{}(X0:SortType{}, X1:SortMap{}, X2:SortK{}, X3:SortControlCellFragment{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Param'Unds'Stmt'Unds'K'Unds'Map'Unds'ControlCellFragment{}(Y0:SortParam{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortControlCellFragment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'LParUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type'Unds'Map'Unds'K'Unds'ControlCellFragment{}(X0:SortType{}, X1:SortMap{}, X2:SortK{}, X3:SortControlCellFragment{}), Lblexecute'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'LParUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type'Unds'Map'Unds'K'Unds'ControlCellFragment{}(X0:SortType{}, X1:SortMap{}, X2:SortK{}, X3:SortControlCellFragment{}), Lblpopx'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'LParUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type'Unds'Map'Unds'K'Unds'ControlCellFragment{}(X0:SortType{}, X1:SortMap{}, X2:SortK{}, X3:SortControlCellFragment{}), LblsetEnv'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'LParUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type'Unds'Map'Unds'K'Unds'ControlCellFragment{}(X0:SortType{}, X1:SortMap{}, X2:SortK{}, X3:SortControlCellFragment{}), Lblundefined'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type{}(Y0:SortType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Param'Unds'Stmt'Unds'K'Unds'Map'Unds'ControlCellFragment{}(K0:SortParam{}, K1:SortStmt{}, K2:SortK{}, K3:SortMap{}, K4:SortControlCellFragment{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Param'Unds'Stmt'Unds'K'Unds'Map'Unds'ControlCellFragment{}(X0:SortParam{}, X1:SortStmt{}, X2:SortK{}, X3:SortMap{}, X4:SortControlCellFragment{}), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Param'Unds'Stmt'Unds'K'Unds'Map'Unds'ControlCellFragment{}(Y0:SortParam{}, Y1:SortStmt{}, Y2:SortK{}, Y3:SortMap{}, Y4:SortControlCellFragment{})), Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Param'Unds'Stmt'Unds'K'Unds'Map'Unds'ControlCellFragment{}(\and{SortParam{}} (X0:SortParam{}, Y0:SortParam{}), \and{SortStmt{}} (X1:SortStmt{}, Y1:SortStmt{}), \and{SortK{}} (X2:SortK{}, Y2:SortK{}), \and{SortMap{}} (X3:SortMap{}, Y3:SortMap{}), \and{SortControlCellFragment{}} (X4:SortControlCellFragment{}, Y4:SortControlCellFragment{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Param'Unds'Stmt'Unds'K'Unds'Map'Unds'ControlCellFragment{}(X0:SortParam{}, X1:SortStmt{}, X2:SortK{}, X3:SortMap{}, X4:SortControlCellFragment{}), Lblexecute'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Param'Unds'Stmt'Unds'K'Unds'Map'Unds'ControlCellFragment{}(X0:SortParam{}, X1:SortStmt{}, X2:SortK{}, X3:SortMap{}, X4:SortControlCellFragment{}), Lblpopx'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Param'Unds'Stmt'Unds'K'Unds'Map'Unds'ControlCellFragment{}(X0:SortParam{}, X1:SortStmt{}, X2:SortK{}, X3:SortMap{}, X4:SortControlCellFragment{}), LblsetEnv'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Param'Unds'Stmt'Unds'K'Unds'Map'Unds'ControlCellFragment{}(X0:SortParam{}, X1:SortStmt{}, X2:SortK{}, X3:SortMap{}, X4:SortControlCellFragment{}), Lblundefined'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type{}(Y0:SortType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(K0:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{})), Lbl'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbllookup'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbllvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblread'LParRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), LblsizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblspawn'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(K0:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{})), Lbl-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbllookup'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbllvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblread'LParRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), LblsizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblspawn'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortList{}, \equals{SortList{}, R} (Val:SortList{}, Lbl'Stop'List{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExps{}, \equals{SortExps{}, R} (Val:SortExps{}, Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps'QuotRBraUnds'Exps{}())) [functional{}()] // functional
  axiom{}\not{SortExps{}} (\and{SortExps{}} (Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps'QuotRBraUnds'Exps{}(), Lbl'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortParams{}, \equals{SortParams{}, R} (Val:SortParams{}, Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Params'Unds'Param'Unds'Params'QuotRBraUnds'Params{}())) [functional{}()] // functional
  axiom{}\not{SortParams{}} (\and{SortParams{}} (Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Params'Unds'Param'Unds'Params'QuotRBraUnds'Params{}(), Lbl'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Params'Unds'Param'Unds'Params{}(Y0:SortParam{}, Y1:SortParams{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortTypes{}, \equals{SortTypes{}, R} (Val:SortTypes{}, Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}())) [functional{}()] // functional
  axiom{}\not{SortTypes{}} (\and{SortTypes{}} (Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}(), Lbl'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types{}(Y0:SortType{}, Y1:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortVals{}, \equals{SortVals{}, R} (Val:SortVals{}, Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}())) [functional{}()] // functional
  axiom{}\not{SortVals{}} (\and{SortVals{}} (Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}(), Lbl'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals{}(Y0:SortVal{}, Y1:SortVals{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, Lbl'Stop'Map{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, Lbl'Stop'Set{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortTCell{}, \equals{SortTCell{}, R} (Val:SortTCell{}, Lbl'-LT-'T'-GT-'{}(K0:SortThreadsCell{}, K1:SortGenvCell{}, K2:SortStoreCell{}, K3:SortBusyCell{}, K4:SortTerminatedCell{}, K5:SortInputCell{}, K6:SortOutputCell{}, K7:SortNextLocCell{}))) [functional{}()] // functional
  axiom{}\implies{SortTCell{}} (\and{SortTCell{}} (Lbl'-LT-'T'-GT-'{}(X0:SortThreadsCell{}, X1:SortGenvCell{}, X2:SortStoreCell{}, X3:SortBusyCell{}, X4:SortTerminatedCell{}, X5:SortInputCell{}, X6:SortOutputCell{}, X7:SortNextLocCell{}), Lbl'-LT-'T'-GT-'{}(Y0:SortThreadsCell{}, Y1:SortGenvCell{}, Y2:SortStoreCell{}, Y3:SortBusyCell{}, Y4:SortTerminatedCell{}, Y5:SortInputCell{}, Y6:SortOutputCell{}, Y7:SortNextLocCell{})), Lbl'-LT-'T'-GT-'{}(\and{SortThreadsCell{}} (X0:SortThreadsCell{}, Y0:SortThreadsCell{}), \and{SortGenvCell{}} (X1:SortGenvCell{}, Y1:SortGenvCell{}), \and{SortStoreCell{}} (X2:SortStoreCell{}, Y2:SortStoreCell{}), \and{SortBusyCell{}} (X3:SortBusyCell{}, Y3:SortBusyCell{}), \and{SortTerminatedCell{}} (X4:SortTerminatedCell{}, Y4:SortTerminatedCell{}), \and{SortInputCell{}} (X5:SortInputCell{}, Y5:SortInputCell{}), \and{SortOutputCell{}} (X6:SortOutputCell{}, Y6:SortOutputCell{}), \and{SortNextLocCell{}} (X7:SortNextLocCell{}, Y7:SortNextLocCell{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTCellFragment{}, \equals{SortTCellFragment{}, R} (Val:SortTCellFragment{}, Lbl'-LT-'T'-GT-'-fragment{}(K0:SortThreadsCellOpt{}, K1:SortGenvCellOpt{}, K2:SortStoreCellOpt{}, K3:SortBusyCellOpt{}, K4:SortTerminatedCellOpt{}, K5:SortInputCellOpt{}, K6:SortOutputCellOpt{}, K7:SortNextLocCellOpt{}))) [functional{}()] // functional
  axiom{}\implies{SortTCellFragment{}} (\and{SortTCellFragment{}} (Lbl'-LT-'T'-GT-'-fragment{}(X0:SortThreadsCellOpt{}, X1:SortGenvCellOpt{}, X2:SortStoreCellOpt{}, X3:SortBusyCellOpt{}, X4:SortTerminatedCellOpt{}, X5:SortInputCellOpt{}, X6:SortOutputCellOpt{}, X7:SortNextLocCellOpt{}), Lbl'-LT-'T'-GT-'-fragment{}(Y0:SortThreadsCellOpt{}, Y1:SortGenvCellOpt{}, Y2:SortStoreCellOpt{}, Y3:SortBusyCellOpt{}, Y4:SortTerminatedCellOpt{}, Y5:SortInputCellOpt{}, Y6:SortOutputCellOpt{}, Y7:SortNextLocCellOpt{})), Lbl'-LT-'T'-GT-'-fragment{}(\and{SortThreadsCellOpt{}} (X0:SortThreadsCellOpt{}, Y0:SortThreadsCellOpt{}), \and{SortGenvCellOpt{}} (X1:SortGenvCellOpt{}, Y1:SortGenvCellOpt{}), \and{SortStoreCellOpt{}} (X2:SortStoreCellOpt{}, Y2:SortStoreCellOpt{}), \and{SortBusyCellOpt{}} (X3:SortBusyCellOpt{}, Y3:SortBusyCellOpt{}), \and{SortTerminatedCellOpt{}} (X4:SortTerminatedCellOpt{}, Y4:SortTerminatedCellOpt{}), \and{SortInputCellOpt{}} (X5:SortInputCellOpt{}, Y5:SortInputCellOpt{}), \and{SortOutputCellOpt{}} (X6:SortOutputCellOpt{}, Y6:SortOutputCellOpt{}), \and{SortNextLocCellOpt{}} (X7:SortNextLocCellOpt{}, Y7:SortNextLocCellOpt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortBusyCell{}, \equals{SortBusyCell{}, R} (Val:SortBusyCell{}, Lbl'-LT-'busy'-GT-'{}(K0:SortSet{}))) [functional{}()] // functional
  axiom{}\implies{SortBusyCell{}} (\and{SortBusyCell{}} (Lbl'-LT-'busy'-GT-'{}(X0:SortSet{}), Lbl'-LT-'busy'-GT-'{}(Y0:SortSet{})), Lbl'-LT-'busy'-GT-'{}(\and{SortSet{}} (X0:SortSet{}, Y0:SortSet{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortControlCell{}, \equals{SortControlCell{}, R} (Val:SortControlCell{}, Lbl'-LT-'control'-GT-'{}(K0:SortFstackCell{}, K1:SortXstackCell{}, K2:SortReturnTypeCell{}))) [functional{}()] // functional
  axiom{}\implies{SortControlCell{}} (\and{SortControlCell{}} (Lbl'-LT-'control'-GT-'{}(X0:SortFstackCell{}, X1:SortXstackCell{}, X2:SortReturnTypeCell{}), Lbl'-LT-'control'-GT-'{}(Y0:SortFstackCell{}, Y1:SortXstackCell{}, Y2:SortReturnTypeCell{})), Lbl'-LT-'control'-GT-'{}(\and{SortFstackCell{}} (X0:SortFstackCell{}, Y0:SortFstackCell{}), \and{SortXstackCell{}} (X1:SortXstackCell{}, Y1:SortXstackCell{}), \and{SortReturnTypeCell{}} (X2:SortReturnTypeCell{}, Y2:SortReturnTypeCell{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortControlCellFragment{}, \equals{SortControlCellFragment{}, R} (Val:SortControlCellFragment{}, Lbl'-LT-'control'-GT-'-fragment{}(K0:SortFstackCellOpt{}, K1:SortXstackCellOpt{}, K2:SortReturnTypeCellOpt{}))) [functional{}()] // functional
  axiom{}\implies{SortControlCellFragment{}} (\and{SortControlCellFragment{}} (Lbl'-LT-'control'-GT-'-fragment{}(X0:SortFstackCellOpt{}, X1:SortXstackCellOpt{}, X2:SortReturnTypeCellOpt{}), Lbl'-LT-'control'-GT-'-fragment{}(Y0:SortFstackCellOpt{}, Y1:SortXstackCellOpt{}, Y2:SortReturnTypeCellOpt{})), Lbl'-LT-'control'-GT-'-fragment{}(\and{SortFstackCellOpt{}} (X0:SortFstackCellOpt{}, Y0:SortFstackCellOpt{}), \and{SortXstackCellOpt{}} (X1:SortXstackCellOpt{}, Y1:SortXstackCellOpt{}), \and{SortReturnTypeCellOpt{}} (X2:SortReturnTypeCellOpt{}, Y2:SortReturnTypeCellOpt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortEnvCell{}, \equals{SortEnvCell{}, R} (Val:SortEnvCell{}, Lbl'-LT-'env'-GT-'{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortEnvCell{}} (\and{SortEnvCell{}} (Lbl'-LT-'env'-GT-'{}(X0:SortMap{}), Lbl'-LT-'env'-GT-'{}(Y0:SortMap{})), Lbl'-LT-'env'-GT-'{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortFstackCell{}, \equals{SortFstackCell{}, R} (Val:SortFstackCell{}, Lbl'-LT-'fstack'-GT-'{}(K0:SortList{}))) [functional{}()] // functional
  axiom{}\implies{SortFstackCell{}} (\and{SortFstackCell{}} (Lbl'-LT-'fstack'-GT-'{}(X0:SortList{}), Lbl'-LT-'fstack'-GT-'{}(Y0:SortList{})), Lbl'-LT-'fstack'-GT-'{}(\and{SortList{}} (X0:SortList{}, Y0:SortList{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortGeneratedCounterCell{}, \equals{SortGeneratedCounterCell{}, R} (Val:SortGeneratedCounterCell{}, Lbl'-LT-'generatedCounter'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortGeneratedCounterCell{}} (\and{SortGeneratedCounterCell{}} (Lbl'-LT-'generatedCounter'-GT-'{}(X0:SortInt{}), Lbl'-LT-'generatedCounter'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'generatedCounter'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortGeneratedTopCell{}, \equals{SortGeneratedTopCell{}, R} (Val:SortGeneratedTopCell{}, Lbl'-LT-'generatedTop'-GT-'{}(K0:SortTCell{}, K1:SortGeneratedCounterCell{}))) [functional{}()] // functional
  axiom{}\implies{SortGeneratedTopCell{}} (\and{SortGeneratedTopCell{}} (Lbl'-LT-'generatedTop'-GT-'{}(X0:SortTCell{}, X1:SortGeneratedCounterCell{}), Lbl'-LT-'generatedTop'-GT-'{}(Y0:SortTCell{}, Y1:SortGeneratedCounterCell{})), Lbl'-LT-'generatedTop'-GT-'{}(\and{SortTCell{}} (X0:SortTCell{}, Y0:SortTCell{}), \and{SortGeneratedCounterCell{}} (X1:SortGeneratedCounterCell{}, Y1:SortGeneratedCounterCell{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortGeneratedTopCellFragment{}, \equals{SortGeneratedTopCellFragment{}, R} (Val:SortGeneratedTopCellFragment{}, Lbl'-LT-'generatedTop'-GT-'-fragment{}(K0:SortTCellOpt{}, K1:SortGeneratedCounterCellOpt{}))) [functional{}()] // functional
  axiom{}\implies{SortGeneratedTopCellFragment{}} (\and{SortGeneratedTopCellFragment{}} (Lbl'-LT-'generatedTop'-GT-'-fragment{}(X0:SortTCellOpt{}, X1:SortGeneratedCounterCellOpt{}), Lbl'-LT-'generatedTop'-GT-'-fragment{}(Y0:SortTCellOpt{}, Y1:SortGeneratedCounterCellOpt{})), Lbl'-LT-'generatedTop'-GT-'-fragment{}(\and{SortTCellOpt{}} (X0:SortTCellOpt{}, Y0:SortTCellOpt{}), \and{SortGeneratedCounterCellOpt{}} (X1:SortGeneratedCounterCellOpt{}, Y1:SortGeneratedCounterCellOpt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortGenvCell{}, \equals{SortGenvCell{}, R} (Val:SortGenvCell{}, Lbl'-LT-'genv'-GT-'{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortGenvCell{}} (\and{SortGenvCell{}} (Lbl'-LT-'genv'-GT-'{}(X0:SortMap{}), Lbl'-LT-'genv'-GT-'{}(Y0:SortMap{})), Lbl'-LT-'genv'-GT-'{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortHoldsCell{}, \equals{SortHoldsCell{}, R} (Val:SortHoldsCell{}, Lbl'-LT-'holds'-GT-'{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortHoldsCell{}} (\and{SortHoldsCell{}} (Lbl'-LT-'holds'-GT-'{}(X0:SortMap{}), Lbl'-LT-'holds'-GT-'{}(Y0:SortMap{})), Lbl'-LT-'holds'-GT-'{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortIdCell{}, \equals{SortIdCell{}, R} (Val:SortIdCell{}, Lbl'-LT-'id'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortIdCell{}} (\and{SortIdCell{}} (Lbl'-LT-'id'-GT-'{}(X0:SortInt{}), Lbl'-LT-'id'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'id'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortInputCell{}, \equals{SortInputCell{}, R} (Val:SortInputCell{}, Lbl'-LT-'input'-GT-'{}(K0:SortList{}))) [functional{}()] // functional
  axiom{}\implies{SortInputCell{}} (\and{SortInputCell{}} (Lbl'-LT-'input'-GT-'{}(X0:SortList{}), Lbl'-LT-'input'-GT-'{}(Y0:SortList{})), Lbl'-LT-'input'-GT-'{}(\and{SortList{}} (X0:SortList{}, Y0:SortList{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortKCell{}, \equals{SortKCell{}, R} (Val:SortKCell{}, Lbl'-LT-'k'-GT-'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKCell{}} (\and{SortKCell{}} (Lbl'-LT-'k'-GT-'{}(X0:SortK{}), Lbl'-LT-'k'-GT-'{}(Y0:SortK{})), Lbl'-LT-'k'-GT-'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortNextLocCell{}, \equals{SortNextLocCell{}, R} (Val:SortNextLocCell{}, Lbl'-LT-'nextLoc'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortNextLocCell{}} (\and{SortNextLocCell{}} (Lbl'-LT-'nextLoc'-GT-'{}(X0:SortInt{}), Lbl'-LT-'nextLoc'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'nextLoc'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortOutputCell{}, \equals{SortOutputCell{}, R} (Val:SortOutputCell{}, Lbl'-LT-'output'-GT-'{}(K0:SortList{}))) [functional{}()] // functional
  axiom{}\implies{SortOutputCell{}} (\and{SortOutputCell{}} (Lbl'-LT-'output'-GT-'{}(X0:SortList{}), Lbl'-LT-'output'-GT-'{}(Y0:SortList{})), Lbl'-LT-'output'-GT-'{}(\and{SortList{}} (X0:SortList{}, Y0:SortList{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortReturnTypeCell{}, \equals{SortReturnTypeCell{}, R} (Val:SortReturnTypeCell{}, Lbl'-LT-'returnType'-GT-'{}(K0:SortType{}))) [functional{}()] // functional
  axiom{}\implies{SortReturnTypeCell{}} (\and{SortReturnTypeCell{}} (Lbl'-LT-'returnType'-GT-'{}(X0:SortType{}), Lbl'-LT-'returnType'-GT-'{}(Y0:SortType{})), Lbl'-LT-'returnType'-GT-'{}(\and{SortType{}} (X0:SortType{}, Y0:SortType{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortStoreCell{}, \equals{SortStoreCell{}, R} (Val:SortStoreCell{}, Lbl'-LT-'store'-GT-'{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortStoreCell{}} (\and{SortStoreCell{}} (Lbl'-LT-'store'-GT-'{}(X0:SortMap{}), Lbl'-LT-'store'-GT-'{}(Y0:SortMap{})), Lbl'-LT-'store'-GT-'{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTerminatedCell{}, \equals{SortTerminatedCell{}, R} (Val:SortTerminatedCell{}, Lbl'-LT-'terminated'-GT-'{}(K0:SortSet{}))) [functional{}()] // functional
  axiom{}\implies{SortTerminatedCell{}} (\and{SortTerminatedCell{}} (Lbl'-LT-'terminated'-GT-'{}(X0:SortSet{}), Lbl'-LT-'terminated'-GT-'{}(Y0:SortSet{})), Lbl'-LT-'terminated'-GT-'{}(\and{SortSet{}} (X0:SortSet{}, Y0:SortSet{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortThreadCell{}, \equals{SortThreadCell{}, R} (Val:SortThreadCell{}, Lbl'-LT-'thread'-GT-'{}(K0:SortIdCell{}, K1:SortKCell{}, K2:SortControlCell{}, K3:SortEnvCell{}, K4:SortHoldsCell{}))) [functional{}()] // functional
  axiom{}\implies{SortThreadCell{}} (\and{SortThreadCell{}} (Lbl'-LT-'thread'-GT-'{}(X0:SortIdCell{}, X1:SortKCell{}, X2:SortControlCell{}, X3:SortEnvCell{}, X4:SortHoldsCell{}), Lbl'-LT-'thread'-GT-'{}(Y0:SortIdCell{}, Y1:SortKCell{}, Y2:SortControlCell{}, Y3:SortEnvCell{}, Y4:SortHoldsCell{})), Lbl'-LT-'thread'-GT-'{}(\and{SortIdCell{}} (X0:SortIdCell{}, Y0:SortIdCell{}), \and{SortKCell{}} (X1:SortKCell{}, Y1:SortKCell{}), \and{SortControlCell{}} (X2:SortControlCell{}, Y2:SortControlCell{}), \and{SortEnvCell{}} (X3:SortEnvCell{}, Y3:SortEnvCell{}), \and{SortHoldsCell{}} (X4:SortHoldsCell{}, Y4:SortHoldsCell{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortThreadCellFragment{}, \equals{SortThreadCellFragment{}, R} (Val:SortThreadCellFragment{}, Lbl'-LT-'thread'-GT-'-fragment{}(K0:SortIdCellOpt{}, K1:SortKCellOpt{}, K2:SortControlCellOpt{}, K3:SortEnvCellOpt{}, K4:SortHoldsCellOpt{}))) [functional{}()] // functional
  axiom{}\implies{SortThreadCellFragment{}} (\and{SortThreadCellFragment{}} (Lbl'-LT-'thread'-GT-'-fragment{}(X0:SortIdCellOpt{}, X1:SortKCellOpt{}, X2:SortControlCellOpt{}, X3:SortEnvCellOpt{}, X4:SortHoldsCellOpt{}), Lbl'-LT-'thread'-GT-'-fragment{}(Y0:SortIdCellOpt{}, Y1:SortKCellOpt{}, Y2:SortControlCellOpt{}, Y3:SortEnvCellOpt{}, Y4:SortHoldsCellOpt{})), Lbl'-LT-'thread'-GT-'-fragment{}(\and{SortIdCellOpt{}} (X0:SortIdCellOpt{}, Y0:SortIdCellOpt{}), \and{SortKCellOpt{}} (X1:SortKCellOpt{}, Y1:SortKCellOpt{}), \and{SortControlCellOpt{}} (X2:SortControlCellOpt{}, Y2:SortControlCellOpt{}), \and{SortEnvCellOpt{}} (X3:SortEnvCellOpt{}, Y3:SortEnvCellOpt{}), \and{SortHoldsCellOpt{}} (X4:SortHoldsCellOpt{}, Y4:SortHoldsCellOpt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortThreadsCell{}, \equals{SortThreadsCell{}, R} (Val:SortThreadsCell{}, Lbl'-LT-'threads'-GT-'{}(K0:SortThreadCellMap{}))) [functional{}()] // functional
  axiom{}\implies{SortThreadsCell{}} (\and{SortThreadsCell{}} (Lbl'-LT-'threads'-GT-'{}(X0:SortThreadCellMap{}), Lbl'-LT-'threads'-GT-'{}(Y0:SortThreadCellMap{})), Lbl'-LT-'threads'-GT-'{}(\and{SortThreadCellMap{}} (X0:SortThreadCellMap{}, Y0:SortThreadCellMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortThreadsCellFragment{}, \equals{SortThreadsCellFragment{}, R} (Val:SortThreadsCellFragment{}, Lbl'-LT-'threads'-GT-'-fragment{}(K0:SortThreadCellMap{}))) [functional{}()] // functional
  axiom{}\implies{SortThreadsCellFragment{}} (\and{SortThreadsCellFragment{}} (Lbl'-LT-'threads'-GT-'-fragment{}(X0:SortThreadCellMap{}), Lbl'-LT-'threads'-GT-'-fragment{}(Y0:SortThreadCellMap{})), Lbl'-LT-'threads'-GT-'-fragment{}(\and{SortThreadCellMap{}} (X0:SortThreadCellMap{}, Y0:SortThreadCellMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortXstackCell{}, \equals{SortXstackCell{}, R} (Val:SortXstackCell{}, Lbl'-LT-'xstack'-GT-'{}(K0:SortList{}))) [functional{}()] // functional
  axiom{}\implies{SortXstackCell{}} (\and{SortXstackCell{}} (Lbl'-LT-'xstack'-GT-'{}(X0:SortList{}), Lbl'-LT-'xstack'-GT-'{}(Y0:SortList{})), Lbl'-LT-'xstack'-GT-'{}(\and{SortList{}} (X0:SortList{}, Y0:SortList{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblBool2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Bool{}(K0:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblFloat2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Float{}(K0:SortFloat{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblId2String'LParUndsRParUnds'ID-COMMON'Unds'String'Unds'Id{}(K0:SortId{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblInt2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortList{}, \equals{SortList{}, R} (Val:SortList{}, LblListItem{}(K0:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, LblMap'Coln'update{}(K0:SortMap{}, K1:SortKItem{}, K2:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, LblSet'Coln'difference{}(K0:SortSet{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblSet'Coln'in{}(K0:SortKItem{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, LblSetItem{}(K0:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortId{}, \equals{SortId{}, R} (Val:SortId{}, LblString2Id'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'String{}(K0:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblThreadCellMap'Coln'in'Unds'keys{}(K0:SortIdCell{}, K1:SortThreadCellMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortIdCell{}, \equals{SortIdCell{}, R} (Val:SortIdCell{}, LblThreadCellMapKey{}(K0:SortThreadCell{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllookup'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'LParRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), LblsizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblspawn'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllookup'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'LParRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), LblsizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblspawn'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllookup'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'LParRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), LblsizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblspawn'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'UndsAnd-'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(K0:SortExp{}, K1:SortExps{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{})), Lbl'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExps{}} (X1:SortExps{}, Y1:SortExps{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbllookup'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbllvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lblread'LParRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), LblsizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lblspawn'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'UndsStar'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllookup'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'LParRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), LblsizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblspawn'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'UndsPlus'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllookup'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'LParRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), LblsizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblspawn'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortExps{}, \equals{SortExps{}, R} (Val:SortExps{}, Lbl'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(K0:SortExp{}, K1:SortExps{}))) [functional{}()] // functional
  axiom{}\implies{SortExps{}} (\and{SortExps{}} (Lbl'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{})), Lbl'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExps{}} (X1:SortExps{}, Y1:SortExps{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortParams{}, \equals{SortParams{}, R} (Val:SortParams{}, Lbl'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Params'Unds'Param'Unds'Params{}(K0:SortParam{}, K1:SortParams{}))) [functional{}()] // functional
  axiom{}\implies{SortParams{}} (\and{SortParams{}} (Lbl'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Params'Unds'Param'Unds'Params{}(X0:SortParam{}, X1:SortParams{}), Lbl'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Params'Unds'Param'Unds'Params{}(Y0:SortParam{}, Y1:SortParams{})), Lbl'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Params'Unds'Param'Unds'Params{}(\and{SortParam{}} (X0:SortParam{}, Y0:SortParam{}), \and{SortParams{}} (X1:SortParams{}, Y1:SortParams{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTypes{}, \equals{SortTypes{}, R} (Val:SortTypes{}, Lbl'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types{}(K0:SortType{}, K1:SortTypes{}))) [functional{}()] // functional
  axiom{}\implies{SortTypes{}} (\and{SortTypes{}} (Lbl'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types{}(X0:SortType{}, X1:SortTypes{}), Lbl'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types{}(Y0:SortType{}, Y1:SortTypes{})), Lbl'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types{}(\and{SortType{}} (X0:SortType{}, Y0:SortType{}), \and{SortTypes{}} (X1:SortTypes{}, Y1:SortTypes{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortVals{}, \equals{SortVals{}, R} (Val:SortVals{}, Lbl'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals{}(K0:SortVal{}, K1:SortVals{}))) [functional{}()] // functional
  axiom{}\implies{SortVals{}} (\and{SortVals{}} (Lbl'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals{}(X0:SortVal{}, X1:SortVals{}), Lbl'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals{}(Y0:SortVal{}, Y1:SortVals{})), Lbl'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals{}(\and{SortVal{}} (X0:SortVal{}, Y0:SortVal{}), \and{SortVals{}} (X1:SortVals{}, Y1:SortVals{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortType{}, \equals{SortType{}, R} (Val:SortType{}, Lbl'Unds'-'-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Type'Unds'Types'Unds'Type{}(K0:SortTypes{}, K1:SortType{}))) [functional{}()] // functional
  axiom{}\implies{SortType{}} (\and{SortType{}} (Lbl'Unds'-'-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Type'Unds'Types'Unds'Type{}(X0:SortTypes{}, X1:SortType{}), Lbl'Unds'-'-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Type'Unds'Types'Unds'Type{}(Y0:SortTypes{}, Y1:SortType{})), Lbl'Unds'-'-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Type'Unds'Types'Unds'Type{}(\and{SortTypes{}} (X0:SortTypes{}, Y0:SortTypes{}), \and{SortType{}} (X1:SortType{}, Y1:SortType{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortType{}} (\and{SortType{}} (Lbl'Unds'-'-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Type'Unds'Types'Unds'Type{}(X0:SortTypes{}, X1:SortType{}), Lbl'UndsLSqBRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Type'Unds'Type{}(Y0:SortType{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortType{}} (\and{SortType{}} (Lbl'Unds'-'-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Type'Unds'Types'Unds'Type{}(X0:SortTypes{}, X1:SortType{}), Lblbool'Unds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Type{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortType{}} (\and{SortType{}} (Lbl'Unds'-'-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Type'Unds'Types'Unds'Type{}(X0:SortTypes{}, X1:SortType{}), Lblint'Unds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Type{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortType{}} (\and{SortType{}} (Lbl'Unds'-'-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Type'Unds'Types'Unds'Type{}(X0:SortTypes{}, X1:SortType{}), Lblstring'Unds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Type{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortType{}} (\and{SortType{}} (Lbl'Unds'-'-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Type'Unds'Types'Unds'Type{}(X0:SortTypes{}, X1:SortType{}), Lblvoid'Unds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Type{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Unds'-Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, Lbl'Unds'-Map'UndsUnds'MAP'Unds'Map'Unds'Map'Unds'Map{}(K0:SortMap{}, K1:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllookup'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'LParRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), LblsizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblspawn'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllookup'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'LParRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), LblsizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblspawn'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lbl'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(K0:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lbl'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{})), Lbl'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lbl'UndsUndsLParUndsRParUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Id'Unds'Params'Unds'Block{}(Y0:SortType{}, Y1:SortId{}, Y2:SortParams{}, Y3:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lbl'UndsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(Y0:SortStmt{}, Y1:SortStmt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblacquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lbljoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps{}(Y0:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblreturn'SClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lbltry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block{}(Y0:SortBlock{}, Y1:SortParam{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-Eqls'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-Eqls'Map'UndsUnds'MAP'Unds'Bool'Unds'Map'Unds'Map{}(K0:SortMap{}, K1:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-Eqls'Set'UndsUnds'SET'Unds'Bool'Unds'Set'Unds'Set{}(K0:SortSet{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllookup'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'LParRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), LblsizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblspawn'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllookup'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'LParRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), LblsizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblspawn'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsSlshEqls'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsSlshEqls'K'Unds'{}(K0:SortK{}, K1:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsEqls'Bool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsEqls'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsEqls'K'Unds'{}(K0:SortK{}, K1:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllookup'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'LParRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), LblsizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblspawn'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllookup'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'LParRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), LblsizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblspawn'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-GT-Eqls'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-GT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllookup'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'LParRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), LblsizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblspawn'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-GT-'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-GT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllookup'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'LParRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), LblsizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblspawn'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \equals{SortList{}, R} (Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(K1:SortList{},K2:SortList{}),K3:SortList{}),Lbl'Unds'List'Unds'{}(K1:SortList{},Lbl'Unds'List'Unds'{}(K2:SortList{},K3:SortList{}))) [assoc{}()] // associativity
  axiom{R}\equals{SortList{}, R} (Lbl'Unds'List'Unds'{}(K:SortList{},Lbl'Stop'List{}()),K:SortList{}) [unit{}()] // right unit
  axiom{R}\equals{SortList{}, R} (Lbl'Unds'List'Unds'{}(Lbl'Stop'List{}(),K:SortList{}),K:SortList{}) [unit{}()] // left unit
  axiom{R} \exists{R} (Val:SortList{}, \equals{SortList{}, R} (Val:SortList{}, Lbl'Unds'List'Unds'{}(K0:SortList{}, K1:SortList{}))) [functional{}()] // functional
  axiom{R} \equals{SortMap{}, R} (Lbl'Unds'Map'Unds'{}(Lbl'Unds'Map'Unds'{}(K1:SortMap{},K2:SortMap{}),K3:SortMap{}),Lbl'Unds'Map'Unds'{}(K1:SortMap{},Lbl'Unds'Map'Unds'{}(K2:SortMap{},K3:SortMap{}))) [assoc{}()] // associativity
  axiom{R}\equals{SortMap{}, R} (Lbl'Unds'Map'Unds'{}(K:SortMap{},Lbl'Stop'Map{}()),K:SortMap{}) [unit{}()] // right unit
  axiom{R}\equals{SortMap{}, R} (Lbl'Unds'Map'Unds'{}(Lbl'Stop'Map{}(),K:SortMap{}),K:SortMap{}) [unit{}()] // left unit
  axiom{R} \equals{SortSet{}, R} (Lbl'Unds'Set'Unds'{}(Lbl'Unds'Set'Unds'{}(K1:SortSet{},K2:SortSet{}),K3:SortSet{}),Lbl'Unds'Set'Unds'{}(K1:SortSet{},Lbl'Unds'Set'Unds'{}(K2:SortSet{},K3:SortSet{}))) [assoc{}()] // associativity
  axiom{R} \equals{SortSet{}, R} (Lbl'Unds'Set'Unds'{}(K:SortSet{},K:SortSet{}),K:SortSet{}) [idem{}()] // idempotency
  axiom{R}\equals{SortSet{}, R} (Lbl'Unds'Set'Unds'{}(K:SortSet{},Lbl'Stop'Set{}()),K:SortSet{}) [unit{}()] // right unit
  axiom{R}\equals{SortSet{}, R} (Lbl'Unds'Set'Unds'{}(Lbl'Stop'Set{}(),K:SortSet{}),K:SortSet{}) [unit{}()] // left unit
  axiom{R} \equals{SortThreadCellMap{}, R} (Lbl'Unds'ThreadCellMap'Unds'{}(Lbl'Unds'ThreadCellMap'Unds'{}(K1:SortThreadCellMap{},K2:SortThreadCellMap{}),K3:SortThreadCellMap{}),Lbl'Unds'ThreadCellMap'Unds'{}(K1:SortThreadCellMap{},Lbl'Unds'ThreadCellMap'Unds'{}(K2:SortThreadCellMap{},K3:SortThreadCellMap{}))) [assoc{}()] // associativity
  axiom{R}\equals{SortThreadCellMap{}, R} (Lbl'Unds'ThreadCellMap'Unds'{}(K:SortThreadCellMap{},Lbl'Stop'ThreadCellMap{}()),K:SortThreadCellMap{}) [unit{}()] // right unit
  axiom{R}\equals{SortThreadCellMap{}, R} (Lbl'Unds'ThreadCellMap'Unds'{}(Lbl'Stop'ThreadCellMap{}(),K:SortThreadCellMap{}),K:SortThreadCellMap{}) [unit{}()] // left unit
  axiom{R} \exists{R} (Val:SortType{}, \equals{SortType{}, R} (Val:SortType{}, Lbl'UndsLSqBRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Type'Unds'Type{}(K0:SortType{}))) [functional{}()] // functional
  axiom{}\implies{SortType{}} (\and{SortType{}} (Lbl'UndsLSqBRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Type'Unds'Type{}(X0:SortType{}), Lbl'UndsLSqBRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Type'Unds'Type{}(Y0:SortType{})), Lbl'UndsLSqBRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Type'Unds'Type{}(\and{SortType{}} (X0:SortType{}, Y0:SortType{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortType{}} (\and{SortType{}} (Lbl'UndsLSqBRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Type'Unds'Type{}(X0:SortType{}), Lblbool'Unds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Type{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortType{}} (\and{SortType{}} (Lbl'UndsLSqBRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Type'Unds'Type{}(X0:SortType{}), Lblint'Unds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Type{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortType{}} (\and{SortType{}} (Lbl'UndsLSqBRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Type'Unds'Type{}(X0:SortType{}), Lblstring'Unds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Type{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortType{}} (\and{SortType{}} (Lbl'UndsLSqBRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Type'Unds'Type{}(X0:SortType{}), Lblvoid'Unds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Type{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, Lbl'UndsLSqBUnds-LT-'-undef'RSqB'{}(K0:SortMap{}, K1:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(K0:SortExp{}, K1:SortExps{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'UndsLSqBUndsRSqB'orDefault'UndsUnds'MAP'Unds'KItem'Unds'Map'Unds'KItem'Unds'KItem{}(K0:SortMap{}, K1:SortKItem{}, K2:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lbl'UndsUndsLParUndsRParUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Id'Unds'Params'Unds'Block{}(K0:SortType{}, K1:SortId{}, K2:SortParams{}, K3:SortBlock{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsLParUndsRParUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Id'Unds'Params'Unds'Block{}(X0:SortType{}, X1:SortId{}, X2:SortParams{}, X3:SortBlock{}), Lbl'UndsUndsLParUndsRParUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Id'Unds'Params'Unds'Block{}(Y0:SortType{}, Y1:SortId{}, Y2:SortParams{}, Y3:SortBlock{})), Lbl'UndsUndsLParUndsRParUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Id'Unds'Params'Unds'Block{}(\and{SortType{}} (X0:SortType{}, Y0:SortType{}), \and{SortId{}} (X1:SortId{}, Y1:SortId{}), \and{SortParams{}} (X2:SortParams{}, Y2:SortParams{}), \and{SortBlock{}} (X3:SortBlock{}, Y3:SortBlock{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsLParUndsRParUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Id'Unds'Params'Unds'Block{}(X0:SortType{}, X1:SortId{}, X2:SortParams{}, X3:SortBlock{}), Lbl'UndsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(Y0:SortStmt{}, Y1:SortStmt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsLParUndsRParUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Id'Unds'Params'Unds'Block{}(X0:SortType{}, X1:SortId{}, X2:SortParams{}, X3:SortBlock{}), Lblacquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsLParUndsRParUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Id'Unds'Params'Unds'Block{}(X0:SortType{}, X1:SortId{}, X2:SortParams{}, X3:SortBlock{}), Lblif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsLParUndsRParUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Id'Unds'Params'Unds'Block{}(X0:SortType{}, X1:SortId{}, X2:SortParams{}, X3:SortBlock{}), Lbljoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsLParUndsRParUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Id'Unds'Params'Unds'Block{}(X0:SortType{}, X1:SortId{}, X2:SortParams{}, X3:SortBlock{}), Lblprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps{}(Y0:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsLParUndsRParUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Id'Unds'Params'Unds'Block{}(X0:SortType{}, X1:SortId{}, X2:SortParams{}, X3:SortBlock{}), Lblrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsLParUndsRParUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Id'Unds'Params'Unds'Block{}(X0:SortType{}, X1:SortId{}, X2:SortParams{}, X3:SortBlock{}), Lblrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsLParUndsRParUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Id'Unds'Params'Unds'Block{}(X0:SortType{}, X1:SortId{}, X2:SortParams{}, X3:SortBlock{}), Lblreturn'SClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsLParUndsRParUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Id'Unds'Params'Unds'Block{}(X0:SortType{}, X1:SortId{}, X2:SortParams{}, X3:SortBlock{}), Lblreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsLParUndsRParUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Id'Unds'Params'Unds'Block{}(X0:SortType{}, X1:SortId{}, X2:SortParams{}, X3:SortBlock{}), Lblthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsLParUndsRParUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Id'Unds'Params'Unds'Block{}(X0:SortType{}, X1:SortId{}, X2:SortParams{}, X3:SortBlock{}), Lbltry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block{}(Y0:SortBlock{}, Y1:SortParam{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsLParUndsRParUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Id'Unds'Params'Unds'Block{}(X0:SortType{}, X1:SortId{}, X2:SortParams{}, X3:SortBlock{}), Lblwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lbl'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps{}(K0:SortType{}, K1:SortExps{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortParam{}, \equals{SortParam{}, R} (Val:SortParam{}, Lbl'UndsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Param'Unds'Type'Unds'Id{}(K0:SortType{}, K1:SortId{}))) [functional{}()] // functional
  axiom{}\implies{SortParam{}} (\and{SortParam{}} (Lbl'UndsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Param'Unds'Type'Unds'Id{}(X0:SortType{}, X1:SortId{}), Lbl'UndsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Param'Unds'Type'Unds'Id{}(Y0:SortType{}, Y1:SortId{})), Lbl'UndsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Param'Unds'Type'Unds'Id{}(\and{SortType{}} (X0:SortType{}, Y0:SortType{}), \and{SortId{}} (X1:SortId{}, Y1:SortId{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lbl'UndsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(K0:SortStmt{}, K1:SortStmt{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}), Lbl'UndsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(Y0:SortStmt{}, Y1:SortStmt{})), Lbl'UndsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(\and{SortStmt{}} (X0:SortStmt{}, Y0:SortStmt{}), \and{SortStmt{}} (X1:SortStmt{}, Y1:SortStmt{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}), Lblacquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}), Lblif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}), Lbljoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}), Lblprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps{}(Y0:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}), Lblrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}), Lblrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}), Lblreturn'SClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}), Lblreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}), Lblthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}), Lbltry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block{}(Y0:SortBlock{}, Y1:SortParam{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}), Lblwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'andBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'andThenBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'impliesBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'in'UndsUnds'LIST'Unds'Bool'Unds'KItem'Unds'List{}(K0:SortKItem{}, K1:SortList{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(K0:SortKItem{}, K1:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'orBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'orElseBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'xorBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Unds'xorInt'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, Lbl'UndsPipe'-'-GT-Unds'{}(K0:SortKItem{}, K1:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'UndsPipe'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(K0:SortSet{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllookup'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbllvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'LParRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), LblsizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblspawn'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lblacquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(K0:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lblacquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblacquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{})), Lblacquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblacquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblacquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lbljoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblacquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps{}(Y0:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblacquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblacquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblacquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblreturn'SClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblacquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblacquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblacquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lbltry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block{}(Y0:SortBlock{}, Y1:SortParam{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblacquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortVal{}, \equals{SortVal{}, R} (Val:SortVal{}, Lblarray'LParUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Val'Unds'Type'Unds'Int'Unds'Int{}(K0:SortType{}, K1:SortInt{}, K2:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortVal{}} (\and{SortVal{}} (Lblarray'LParUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Val'Unds'Type'Unds'Int'Unds'Int{}(X0:SortType{}, X1:SortInt{}, X2:SortInt{}), Lblarray'LParUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Val'Unds'Type'Unds'Int'Unds'Int{}(Y0:SortType{}, Y1:SortInt{}, Y2:SortInt{})), Lblarray'LParUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Val'Unds'Type'Unds'Int'Unds'Int{}(\and{SortType{}} (X0:SortType{}, Y0:SortType{}), \and{SortInt{}} (X1:SortInt{}, Y1:SortInt{}), \and{SortInt{}} (X2:SortInt{}, Y2:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortVal{}} (\and{SortVal{}} (Lblarray'LParUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Val'Unds'Type'Unds'Int'Unds'Int{}(X0:SortType{}, X1:SortInt{}, X2:SortInt{}), Lbllambda'LParUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Val'Unds'Type'Unds'Params'Unds'Stmt{}(Y0:SortType{}, Y1:SortParams{}, Y2:SortStmt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortVal{}} (\and{SortVal{}} (Lblarray'LParUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Val'Unds'Type'Unds'Int'Unds'Int{}(X0:SortType{}, X1:SortInt{}, X2:SortInt{}), Lblloc'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Val'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortVal{}} (\and{SortVal{}} (Lblarray'LParUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Val'Unds'Type'Unds'Int'Unds'Int{}(X0:SortType{}, X1:SortInt{}, X2:SortInt{}), Lblnothing'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Val'Unds'Type{}(Y0:SortType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortType{}, \equals{SortType{}, R} (Val:SortType{}, Lblbool'Unds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Type{}())) [functional{}()] // functional
  axiom{}\not{SortType{}} (\and{SortType{}} (Lblbool'Unds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Type{}(), Lblint'Unds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Type{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortType{}} (\and{SortType{}} (Lblbool'Unds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Type{}(), Lblstring'Unds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Type{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortType{}} (\and{SortType{}} (Lblbool'Unds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Type{}(), Lblvoid'Unds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Type{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lblexecute'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lblexecute'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}(), Lblpopx'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lblexecute'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}(), LblsetEnv'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lblexecute'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}(), Lblundefined'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type{}(Y0:SortType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lblfor'LParUndsUndsSClnUndsRParUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Exp'Unds'Exp'Unds'Block{}(K0:SortStmt{}, K1:SortExp{}, K2:SortExp{}, K3:SortBlock{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortId{}, \equals{SortId{}, R} (Val:SortId{}, LblfreshId'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lblif'LParUndsRParUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(K0:SortExp{}, K1:SortBlock{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lblif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(K0:SortExp{}, K1:SortBlock{}, K2:SortBlock{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lblif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(X0:SortExp{}, X1:SortBlock{}, X2:SortBlock{}), Lblif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}, Y2:SortBlock{})), Lblif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortBlock{}} (X1:SortBlock{}, Y1:SortBlock{}), \and{SortBlock{}} (X2:SortBlock{}, Y2:SortBlock{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(X0:SortExp{}, X1:SortBlock{}, X2:SortBlock{}), Lbljoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(X0:SortExp{}, X1:SortBlock{}, X2:SortBlock{}), Lblprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps{}(Y0:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(X0:SortExp{}, X1:SortBlock{}, X2:SortBlock{}), Lblrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(X0:SortExp{}, X1:SortBlock{}, X2:SortBlock{}), Lblrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(X0:SortExp{}, X1:SortBlock{}, X2:SortBlock{}), Lblreturn'SClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(X0:SortExp{}, X1:SortBlock{}, X2:SortBlock{}), Lblreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(X0:SortExp{}, X1:SortBlock{}, X2:SortBlock{}), Lblthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(X0:SortExp{}, X1:SortBlock{}, X2:SortBlock{}), Lbltry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block{}(Y0:SortBlock{}, Y1:SortParam{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(X0:SortExp{}, X1:SortBlock{}, X2:SortBlock{}), Lblwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortType{}, \equals{SortType{}, R} (Val:SortType{}, Lblint'Unds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Type{}())) [functional{}()] // functional
  axiom{}\not{SortType{}} (\and{SortType{}} (Lblint'Unds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Type{}(), Lblstring'Unds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Type{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortType{}} (\and{SortType{}} (Lblint'Unds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Type{}(), Lblvoid'Unds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Type{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, LblintersectSet'LParUndsCommUndsRParUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(K0:SortSet{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisBlock{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisBool{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisBusyCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisBusyCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisControlCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisControlCellFragment{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisControlCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisEnvCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisEnvCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisExp{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisExps{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisFloat{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisFstackCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisFstackCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisGeneratedCounterCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisGeneratedCounterCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisGeneratedTopCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisGeneratedTopCellFragment{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisGenvCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisGenvCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisHoldsCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisHoldsCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisIOError{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisIOFile{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisIOInt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisIOString{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisId{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisIdCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisIdCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisInputCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisInputCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisInt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisK{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisKCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisKCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisKConfigVar{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisKItem{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisKResult{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisList{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisMap{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisNextLocCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisNextLocCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisOutputCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisOutputCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisParam{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisParams{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisReturnTypeCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisReturnTypeCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisSet{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisStmt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisStoreCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisStoreCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisStream{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisString{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTCellFragment{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTerminatedCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTerminatedCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisThreadCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisThreadCellFragment{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisThreadCellMap{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisThreadsCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisThreadsCellFragment{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisThreadsCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisType{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTypes{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisVal{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisVals{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisXstackCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisXstackCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lbljoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(K0:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lbljoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lbljoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{})), Lbljoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbljoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps{}(Y0:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbljoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbljoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbljoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblreturn'SClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbljoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbljoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbljoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lbltry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block{}(Y0:SortBlock{}, Y1:SortParam{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbljoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortVal{}, \equals{SortVal{}, R} (Val:SortVal{}, Lbllambda'LParUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Val'Unds'Type'Unds'Params'Unds'Stmt{}(K0:SortType{}, K1:SortParams{}, K2:SortStmt{}))) [functional{}()] // functional
  axiom{}\implies{SortVal{}} (\and{SortVal{}} (Lbllambda'LParUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Val'Unds'Type'Unds'Params'Unds'Stmt{}(X0:SortType{}, X1:SortParams{}, X2:SortStmt{}), Lbllambda'LParUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Val'Unds'Type'Unds'Params'Unds'Stmt{}(Y0:SortType{}, Y1:SortParams{}, Y2:SortStmt{})), Lbllambda'LParUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Val'Unds'Type'Unds'Params'Unds'Stmt{}(\and{SortType{}} (X0:SortType{}, Y0:SortType{}), \and{SortParams{}} (X1:SortParams{}, Y1:SortParams{}), \and{SortStmt{}} (X2:SortStmt{}, Y2:SortStmt{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortVal{}} (\and{SortVal{}} (Lbllambda'LParUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Val'Unds'Type'Unds'Params'Unds'Stmt{}(X0:SortType{}, X1:SortParams{}, X2:SortStmt{}), Lblloc'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Val'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortVal{}} (\and{SortVal{}} (Lbllambda'LParUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Val'Unds'Type'Unds'Params'Unds'Stmt{}(X0:SortType{}, X1:SortParams{}, X2:SortStmt{}), Lblnothing'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Val'Unds'Type{}(Y0:SortType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(K0:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortVal{}, \equals{SortVal{}, R} (Val:SortVal{}, Lblloc'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Val'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortVal{}} (\and{SortVal{}} (Lblloc'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Val'Unds'Int{}(X0:SortInt{}), Lblloc'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Val'Unds'Int{}(Y0:SortInt{})), Lblloc'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Val'Unds'Int{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortVal{}} (\and{SortVal{}} (Lblloc'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Val'Unds'Int{}(X0:SortInt{}), Lblnothing'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Val'Unds'Type{}(Y0:SortType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbllookup'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbllookup'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'Int{}(X0:SortInt{}), Lbllookup'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'Int{}(Y0:SortInt{})), Lbllookup'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'Int{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbllookup'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'Int{}(X0:SortInt{}), Lbllvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbllookup'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'Int{}(X0:SortInt{}), Lblread'LParRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbllookup'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'Int{}(X0:SortInt{}), LblsizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbllookup'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'Int{}(X0:SortInt{}), Lblspawn'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbllvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbllvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K{}(X0:SortK{}), Lbllvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K{}(Y0:SortK{})), Lbllvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbllvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K{}(X0:SortK{}), Lblread'LParRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbllvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K{}(X0:SortK{}), LblsizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbllvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K{}(X0:SortK{}), Lblspawn'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBusyCellOpt{}, \equals{SortBusyCellOpt{}, R} (Val:SortBusyCellOpt{}, LblnoBusyCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortControlCellOpt{}, \equals{SortControlCellOpt{}, R} (Val:SortControlCellOpt{}, LblnoControlCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortEnvCellOpt{}, \equals{SortEnvCellOpt{}, R} (Val:SortEnvCellOpt{}, LblnoEnvCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortFstackCellOpt{}, \equals{SortFstackCellOpt{}, R} (Val:SortFstackCellOpt{}, LblnoFstackCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortGeneratedCounterCellOpt{}, \equals{SortGeneratedCounterCellOpt{}, R} (Val:SortGeneratedCounterCellOpt{}, LblnoGeneratedCounterCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortGenvCellOpt{}, \equals{SortGenvCellOpt{}, R} (Val:SortGenvCellOpt{}, LblnoGenvCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortHoldsCellOpt{}, \equals{SortHoldsCellOpt{}, R} (Val:SortHoldsCellOpt{}, LblnoHoldsCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortIdCellOpt{}, \equals{SortIdCellOpt{}, R} (Val:SortIdCellOpt{}, LblnoIdCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInputCellOpt{}, \equals{SortInputCellOpt{}, R} (Val:SortInputCellOpt{}, LblnoInputCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortKCellOpt{}, \equals{SortKCellOpt{}, R} (Val:SortKCellOpt{}, LblnoKCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortNextLocCellOpt{}, \equals{SortNextLocCellOpt{}, R} (Val:SortNextLocCellOpt{}, LblnoNextLocCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortOutputCellOpt{}, \equals{SortOutputCellOpt{}, R} (Val:SortOutputCellOpt{}, LblnoOutputCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortReturnTypeCellOpt{}, \equals{SortReturnTypeCellOpt{}, R} (Val:SortReturnTypeCellOpt{}, LblnoReturnTypeCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStoreCellOpt{}, \equals{SortStoreCellOpt{}, R} (Val:SortStoreCellOpt{}, LblnoStoreCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortTCellOpt{}, \equals{SortTCellOpt{}, R} (Val:SortTCellOpt{}, LblnoTCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortTerminatedCellOpt{}, \equals{SortTerminatedCellOpt{}, R} (Val:SortTerminatedCellOpt{}, LblnoTerminatedCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortThreadsCellOpt{}, \equals{SortThreadsCellOpt{}, R} (Val:SortThreadsCellOpt{}, LblnoThreadsCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortXstackCellOpt{}, \equals{SortXstackCellOpt{}, R} (Val:SortXstackCellOpt{}, LblnoXstackCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblnotBool'Unds'{}(K0:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortVal{}, \equals{SortVal{}, R} (Val:SortVal{}, Lblnothing'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Val'Unds'Type{}(K0:SortType{}))) [functional{}()] // functional
  axiom{}\implies{SortVal{}} (\and{SortVal{}} (Lblnothing'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Val'Unds'Type{}(X0:SortType{}), Lblnothing'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Val'Unds'Type{}(Y0:SortType{})), Lblnothing'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Val'Unds'Type{}(\and{SortType{}} (X0:SortType{}, Y0:SortType{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lblpopx'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lblpopx'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}(), LblsetEnv'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Map{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lblpopx'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}(), Lblundefined'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type{}(Y0:SortType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lblprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps{}(K0:SortExps{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lblprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps{}(X0:SortExps{}), Lblprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps{}(Y0:SortExps{})), Lblprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps{}(\and{SortExps{}} (X0:SortExps{}, Y0:SortExps{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps{}(X0:SortExps{}), Lblrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps{}(X0:SortExps{}), Lblrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps{}(X0:SortExps{}), Lblreturn'SClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps{}(X0:SortExps{}), Lblreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps{}(X0:SortExps{}), Lblthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps{}(X0:SortExps{}), Lbltry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block{}(Y0:SortBlock{}, Y1:SortParam{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps{}(X0:SortExps{}), Lblwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lblread'LParRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp{}())) [functional{}()] // functional
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lblread'LParRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp{}(), LblsizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lblread'LParRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp{}(), Lblspawn'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lblrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(K0:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lblrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{})), Lblrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblreturn'SClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lbltry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block{}(Y0:SortBlock{}, Y1:SortParam{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, LblremoveAll'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Set{}(K0:SortMap{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lblrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(K0:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lblrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{})), Lblrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblreturn'SClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lbltry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block{}(Y0:SortBlock{}, Y1:SortParam{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblreplaceAll'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}, K2:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblreplaceFirst'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}, K2:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lblreturn'SClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt{}())) [functional{}()] // functional
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblreturn'SClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt{}(), Lblreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblreturn'SClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt{}(), Lblthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblreturn'SClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt{}(), Lbltry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block{}(Y0:SortBlock{}, Y1:SortParam{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblreturn'SClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt{}(), Lblwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lblreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(K0:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lblreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{})), Lblreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lbltry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block{}(Y0:SortBlock{}, Y1:SortParam{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, LblsetEnv'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Map{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (LblsetEnv'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Map{}(X0:SortMap{}), LblsetEnv'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Map{}(Y0:SortMap{})), LblsetEnv'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Map{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (LblsetEnv'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Map{}(X0:SortMap{}), Lblundefined'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type{}(Y0:SortType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lblsize'LParUndsRParUnds'LIST'Unds'Int'Unds'List{}(K0:SortList{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lblsize'LParUndsRParUnds'MAP'Unds'Int'Unds'Map{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lblsize'LParUndsRParUnds'SET'Unds'Int'Unds'Set{}(K0:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, LblsizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(K0:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (LblsizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), LblsizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{})), LblsizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (LblsizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblspawn'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lblspawn'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Block{}(K0:SortBlock{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lblspawn'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Block{}(X0:SortBlock{}), Lblspawn'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{})), Lblspawn'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Block{}(\and{SortBlock{}} (X0:SortBlock{}, Y0:SortBlock{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortType{}, \equals{SortType{}, R} (Val:SortType{}, Lblstring'Unds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Type{}())) [functional{}()] // functional
  axiom{}\not{SortType{}} (\and{SortType{}} (Lblstring'Unds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Type{}(), Lblvoid'Unds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Type{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(K0:SortString{}, K1:SortInt{}, K2:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lblthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(K0:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lblthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{})), Lblthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lbltry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block{}(Y0:SortBlock{}, Y1:SortParam{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lbltry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block{}(K0:SortBlock{}, K1:SortParam{}, K2:SortBlock{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lbltry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block{}(X0:SortBlock{}, X1:SortParam{}, X2:SortBlock{}), Lbltry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block{}(Y0:SortBlock{}, Y1:SortParam{}, Y2:SortBlock{})), Lbltry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block{}(\and{SortBlock{}} (X0:SortBlock{}, Y0:SortBlock{}), \and{SortParam{}} (X1:SortParam{}, Y1:SortParam{}), \and{SortBlock{}} (X2:SortBlock{}, Y2:SortBlock{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbltry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block{}(X0:SortBlock{}, X1:SortParam{}, X2:SortBlock{}), Lblwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lblundefined'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type{}(K0:SortType{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lblundefined'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type{}(X0:SortType{}), Lblundefined'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type{}(Y0:SortType{})), Lblundefined'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type{}(\and{SortType{}} (X0:SortType{}, Y0:SortType{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, LblupdateMap'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Map{}(K0:SortMap{}, K1:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortType{}, \equals{SortType{}, R} (Val:SortType{}, Lblvoid'Unds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Type{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lblwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(K0:SortExp{}, K1:SortBlock{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lblwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(X0:SortExp{}, X1:SortBlock{}), Lblwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{})), Lblwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortBlock{}} (X1:SortBlock{}, Y1:SortBlock{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortBlock{}, \equals{SortBlock{}, R} (Val:SortBlock{}, Lbl'LBraUndsRBraUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Block'Unds'Stmt{}(K0:SortStmt{}))) [functional{}()] // functional
  axiom{}\implies{SortBlock{}} (\and{SortBlock{}} (Lbl'LBraUndsRBraUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Block'Unds'Stmt{}(X0:SortStmt{}), Lbl'LBraUndsRBraUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Block'Unds'Stmt{}(Y0:SortStmt{})), Lbl'LBraUndsRBraUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Block'Unds'Stmt{}(\and{SortStmt{}} (X0:SortStmt{}, Y0:SortStmt{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortBlock{}} (\and{SortBlock{}} (Lbl'LBraUndsRBraUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Block'Unds'Stmt{}(X0:SortStmt{}), Lbl'LBraRBraUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Block{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBlock{}, \equals{SortBlock{}, R} (Val:SortBlock{}, Lbl'LBraRBraUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Block{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Tild'Int'Unds'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{} \or{SortReturnTypeCellOpt{}} (LblnoReturnTypeCell{}(), \exists{SortReturnTypeCellOpt{}} (Val:SortReturnTypeCell{}, inj{SortReturnTypeCell{}, SortReturnTypeCellOpt{}} (Val:SortReturnTypeCell{})), \bottom{SortReturnTypeCellOpt{}}()) [constructor{}()] // no junk
  axiom{} \or{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, \exists{SortKItem{}} (X1:SortK{}, Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(X0:SortK{}, X1:SortK{}))), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), \exists{SortKItem{}} (X0:SortK{}, \exists{SortKItem{}} (X1:SortK{}, Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}))), Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K0'Unds'{}(X0:SortK{})), \exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K1'Unds'{}(X0:SortK{})), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(), Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), \exists{SortKItem{}} (X0:SortInt{}, \exists{SortKItem{}} (X1:SortString{}, \exists{SortKItem{}} (X2:SortString{}, Lbl'Hash'systemResult{}(X0:SortInt{}, X1:SortString{}, X2:SortString{})))), \exists{SortKItem{}} (X0:SortType{}, \exists{SortKItem{}} (X1:SortMap{}, \exists{SortKItem{}} (X2:SortK{}, \exists{SortKItem{}} (X3:SortControlCellFragment{}, Lbl'LParUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type'Unds'Map'Unds'K'Unds'ControlCellFragment{}(X0:SortType{}, X1:SortMap{}, X2:SortK{}, X3:SortControlCellFragment{}))))), \exists{SortKItem{}} (X0:SortParam{}, \exists{SortKItem{}} (X1:SortStmt{}, \exists{SortKItem{}} (X2:SortK{}, \exists{SortKItem{}} (X3:SortMap{}, \exists{SortKItem{}} (X4:SortControlCellFragment{}, Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Param'Unds'Stmt'Unds'K'Unds'Map'Unds'ControlCellFragment{}(X0:SortParam{}, X1:SortStmt{}, X2:SortK{}, X3:SortMap{}, X4:SortControlCellFragment{})))))), Lblexecute'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}(), Lblpopx'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}(), \exists{SortKItem{}} (X0:SortMap{}, LblsetEnv'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Map{}(X0:SortMap{})), \exists{SortKItem{}} (X0:SortType{}, Lblundefined'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type{}(X0:SortType{})), \exists{SortKItem{}} (Val:SortReturnTypeCellOpt{}, inj{SortReturnTypeCellOpt{}, SortKItem{}} (Val:SortReturnTypeCellOpt{})), \exists{SortKItem{}} (Val:SortNextLocCell{}, inj{SortNextLocCell{}, SortKItem{}} (Val:SortNextLocCell{})), \exists{SortKItem{}} (Val:SortList{}, inj{SortList{}, SortKItem{}} (Val:SortList{})), \exists{SortKItem{}} (Val:SortIdCell{}, inj{SortIdCell{}, SortKItem{}} (Val:SortIdCell{})), \exists{SortKItem{}} (Val:SortInputCellOpt{}, inj{SortInputCellOpt{}, SortKItem{}} (Val:SortInputCellOpt{})), \exists{SortKItem{}} (Val:SortTypes{}, inj{SortTypes{}, SortKItem{}} (Val:SortTypes{})), \exists{SortKItem{}} (Val:SortTCellOpt{}, inj{SortTCellOpt{}, SortKItem{}} (Val:SortTCellOpt{})), \exists{SortKItem{}} (Val:SortTCellFragment{}, inj{SortTCellFragment{}, SortKItem{}} (Val:SortTCellFragment{})), \exists{SortKItem{}} (Val:SortControlCell{}, inj{SortControlCell{}, SortKItem{}} (Val:SortControlCell{})), \exists{SortKItem{}} (Val:SortThreadCellFragment{}, inj{SortThreadCellFragment{}, SortKItem{}} (Val:SortThreadCellFragment{})), \exists{SortKItem{}} (Val:SortString{}, inj{SortString{}, SortKItem{}} (Val:SortString{})), \exists{SortKItem{}} (Val:SortKConfigVar{}, inj{SortKConfigVar{}, SortKItem{}} (Val:SortKConfigVar{})), \exists{SortKItem{}} (Val:SortIOInt{}, inj{SortIOInt{}, SortKItem{}} (Val:SortIOInt{})), \exists{SortKItem{}} (Val:SortTCell{}, inj{SortTCell{}, SortKItem{}} (Val:SortTCell{})), \exists{SortKItem{}} (Val:SortExp{}, inj{SortExp{}, SortKItem{}} (Val:SortExp{})), \exists{SortKItem{}} (Val:SortNextLocCellOpt{}, inj{SortNextLocCellOpt{}, SortKItem{}} (Val:SortNextLocCellOpt{})), \exists{SortKItem{}} (Val:SortTerminatedCellOpt{}, inj{SortTerminatedCellOpt{}, SortKItem{}} (Val:SortTerminatedCellOpt{})), \exists{SortKItem{}} (Val:SortGeneratedCounterCellOpt{}, inj{SortGeneratedCounterCellOpt{}, SortKItem{}} (Val:SortGeneratedCounterCellOpt{})), \exists{SortKItem{}} (Val:SortParam{}, inj{SortParam{}, SortKItem{}} (Val:SortParam{})), \exists{SortKItem{}} (Val:SortControlCellOpt{}, inj{SortControlCellOpt{}, SortKItem{}} (Val:SortControlCellOpt{})), \exists{SortKItem{}} (Val:SortIdCellOpt{}, inj{SortIdCellOpt{}, SortKItem{}} (Val:SortIdCellOpt{})), \exists{SortKItem{}} (Val:SortBusyCell{}, inj{SortBusyCell{}, SortKItem{}} (Val:SortBusyCell{})), \exists{SortKItem{}} (Val:SortGeneratedCounterCell{}, inj{SortGeneratedCounterCell{}, SortKItem{}} (Val:SortGeneratedCounterCell{})), \exists{SortKItem{}} (Val:SortThreadsCellFragment{}, inj{SortThreadsCellFragment{}, SortKItem{}} (Val:SortThreadsCellFragment{})), \exists{SortKItem{}} (Val:SortInputCell{}, inj{SortInputCell{}, SortKItem{}} (Val:SortInputCell{})), \exists{SortKItem{}} (Val:SortId{}, inj{SortId{}, SortKItem{}} (Val:SortId{})), \exists{SortKItem{}} (Val:SortVals{}, inj{SortVals{}, SortKItem{}} (Val:SortVals{})), \exists{SortKItem{}} (Val:SortStream{}, inj{SortStream{}, SortKItem{}} (Val:SortStream{})), \exists{SortKItem{}} (Val:SortBool{}, inj{SortBool{}, SortKItem{}} (Val:SortBool{})), \exists{SortKItem{}} (Val:SortHoldsCellOpt{}, inj{SortHoldsCellOpt{}, SortKItem{}} (Val:SortHoldsCellOpt{})), \exists{SortKItem{}} (Val:SortKCell{}, inj{SortKCell{}, SortKItem{}} (Val:SortKCell{})), \exists{SortKItem{}} (Val:SortStoreCell{}, inj{SortStoreCell{}, SortKItem{}} (Val:SortStoreCell{})), \exists{SortKItem{}} (Val:SortIOFile{}, inj{SortIOFile{}, SortKItem{}} (Val:SortIOFile{})), \exists{SortKItem{}} (Val:SortOutputCell{}, inj{SortOutputCell{}, SortKItem{}} (Val:SortOutputCell{})), \exists{SortKItem{}} (Val:SortTerminatedCell{}, inj{SortTerminatedCell{}, SortKItem{}} (Val:SortTerminatedCell{})), \exists{SortKItem{}} (Val:SortStoreCellOpt{}, inj{SortStoreCellOpt{}, SortKItem{}} (Val:SortStoreCellOpt{})), \exists{SortKItem{}} (Val:SortFstackCellOpt{}, inj{SortFstackCellOpt{}, SortKItem{}} (Val:SortFstackCellOpt{})), \exists{SortKItem{}} (Val:SortThreadCell{}, inj{SortThreadCell{}, SortKItem{}} (Val:SortThreadCell{})), \exists{SortKItem{}} (Val:SortThreadsCellOpt{}, inj{SortThreadsCellOpt{}, SortKItem{}} (Val:SortThreadsCellOpt{})), \exists{SortKItem{}} (Val:SortKResult{}, inj{SortKResult{}, SortKItem{}} (Val:SortKResult{})), \exists{SortKItem{}} (Val:SortMap{}, inj{SortMap{}, SortKItem{}} (Val:SortMap{})), \exists{SortKItem{}} (Val:SortOutputCellOpt{}, inj{SortOutputCellOpt{}, SortKItem{}} (Val:SortOutputCellOpt{})), \exists{SortKItem{}} (Val:SortParams{}, inj{SortParams{}, SortKItem{}} (Val:SortParams{})), \exists{SortKItem{}} (Val:SortEnvCell{}, inj{SortEnvCell{}, SortKItem{}} (Val:SortEnvCell{})), \exists{SortKItem{}} (Val:SortKCellOpt{}, inj{SortKCellOpt{}, SortKItem{}} (Val:SortKCellOpt{})), \exists{SortKItem{}} (Val:SortStmt{}, inj{SortStmt{}, SortKItem{}} (Val:SortStmt{})), \exists{SortKItem{}} (Val:SortControlCellFragment{}, inj{SortControlCellFragment{}, SortKItem{}} (Val:SortControlCellFragment{})), \exists{SortKItem{}} (Val:SortThreadCellMap{}, inj{SortThreadCellMap{}, SortKItem{}} (Val:SortThreadCellMap{})), \exists{SortKItem{}} (Val:SortHoldsCell{}, inj{SortHoldsCell{}, SortKItem{}} (Val:SortHoldsCell{})), \exists{SortKItem{}} (Val:SortInt{}, inj{SortInt{}, SortKItem{}} (Val:SortInt{})), \exists{SortKItem{}} (Val:SortFloat{}, inj{SortFloat{}, SortKItem{}} (Val:SortFloat{})), \exists{SortKItem{}} (Val:SortThreadsCell{}, inj{SortThreadsCell{}, SortKItem{}} (Val:SortThreadsCell{})), \exists{SortKItem{}} (Val:SortGenvCellOpt{}, inj{SortGenvCellOpt{}, SortKItem{}} (Val:SortGenvCellOpt{})), \exists{SortKItem{}} (Val:SortType{}, inj{SortType{}, SortKItem{}} (Val:SortType{})), \exists{SortKItem{}} (Val:SortGeneratedTopCell{}, inj{SortGeneratedTopCell{}, SortKItem{}} (Val:SortGeneratedTopCell{})), \exists{SortKItem{}} (Val:SortXstackCell{}, inj{SortXstackCell{}, SortKItem{}} (Val:SortXstackCell{})), \exists{SortKItem{}} (Val:SortEnvCellOpt{}, inj{SortEnvCellOpt{}, SortKItem{}} (Val:SortEnvCellOpt{})), \exists{SortKItem{}} (Val:SortBlock{}, inj{SortBlock{}, SortKItem{}} (Val:SortBlock{})), \exists{SortKItem{}} (Val:SortVal{}, inj{SortVal{}, SortKItem{}} (Val:SortVal{})), \exists{SortKItem{}} (Val:SortSet{}, inj{SortSet{}, SortKItem{}} (Val:SortSet{})), \exists{SortKItem{}} (Val:SortFstackCell{}, inj{SortFstackCell{}, SortKItem{}} (Val:SortFstackCell{})), \exists{SortKItem{}} (Val:SortExps{}, inj{SortExps{}, SortKItem{}} (Val:SortExps{})), \exists{SortKItem{}} (Val:SortGenvCell{}, inj{SortGenvCell{}, SortKItem{}} (Val:SortGenvCell{})), \exists{SortKItem{}} (Val:SortBusyCellOpt{}, inj{SortBusyCellOpt{}, SortKItem{}} (Val:SortBusyCellOpt{})), \exists{SortKItem{}} (Val:SortXstackCellOpt{}, inj{SortXstackCellOpt{}, SortKItem{}} (Val:SortXstackCellOpt{})), \exists{SortKItem{}} (Val:SortIOString{}, inj{SortIOString{}, SortKItem{}} (Val:SortIOString{})), \exists{SortKItem{}} (Val:SortGeneratedTopCellFragment{}, inj{SortGeneratedTopCellFragment{}, SortKItem{}} (Val:SortGeneratedTopCellFragment{})), \exists{SortKItem{}} (Val:SortReturnTypeCell{}, inj{SortReturnTypeCell{}, SortKItem{}} (Val:SortReturnTypeCell{})), \exists{SortKItem{}} (Val:SortIOError{}, inj{SortIOError{}, SortKItem{}} (Val:SortIOError{})), \bottom{SortKItem{}}()) [constructor{}()] // no junk
  axiom{} \or{SortNextLocCell{}} (\exists{SortNextLocCell{}} (X0:SortInt{}, Lbl'-LT-'nextLoc'-GT-'{}(X0:SortInt{})), \bottom{SortNextLocCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortIdCell{}} (\exists{SortIdCell{}} (X0:SortInt{}, Lbl'-LT-'id'-GT-'{}(X0:SortInt{})), \bottom{SortIdCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortInputCellOpt{}} (LblnoInputCell{}(), \exists{SortInputCellOpt{}} (Val:SortInputCell{}, inj{SortInputCell{}, SortInputCellOpt{}} (Val:SortInputCell{})), \bottom{SortInputCellOpt{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTypes{}} (Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}(), \exists{SortTypes{}} (X0:SortType{}, \exists{SortTypes{}} (X1:SortTypes{}, Lbl'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types{}(X0:SortType{}, X1:SortTypes{}))), \bottom{SortTypes{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTCellOpt{}} (LblnoTCell{}(), \exists{SortTCellOpt{}} (Val:SortTCell{}, inj{SortTCell{}, SortTCellOpt{}} (Val:SortTCell{})), \bottom{SortTCellOpt{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTCellFragment{}} (\exists{SortTCellFragment{}} (X0:SortThreadsCellOpt{}, \exists{SortTCellFragment{}} (X1:SortGenvCellOpt{}, \exists{SortTCellFragment{}} (X2:SortStoreCellOpt{}, \exists{SortTCellFragment{}} (X3:SortBusyCellOpt{}, \exists{SortTCellFragment{}} (X4:SortTerminatedCellOpt{}, \exists{SortTCellFragment{}} (X5:SortInputCellOpt{}, \exists{SortTCellFragment{}} (X6:SortOutputCellOpt{}, \exists{SortTCellFragment{}} (X7:SortNextLocCellOpt{}, Lbl'-LT-'T'-GT-'-fragment{}(X0:SortThreadsCellOpt{}, X1:SortGenvCellOpt{}, X2:SortStoreCellOpt{}, X3:SortBusyCellOpt{}, X4:SortTerminatedCellOpt{}, X5:SortInputCellOpt{}, X6:SortOutputCellOpt{}, X7:SortNextLocCellOpt{}))))))))), \bottom{SortTCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortControlCell{}} (\exists{SortControlCell{}} (X0:SortFstackCell{}, \exists{SortControlCell{}} (X1:SortXstackCell{}, \exists{SortControlCell{}} (X2:SortReturnTypeCell{}, Lbl'-LT-'control'-GT-'{}(X0:SortFstackCell{}, X1:SortXstackCell{}, X2:SortReturnTypeCell{})))), \bottom{SortControlCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortThreadCellFragment{}} (\exists{SortThreadCellFragment{}} (X0:SortIdCellOpt{}, \exists{SortThreadCellFragment{}} (X1:SortKCellOpt{}, \exists{SortThreadCellFragment{}} (X2:SortControlCellOpt{}, \exists{SortThreadCellFragment{}} (X3:SortEnvCellOpt{}, \exists{SortThreadCellFragment{}} (X4:SortHoldsCellOpt{}, Lbl'-LT-'thread'-GT-'-fragment{}(X0:SortIdCellOpt{}, X1:SortKCellOpt{}, X2:SortControlCellOpt{}, X3:SortEnvCellOpt{}, X4:SortHoldsCellOpt{})))))), \bottom{SortThreadCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortString{}} (\top{SortString{}}(), \bottom{SortString{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortKConfigVar{}} (\top{SortKConfigVar{}}(), \bottom{SortKConfigVar{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortIOInt{}} (\exists{SortIOInt{}} (Val:SortInt{}, inj{SortInt{}, SortIOInt{}} (Val:SortInt{})), \exists{SortIOInt{}} (Val:SortIOError{}, inj{SortIOError{}, SortIOInt{}} (Val:SortIOError{})), \bottom{SortIOInt{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTCell{}} (\exists{SortTCell{}} (X0:SortThreadsCell{}, \exists{SortTCell{}} (X1:SortGenvCell{}, \exists{SortTCell{}} (X2:SortStoreCell{}, \exists{SortTCell{}} (X3:SortBusyCell{}, \exists{SortTCell{}} (X4:SortTerminatedCell{}, \exists{SortTCell{}} (X5:SortInputCell{}, \exists{SortTCell{}} (X6:SortOutputCell{}, \exists{SortTCell{}} (X7:SortNextLocCell{}, Lbl'-LT-'T'-GT-'{}(X0:SortThreadsCell{}, X1:SortGenvCell{}, X2:SortStoreCell{}, X3:SortBusyCell{}, X4:SortTerminatedCell{}, X5:SortInputCell{}, X6:SortOutputCell{}, X7:SortNextLocCell{}))))))))), \bottom{SortTCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortExp{}} (\exists{SortExp{}} (X0:SortExp{}, Lbl'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{})), \exists{SortExp{}} (X0:SortExp{}, Lbl'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{})), \exists{SortExp{}} (X0:SortExp{}, Lbl-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{})), \exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExps{}, Lbl'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}))), \exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExps{}, Lbl'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}))), \exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \exists{SortExp{}} (X0:SortInt{}, Lbllookup'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'Int{}(X0:SortInt{})), \exists{SortExp{}} (X0:SortK{}, Lbllvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K{}(X0:SortK{})), Lblread'LParRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp{}(), \exists{SortExp{}} (X0:SortExp{}, LblsizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{})), \exists{SortExp{}} (X0:SortBlock{}, Lblspawn'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Block{}(X0:SortBlock{})), \exists{SortExp{}} (Val:SortString{}, inj{SortString{}, SortExp{}} (Val:SortString{})), \exists{SortExp{}} (Val:SortId{}, inj{SortId{}, SortExp{}} (Val:SortId{})), \exists{SortExp{}} (Val:SortBool{}, inj{SortBool{}, SortExp{}} (Val:SortBool{})), \exists{SortExp{}} (Val:SortInt{}, inj{SortInt{}, SortExp{}} (Val:SortInt{})), \exists{SortExp{}} (Val:SortVal{}, inj{SortVal{}, SortExp{}} (Val:SortVal{})), \bottom{SortExp{}}()) [constructor{}()] // no junk
  axiom{} \or{SortNextLocCellOpt{}} (LblnoNextLocCell{}(), \exists{SortNextLocCellOpt{}} (Val:SortNextLocCell{}, inj{SortNextLocCell{}, SortNextLocCellOpt{}} (Val:SortNextLocCell{})), \bottom{SortNextLocCellOpt{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTerminatedCellOpt{}} (LblnoTerminatedCell{}(), \exists{SortTerminatedCellOpt{}} (Val:SortTerminatedCell{}, inj{SortTerminatedCell{}, SortTerminatedCellOpt{}} (Val:SortTerminatedCell{})), \bottom{SortTerminatedCellOpt{}}()) [constructor{}()] // no junk
  axiom{} \or{SortGeneratedCounterCellOpt{}} (LblnoGeneratedCounterCell{}(), \exists{SortGeneratedCounterCellOpt{}} (Val:SortGeneratedCounterCell{}, inj{SortGeneratedCounterCell{}, SortGeneratedCounterCellOpt{}} (Val:SortGeneratedCounterCell{})), \bottom{SortGeneratedCounterCellOpt{}}()) [constructor{}()] // no junk
  axiom{} \or{SortParam{}} (\exists{SortParam{}} (X0:SortType{}, \exists{SortParam{}} (X1:SortId{}, Lbl'UndsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Param'Unds'Type'Unds'Id{}(X0:SortType{}, X1:SortId{}))), \bottom{SortParam{}}()) [constructor{}()] // no junk
  axiom{} \or{SortControlCellOpt{}} (LblnoControlCell{}(), \exists{SortControlCellOpt{}} (Val:SortControlCell{}, inj{SortControlCell{}, SortControlCellOpt{}} (Val:SortControlCell{})), \bottom{SortControlCellOpt{}}()) [constructor{}()] // no junk
  axiom{} \or{SortIdCellOpt{}} (LblnoIdCell{}(), \exists{SortIdCellOpt{}} (Val:SortIdCell{}, inj{SortIdCell{}, SortIdCellOpt{}} (Val:SortIdCell{})), \bottom{SortIdCellOpt{}}()) [constructor{}()] // no junk
  axiom{} \or{SortBusyCell{}} (\exists{SortBusyCell{}} (X0:SortSet{}, Lbl'-LT-'busy'-GT-'{}(X0:SortSet{})), \bottom{SortBusyCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortGeneratedCounterCell{}} (\exists{SortGeneratedCounterCell{}} (X0:SortInt{}, Lbl'-LT-'generatedCounter'-GT-'{}(X0:SortInt{})), \bottom{SortGeneratedCounterCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortThreadsCellFragment{}} (\exists{SortThreadsCellFragment{}} (X0:SortThreadCellMap{}, Lbl'-LT-'threads'-GT-'-fragment{}(X0:SortThreadCellMap{})), \bottom{SortThreadsCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortInputCell{}} (\exists{SortInputCell{}} (X0:SortList{}, Lbl'-LT-'input'-GT-'{}(X0:SortList{})), \bottom{SortInputCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortId{}} (\top{SortId{}}(), \bottom{SortId{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortVals{}} (Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}(), \exists{SortVals{}} (X0:SortVal{}, \exists{SortVals{}} (X1:SortVals{}, Lbl'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals{}(X0:SortVal{}, X1:SortVals{}))), \bottom{SortVals{}}()) [constructor{}()] // no junk
  axiom{} \or{SortStream{}} (\exists{SortStream{}} (X0:SortK{}, Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(X0:SortK{})), \exists{SortStream{}} (X0:SortInt{}, Lbl'Hash'istream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(X0:SortInt{})), \exists{SortStream{}} (X0:SortInt{}, Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(X0:SortInt{})), \exists{SortStream{}} (X0:SortString{}, \exists{SortStream{}} (X1:SortString{}, Lbl'Hash'parseInput'LParUndsCommUndsRParUnds'K-IO'Unds'Stream'Unds'String'Unds'String{}(X0:SortString{}, X1:SortString{}))), \bottom{SortStream{}}()) [constructor{}()] // no junk
  axiom{} \or{SortBool{}} (\top{SortBool{}}(), \bottom{SortBool{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortHoldsCellOpt{}} (LblnoHoldsCell{}(), \exists{SortHoldsCellOpt{}} (Val:SortHoldsCell{}, inj{SortHoldsCell{}, SortHoldsCellOpt{}} (Val:SortHoldsCell{})), \bottom{SortHoldsCellOpt{}}()) [constructor{}()] // no junk
  axiom{} \or{SortKCell{}} (\exists{SortKCell{}} (X0:SortK{}, Lbl'-LT-'k'-GT-'{}(X0:SortK{})), \bottom{SortKCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortStoreCell{}} (\exists{SortStoreCell{}} (X0:SortMap{}, Lbl'-LT-'store'-GT-'{}(X0:SortMap{})), \bottom{SortStoreCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortIOFile{}} (\exists{SortIOFile{}} (X0:SortString{}, \exists{SortIOFile{}} (X1:SortInt{}, Lbl'Hash'tempFile{}(X0:SortString{}, X1:SortInt{}))), \exists{SortIOFile{}} (Val:SortIOError{}, inj{SortIOError{}, SortIOFile{}} (Val:SortIOError{})), \bottom{SortIOFile{}}()) [constructor{}()] // no junk
  axiom{} \or{SortOutputCell{}} (\exists{SortOutputCell{}} (X0:SortList{}, Lbl'-LT-'output'-GT-'{}(X0:SortList{})), \bottom{SortOutputCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTerminatedCell{}} (\exists{SortTerminatedCell{}} (X0:SortSet{}, Lbl'-LT-'terminated'-GT-'{}(X0:SortSet{})), \bottom{SortTerminatedCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortStoreCellOpt{}} (LblnoStoreCell{}(), \exists{SortStoreCellOpt{}} (Val:SortStoreCell{}, inj{SortStoreCell{}, SortStoreCellOpt{}} (Val:SortStoreCell{})), \bottom{SortStoreCellOpt{}}()) [constructor{}()] // no junk
  axiom{} \or{SortFstackCellOpt{}} (LblnoFstackCell{}(), \exists{SortFstackCellOpt{}} (Val:SortFstackCell{}, inj{SortFstackCell{}, SortFstackCellOpt{}} (Val:SortFstackCell{})), \bottom{SortFstackCellOpt{}}()) [constructor{}()] // no junk
  axiom{} \or{SortThreadCell{}} (\exists{SortThreadCell{}} (X0:SortIdCell{}, \exists{SortThreadCell{}} (X1:SortKCell{}, \exists{SortThreadCell{}} (X2:SortControlCell{}, \exists{SortThreadCell{}} (X3:SortEnvCell{}, \exists{SortThreadCell{}} (X4:SortHoldsCell{}, Lbl'-LT-'thread'-GT-'{}(X0:SortIdCell{}, X1:SortKCell{}, X2:SortControlCell{}, X3:SortEnvCell{}, X4:SortHoldsCell{})))))), \bottom{SortThreadCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortThreadsCellOpt{}} (LblnoThreadsCell{}(), \exists{SortThreadsCellOpt{}} (Val:SortThreadsCell{}, inj{SortThreadsCell{}, SortThreadsCellOpt{}} (Val:SortThreadsCell{})), \bottom{SortThreadsCellOpt{}}()) [constructor{}()] // no junk
  axiom{} \or{SortKResult{}} (\exists{SortKResult{}} (Val:SortString{}, inj{SortString{}, SortKResult{}} (Val:SortString{})), \exists{SortKResult{}} (Val:SortVals{}, inj{SortVals{}, SortKResult{}} (Val:SortVals{})), \exists{SortKResult{}} (Val:SortBool{}, inj{SortBool{}, SortKResult{}} (Val:SortBool{})), \exists{SortKResult{}} (Val:SortInt{}, inj{SortInt{}, SortKResult{}} (Val:SortInt{})), \exists{SortKResult{}} (Val:SortVal{}, inj{SortVal{}, SortKResult{}} (Val:SortVal{})), \bottom{SortKResult{}}()) [constructor{}()] // no junk
  axiom{} \or{SortOutputCellOpt{}} (LblnoOutputCell{}(), \exists{SortOutputCellOpt{}} (Val:SortOutputCell{}, inj{SortOutputCell{}, SortOutputCellOpt{}} (Val:SortOutputCell{})), \bottom{SortOutputCellOpt{}}()) [constructor{}()] // no junk
  axiom{} \or{SortParams{}} (Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Params'Unds'Param'Unds'Params'QuotRBraUnds'Params{}(), \exists{SortParams{}} (X0:SortParam{}, \exists{SortParams{}} (X1:SortParams{}, Lbl'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Params'Unds'Param'Unds'Params{}(X0:SortParam{}, X1:SortParams{}))), \bottom{SortParams{}}()) [constructor{}()] // no junk
  axiom{} \or{SortEnvCell{}} (\exists{SortEnvCell{}} (X0:SortMap{}, Lbl'-LT-'env'-GT-'{}(X0:SortMap{})), \bottom{SortEnvCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortKCellOpt{}} (LblnoKCell{}(), \exists{SortKCellOpt{}} (Val:SortKCell{}, inj{SortKCell{}, SortKCellOpt{}} (Val:SortKCell{})), \bottom{SortKCellOpt{}}()) [constructor{}()] // no junk
  axiom{} \or{SortStmt{}} (\exists{SortStmt{}} (X0:SortExp{}, Lbl'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{})), \exists{SortStmt{}} (X0:SortType{}, \exists{SortStmt{}} (X1:SortId{}, \exists{SortStmt{}} (X2:SortParams{}, \exists{SortStmt{}} (X3:SortBlock{}, Lbl'UndsUndsLParUndsRParUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Id'Unds'Params'Unds'Block{}(X0:SortType{}, X1:SortId{}, X2:SortParams{}, X3:SortBlock{}))))), \exists{SortStmt{}} (X0:SortType{}, \exists{SortStmt{}} (X1:SortExps{}, Lbl'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps{}(X0:SortType{}, X1:SortExps{}))), \exists{SortStmt{}} (X0:SortStmt{}, \exists{SortStmt{}} (X1:SortStmt{}, Lbl'UndsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}))), \exists{SortStmt{}} (X0:SortExp{}, Lblacquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{})), \exists{SortStmt{}} (X0:SortStmt{}, \exists{SortStmt{}} (X1:SortExp{}, \exists{SortStmt{}} (X2:SortExp{}, \exists{SortStmt{}} (X3:SortBlock{}, Lblfor'LParUndsUndsSClnUndsRParUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Exp'Unds'Exp'Unds'Block{}(X0:SortStmt{}, X1:SortExp{}, X2:SortExp{}, X3:SortBlock{}))))), \exists{SortStmt{}} (X0:SortExp{}, \exists{SortStmt{}} (X1:SortBlock{}, Lblif'LParUndsRParUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(X0:SortExp{}, X1:SortBlock{}))), \exists{SortStmt{}} (X0:SortExp{}, \exists{SortStmt{}} (X1:SortBlock{}, \exists{SortStmt{}} (X2:SortBlock{}, Lblif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(X0:SortExp{}, X1:SortBlock{}, X2:SortBlock{})))), \exists{SortStmt{}} (X0:SortExp{}, Lbljoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{})), \exists{SortStmt{}} (X0:SortExps{}, Lblprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps{}(X0:SortExps{})), \exists{SortStmt{}} (X0:SortExp{}, Lblrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{})), \exists{SortStmt{}} (X0:SortExp{}, Lblrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{})), Lblreturn'SClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt{}(), \exists{SortStmt{}} (X0:SortExp{}, Lblreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{})), \exists{SortStmt{}} (X0:SortExp{}, Lblthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{})), \exists{SortStmt{}} (X0:SortBlock{}, \exists{SortStmt{}} (X1:SortParam{}, \exists{SortStmt{}} (X2:SortBlock{}, Lbltry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block{}(X0:SortBlock{}, X1:SortParam{}, X2:SortBlock{})))), \exists{SortStmt{}} (X0:SortExp{}, \exists{SortStmt{}} (X1:SortBlock{}, Lblwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(X0:SortExp{}, X1:SortBlock{}))), \exists{SortStmt{}} (Val:SortBlock{}, inj{SortBlock{}, SortStmt{}} (Val:SortBlock{})), \bottom{SortStmt{}}()) [constructor{}()] // no junk
  axiom{} \or{SortControlCellFragment{}} (\exists{SortControlCellFragment{}} (X0:SortFstackCellOpt{}, \exists{SortControlCellFragment{}} (X1:SortXstackCellOpt{}, \exists{SortControlCellFragment{}} (X2:SortReturnTypeCellOpt{}, Lbl'-LT-'control'-GT-'-fragment{}(X0:SortFstackCellOpt{}, X1:SortXstackCellOpt{}, X2:SortReturnTypeCellOpt{})))), \bottom{SortControlCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortThreadCellMap{}} (\exists{SortThreadCellMap{}} (Val:SortThreadCell{}, inj{SortThreadCell{}, SortThreadCellMap{}} (Val:SortThreadCell{})), \bottom{SortThreadCellMap{}}()) [constructor{}()] // no junk
  axiom{} \or{SortHoldsCell{}} (\exists{SortHoldsCell{}} (X0:SortMap{}, Lbl'-LT-'holds'-GT-'{}(X0:SortMap{})), \bottom{SortHoldsCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortInt{}} (\top{SortInt{}}(), \bottom{SortInt{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortFloat{}} (\top{SortFloat{}}(), \bottom{SortFloat{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortThreadsCell{}} (\exists{SortThreadsCell{}} (X0:SortThreadCellMap{}, Lbl'-LT-'threads'-GT-'{}(X0:SortThreadCellMap{})), \bottom{SortThreadsCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortGenvCellOpt{}} (LblnoGenvCell{}(), \exists{SortGenvCellOpt{}} (Val:SortGenvCell{}, inj{SortGenvCell{}, SortGenvCellOpt{}} (Val:SortGenvCell{})), \bottom{SortGenvCellOpt{}}()) [constructor{}()] // no junk
  axiom{} \or{SortType{}} (\exists{SortType{}} (X0:SortTypes{}, \exists{SortType{}} (X1:SortType{}, Lbl'Unds'-'-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Type'Unds'Types'Unds'Type{}(X0:SortTypes{}, X1:SortType{}))), \exists{SortType{}} (X0:SortType{}, Lbl'UndsLSqBRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Type'Unds'Type{}(X0:SortType{})), Lblbool'Unds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Type{}(), Lblint'Unds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Type{}(), Lblstring'Unds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Type{}(), Lblvoid'Unds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Type{}(), \bottom{SortType{}}()) [constructor{}()] // no junk
  axiom{} \or{SortGeneratedTopCell{}} (\exists{SortGeneratedTopCell{}} (X0:SortTCell{}, \exists{SortGeneratedTopCell{}} (X1:SortGeneratedCounterCell{}, Lbl'-LT-'generatedTop'-GT-'{}(X0:SortTCell{}, X1:SortGeneratedCounterCell{}))), \bottom{SortGeneratedTopCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortXstackCell{}} (\exists{SortXstackCell{}} (X0:SortList{}, Lbl'-LT-'xstack'-GT-'{}(X0:SortList{})), \bottom{SortXstackCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortEnvCellOpt{}} (LblnoEnvCell{}(), \exists{SortEnvCellOpt{}} (Val:SortEnvCell{}, inj{SortEnvCell{}, SortEnvCellOpt{}} (Val:SortEnvCell{})), \bottom{SortEnvCellOpt{}}()) [constructor{}()] // no junk
  axiom{} \or{SortBlock{}} (\exists{SortBlock{}} (X0:SortStmt{}, Lbl'LBraUndsRBraUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Block'Unds'Stmt{}(X0:SortStmt{})), Lbl'LBraRBraUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Block{}(), \bottom{SortBlock{}}()) [constructor{}()] // no junk
  axiom{} \or{SortVal{}} (\exists{SortVal{}} (X0:SortType{}, \exists{SortVal{}} (X1:SortInt{}, \exists{SortVal{}} (X2:SortInt{}, Lblarray'LParUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Val'Unds'Type'Unds'Int'Unds'Int{}(X0:SortType{}, X1:SortInt{}, X2:SortInt{})))), \exists{SortVal{}} (X0:SortType{}, \exists{SortVal{}} (X1:SortParams{}, \exists{SortVal{}} (X2:SortStmt{}, Lbllambda'LParUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Val'Unds'Type'Unds'Params'Unds'Stmt{}(X0:SortType{}, X1:SortParams{}, X2:SortStmt{})))), \exists{SortVal{}} (X0:SortInt{}, Lblloc'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Val'Unds'Int{}(X0:SortInt{})), \exists{SortVal{}} (X0:SortType{}, Lblnothing'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Val'Unds'Type{}(X0:SortType{})), \exists{SortVal{}} (Val:SortString{}, inj{SortString{}, SortVal{}} (Val:SortString{})), \exists{SortVal{}} (Val:SortBool{}, inj{SortBool{}, SortVal{}} (Val:SortBool{})), \exists{SortVal{}} (Val:SortInt{}, inj{SortInt{}, SortVal{}} (Val:SortInt{})), \bottom{SortVal{}}()) [constructor{}()] // no junk
  axiom{} \or{SortFstackCell{}} (\exists{SortFstackCell{}} (X0:SortList{}, Lbl'-LT-'fstack'-GT-'{}(X0:SortList{})), \bottom{SortFstackCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortExps{}} (Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps'QuotRBraUnds'Exps{}(), \exists{SortExps{}} (X0:SortExp{}, \exists{SortExps{}} (X1:SortExps{}, Lbl'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}))), \exists{SortExps{}} (Val:SortVals{}, inj{SortVals{}, SortExps{}} (Val:SortVals{})), \bottom{SortExps{}}()) [constructor{}()] // no junk
  axiom{} \or{SortGenvCell{}} (\exists{SortGenvCell{}} (X0:SortMap{}, Lbl'-LT-'genv'-GT-'{}(X0:SortMap{})), \bottom{SortGenvCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortBusyCellOpt{}} (LblnoBusyCell{}(), \exists{SortBusyCellOpt{}} (Val:SortBusyCell{}, inj{SortBusyCell{}, SortBusyCellOpt{}} (Val:SortBusyCell{})), \bottom{SortBusyCellOpt{}}()) [constructor{}()] // no junk
  axiom{} \or{SortXstackCellOpt{}} (LblnoXstackCell{}(), \exists{SortXstackCellOpt{}} (Val:SortXstackCell{}, inj{SortXstackCell{}, SortXstackCellOpt{}} (Val:SortXstackCell{})), \bottom{SortXstackCellOpt{}}()) [constructor{}()] // no junk
  axiom{} \or{SortIOString{}} (\exists{SortIOString{}} (Val:SortString{}, inj{SortString{}, SortIOString{}} (Val:SortString{})), \exists{SortIOString{}} (Val:SortIOError{}, inj{SortIOError{}, SortIOString{}} (Val:SortIOError{})), \bottom{SortIOString{}}()) [constructor{}()] // no junk
  axiom{} \or{SortGeneratedTopCellFragment{}} (\exists{SortGeneratedTopCellFragment{}} (X0:SortTCellOpt{}, \exists{SortGeneratedTopCellFragment{}} (X1:SortGeneratedCounterCellOpt{}, Lbl'-LT-'generatedTop'-GT-'-fragment{}(X0:SortTCellOpt{}, X1:SortGeneratedCounterCellOpt{}))), \bottom{SortGeneratedTopCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortReturnTypeCell{}} (\exists{SortReturnTypeCell{}} (X0:SortType{}, Lbl'-LT-'returnType'-GT-'{}(X0:SortType{})), \bottom{SortReturnTypeCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EACCES{}(), Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EAGAIN{}(), Lbl'Hash'EALREADY{}(), Lbl'Hash'EBADF{}(), Lbl'Hash'EBUSY{}(), Lbl'Hash'ECHILD{}(), Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EDEADLK{}(), Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EDOM{}(), Lbl'Hash'EEXIST{}(), Lbl'Hash'EFAULT{}(), Lbl'Hash'EFBIG{}(), Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EINTR{}(), Lbl'Hash'EINVAL{}(), Lbl'Hash'EIO{}(), Lbl'Hash'EISCONN{}(), Lbl'Hash'EISDIR{}(), Lbl'Hash'ELOOP{}(), Lbl'Hash'EMFILE{}(), Lbl'Hash'EMLINK{}(), Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ENOSPC{}(), Lbl'Hash'ENOSYS{}(), Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ENOTTY{}(), Lbl'Hash'ENXIO{}(), Lbl'Hash'EOF{}(), Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'EPERM{}(), Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'EPIPE{}(), Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'ERANGE{}(), Lbl'Hash'EROFS{}(), Lbl'Hash'ESHUTDOWN{}(), Lbl'Hash'ESOCKTNOSUPPORT{}(), Lbl'Hash'ESPIPE{}(), Lbl'Hash'ESRCH{}(), Lbl'Hash'ETIMEDOUT{}(), Lbl'Hash'ETOOMANYREFS{}(), Lbl'Hash'EWOULDBLOCK{}(), Lbl'Hash'EXDEV{}(), \exists{SortIOError{}} (X0:SortString{}, Lbl'Hash'noParse{}(X0:SortString{})), \exists{SortIOError{}} (X0:SortInt{}, Lbl'Hash'unknownIOError{}(X0:SortInt{})), \bottom{SortIOError{}}()) [constructor{}()] // no junk
  axiom{R} \equals{SortExps{}, R} (Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps'QuotRBraUnds'Exps{}(), inj{SortVals{}, SortExps{}} (Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}())) [overload{}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps'QuotRBraUnds'Exps{}(), Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}())] // overloaded production
  axiom{R} \equals{SortExps{}, R} (Lbl'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(inj{SortVal{}, SortExp{}} (K0:SortVal{}),inj{SortVals{}, SortExps{}} (K1:SortVals{})), inj{SortVals{}, SortExps{}} (Lbl'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals{}(K0:SortVal{},K1:SortVals{}))) [overload{}(Lbl'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(), Lbl'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals{}())] // overloaded production

// rules
// rule `#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`{K}(C,B1,_Gen0)=>B1 requires C ensures #token("true","Bool") [UNIQUE_ID(2b32069ac3f589174502fa507ebc88fab7c902854c0a9baa8ab09beb551232e2), org.kframework.attributes.Location(Location(2304,8,2304,59)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        VarC:SortBool{},
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarC:SortBool{}
          ),\and{R} (
          \in{SortK{}, R} (
            X1:SortK{},
            VarB1:SortK{}
          ),\and{R} (
          \in{SortK{}, R} (
            X2:SortK{},
            Var'Unds'Gen0:SortK{}
          ),
          \top{R} ()
        )))),
    \equals{SortK{},R} (
      Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortK{}}(X0:SortBool{},X1:SortK{},X2:SortK{}),
     \and{SortK{}} (
       VarB1:SortK{},
        \top{SortK{}}())))
  [UNIQUE'Unds'ID{}("2b32069ac3f589174502fa507ebc88fab7c902854c0a9baa8ab09beb551232e2"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2304,8,2304,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]")]

// rule `#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`{K}(C,_Gen0,B2)=>B2 requires `notBool_`(C) ensures #token("true","Bool") [UNIQUE_ID(651bff3fa53d464ac7dd7aa77e1ef6071e14c959eb6df97baa325e2ad300daaa), org.kframework.attributes.Location(Location(2305,8,2305,67)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        LblnotBool'Unds'{}(VarC:SortBool{}),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarC:SortBool{}
          ),\and{R} (
          \in{SortK{}, R} (
            X1:SortK{},
            Var'Unds'Gen0:SortK{}
          ),\and{R} (
          \in{SortK{}, R} (
            X2:SortK{},
            VarB2:SortK{}
          ),
          \top{R} ()
        )))),
    \equals{SortK{},R} (
      Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortK{}}(X0:SortBool{},X1:SortK{},X2:SortK{}),
     \and{SortK{}} (
       VarB2:SortK{},
        \top{SortK{}}())))
  [UNIQUE'Unds'ID{}("651bff3fa53d464ac7dd7aa77e1ef6071e14c959eb6df97baa325e2ad300daaa"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2305,8,2305,67)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]")]

// rule `#open(_)_K-IO_IOInt_String`(S)=>`#open(_,_)_K-IO_IOInt_String_String`(S,#token("\"r+\"","String")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7ad2779cd54b9009119458217cae5138026cc4ff244e54c28e64db21100f63d9), org.kframework.attributes.Location(Location(2479,8,2479,48)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarS:SortString{}
          ),
          \top{R} ()
        )),
    \equals{SortIOInt{},R} (
      Lbl'Hash'open'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'String{}(X0:SortString{}),
     \and{SortIOInt{}} (
       Lbl'Hash'open'LParUndsCommUndsRParUnds'K-IO'Unds'IOInt'Unds'String'Unds'String{}(VarS:SortString{},\dv{SortString{}}("r+")),
        \top{SortIOInt{}}())))
  [UNIQUE'Unds'ID{}("7ad2779cd54b9009119458217cae5138026cc4ff244e54c28e64db21100f63d9"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2479,8,2479,48)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `#stderr_K-IO_Int`(.KList)=>#token("2","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(75e0a8082acda4cf1e29caa6aaafb7f9a421e16421a41f2006943d6fab17a162), org.kframework.attributes.Location(Location(2576,8,2576,20)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortInt{},R} (
      Lbl'Hash'stderr'Unds'K-IO'Unds'Int{}(),
     \and{SortInt{}} (
       \dv{SortInt{}}("2"),
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("75e0a8082acda4cf1e29caa6aaafb7f9a421e16421a41f2006943d6fab17a162"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2576,8,2576,20)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `#stdin_K-IO_Int`(.KList)=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c7ffdc9908c28a954521816d680f4e5ec44a679c7231a8dd09d4700f50b6d8c3), org.kframework.attributes.Location(Location(2574,8,2574,19)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortInt{},R} (
      Lbl'Hash'stdin'Unds'K-IO'Unds'Int{}(),
     \and{SortInt{}} (
       \dv{SortInt{}}("0"),
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("c7ffdc9908c28a954521816d680f4e5ec44a679c7231a8dd09d4700f50b6d8c3"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2574,8,2574,19)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `#stdout_K-IO_Int`(.KList)=>#token("1","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4ad4f379ff9db687ff9dfd1b15052edbcd3342a2ed262ecdd38c769e177a592c), org.kframework.attributes.Location(Location(2575,8,2575,20)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortInt{},R} (
      Lbl'Hash'stdout'Unds'K-IO'Unds'Int{}(),
     \and{SortInt{}} (
       \dv{SortInt{}}("1"),
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("4ad4f379ff9db687ff9dfd1b15052edbcd3342a2ed262ecdd38c769e177a592c"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2575,8,2575,20)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen1,`<thread>`(_Gen1,`<k>`(inj{Exp,KItem}(`read()_SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp`(.KList))~>_DotVar5),_Gen2,_Gen3,_Gen4)),_DotVar3)) #as _Gen12,_Gen5,_Gen6,_Gen7,_Gen8,`<input>`(`_List_`(`ListItem`(inj{Stream,KItem}(`#buffer(_)_K-IO_Stream_K`(inj{String,KItem}(_Gen0)))),_DotVar2)),_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(_Gen12,_Gen5,_Gen6,_Gen7,_Gen8,`<input>`(`_List_`(`_List_`(`ListItem`(inj{Stream,KItem}(`#parseInput(_,_)_K-IO_Stream_String_String`(#token("\"Int\"","String"),#token("\" \\n\\t\\r\"","String")))),`ListItem`(inj{Stream,KItem}(`#buffer(_)_K-IO_Stream_K`(inj{String,KItem}(_Gen0))))),_DotVar2)),_Gen9,_Gen10),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d741181842e9831e0c7be5cbffd174f78d5308ddb7ec0d8df5abbe7f5b90a93c), org.kframework.attributes.Location(Location(224,8,224,76)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), read]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(\and{SortThreadsCell{}}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen1:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen1:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lblread'LParRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp{}()),Var'Unds'DotVar5:SortK{})),Var'Unds'Gen2:SortControlCell{},Var'Unds'Gen3:SortEnvCell{},Var'Unds'Gen4:SortHoldsCell{})),Var'Unds'DotVar3:SortThreadCellMap{})),Var'Unds'Gen12:SortThreadsCell{}),Var'Unds'Gen5:SortGenvCell{},Var'Unds'Gen6:SortStoreCell{},Var'Unds'Gen7:SortBusyCell{},Var'Unds'Gen8:SortTerminatedCell{},Lbl'-LT-'input'-GT-'{}(Lbl'Unds'List'Unds'{}(LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(kseq{}(inj{SortString{}, SortKItem{}}(Var'Unds'Gen0:SortString{}),dotk{}())))),Var'Unds'DotVar2:SortList{})),Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Var'Unds'Gen12:SortThreadsCell{},Var'Unds'Gen5:SortGenvCell{},Var'Unds'Gen6:SortStoreCell{},Var'Unds'Gen7:SortBusyCell{},Var'Unds'Gen8:SortTerminatedCell{},Lbl'-LT-'input'-GT-'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'parseInput'LParUndsCommUndsRParUnds'K-IO'Unds'Stream'Unds'String'Unds'String{}(\dv{SortString{}}("Int"),\dv{SortString{}}(" \n\t\r")))),LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(kseq{}(inj{SortString{}, SortKItem{}}(Var'Unds'Gen0:SortString{}),dotk{}()))))),Var'Unds'DotVar2:SortList{})),Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("d741181842e9831e0c7be5cbffd174f78d5308ddb7ec0d8df5abbe7f5b90a93c"), group{}("read"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(224,8,224,76)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(_Gen1,_Gen2,_Gen3,_Gen4,_Gen5,_Gen6,`<output>`(`_List_`(`_List_`(`_List_`(`ListItem`(inj{Stream,KItem}(`#ostream(_)_K-IO_Stream_Int`(N))),`ListItem`(inj{String,KItem}(#token("\"on\"","String")))),`ListItem`(inj{Stream,KItem}(`#buffer(_)_K-IO_Stream_K`(inj{String,KItem}(S))))),_Gen0)),_Gen7),_DotVar0)=>`<generatedTop>`(`<T>`(_Gen1,_Gen2,_Gen3,_Gen4,_Gen5,_Gen6,`<output>`(`_List_`(`_List_`(`_List_`(`ListItem`(inj{Stream,KItem}(`#ostream(_)_K-IO_Stream_Int`(`project:Int`(`#write(_,_)_K-IO_K_Int_String`(N,S)~>inj{Int,KItem}(N))))),`ListItem`(inj{String,KItem}(#token("\"on\"","String")))),`ListItem`(inj{Stream,KItem}(`#buffer(_)_K-IO_Stream_K`(inj{String,KItem}(#token("\"\"","String")))))),_Gen0)),_Gen7),_DotVar0) requires `_=/=String__STRING-COMMON_Bool_String_String`(S,#token("\"\"","String")) ensures #token("true","Bool") [UNIQUE_ID(829e7a581bda9035541ca05d9bfdcdc5eaaead3bd4adcbcd0064665c87d15682), label(STDOUT-STREAM.stdoutWrite), org.kframework.attributes.Location(Location(2792,8,2798,28)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), priority(30), stream]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Var'Unds'Gen1:SortThreadsCell{},Var'Unds'Gen2:SortGenvCell{},Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortInputCell{},Lbl'-LT-'output'-GT-'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(VarN:SortInt{}))),LblListItem{}(inj{SortString{}, SortKItem{}}(\dv{SortString{}}("on")))),LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(kseq{}(inj{SortString{}, SortKItem{}}(VarS:SortString{}),dotk{}()))))),Var'Unds'Gen0:SortList{})),Var'Unds'Gen7:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(VarS:SortString{},\dv{SortString{}}("")),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Var'Unds'Gen1:SortThreadsCell{},Var'Unds'Gen2:SortGenvCell{},Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortInputCell{},Lbl'-LT-'output'-GT-'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(Lblproject'Coln'Int{}(append{}(Lbl'Hash'write'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'String{}(VarN:SortInt{},VarS:SortString{}),kseq{}(inj{SortInt{}, SortKItem{}}(VarN:SortInt{}),dotk{}())))))),LblListItem{}(inj{SortString{}, SortKItem{}}(\dv{SortString{}}("on")))),LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(kseq{}(inj{SortString{}, SortKItem{}}(\dv{SortString{}}("")),dotk{}()))))),Var'Unds'Gen0:SortList{})),Var'Unds'Gen7:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("829e7a581bda9035541ca05d9bfdcdc5eaaead3bd4adcbcd0064665c87d15682"), label{}("STDOUT-STREAM.stdoutWrite"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2792,8,2798,28)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), priority{}("30"), stream{}("")]

// rule `<generatedTop>`(`<T>`(_Gen1,_Gen2,_Gen3,_Gen4,_Gen5,`<input>`(`_List_`(`_List_`(`ListItem`(inj{Stream,KItem}(`#parseInput(_,_)_K-IO_Stream_String_String`(Sort,Delimiters))),`ListItem`(inj{Stream,KItem}(`#buffer(_)_K-IO_Stream_K`(inj{String,KItem}(S))))),_Gen0)),_Gen6,_Gen7),_DotVar0)=>`<generatedTop>`(`<T>`(_Gen1,_Gen2,_Gen3,_Gen4,_Gen5,`<input>`(`_List_`(`_List_`(`ListItem`(inj{Stream,KItem}(`#parseInput(_,_)_K-IO_Stream_String_String`(Sort,Delimiters))),`ListItem`(inj{Stream,KItem}(`#buffer(_)_K-IO_Stream_K`(inj{String,KItem}(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S,#token("1","Int"),`lengthString(_)_STRING-COMMON_Int_String`(S))))))),_Gen0)),_Gen6,_Gen7),_DotVar0) requires `_andBool_`(`_andBool_`(`_=/=Int_`(`findChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(S,Delimiters,#token("0","Int")),#token("-1","Int")),`_=/=String__STRING-COMMON_Bool_String_String`(Sort,#token("\"String\"","String"))),`_<=Int_`(`lengthString(_)_STRING-COMMON_Int_String`(S),#token("1","Int"))) ensures #token("true","Bool") [UNIQUE_ID(3460632040d4a6b6996153112abdd94b045405f44caa9ced1a89d5bc3ccfc51e), label(STDIN-STREAM.stdinTrim), org.kframework.attributes.Location(Location(2711,8,2718,39)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), stream]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Var'Unds'Gen1:SortThreadsCell{},Var'Unds'Gen2:SortGenvCell{},Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Lbl'-LT-'input'-GT-'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'parseInput'LParUndsCommUndsRParUnds'K-IO'Unds'Stream'Unds'String'Unds'String{}(VarSort:SortString{},VarDelimiters:SortString{}))),LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(kseq{}(inj{SortString{}, SortKItem{}}(VarS:SortString{}),dotk{}()))))),Var'Unds'Gen0:SortList{})),Var'Unds'Gen6:SortOutputCell{},Var'Unds'Gen7:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'UndsEqlsSlshEqls'Int'Unds'{}(LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS:SortString{},VarDelimiters:SortString{},\dv{SortInt{}}("0")),\dv{SortInt{}}("-1")),Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(VarSort:SortString{},\dv{SortString{}}("String"))),Lbl'Unds-LT-Eqls'Int'Unds'{}(LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarS:SortString{}),\dv{SortInt{}}("1"))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Var'Unds'Gen1:SortThreadsCell{},Var'Unds'Gen2:SortGenvCell{},Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Lbl'-LT-'input'-GT-'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'parseInput'LParUndsCommUndsRParUnds'K-IO'Unds'Stream'Unds'String'Unds'String{}(VarSort:SortString{},VarDelimiters:SortString{}))),LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(kseq{}(inj{SortString{}, SortKItem{}}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS:SortString{},\dv{SortInt{}}("1"),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarS:SortString{}))),dotk{}()))))),Var'Unds'Gen0:SortList{})),Var'Unds'Gen6:SortOutputCell{},Var'Unds'Gen7:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("3460632040d4a6b6996153112abdd94b045405f44caa9ced1a89d5bc3ccfc51e"), label{}("STDIN-STREAM.stdinTrim"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2711,8,2718,39)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), stream{}("")]

// rule `<generatedTop>`(`<T>`(_Gen1,_Gen2,_Gen3,_Gen4,_Gen5,`<input>`(`_List_`(`_List_`(`ListItem`(inj{Stream,KItem}(`#parseInput(_,_)_K-IO_Stream_String_String`(#token("\"Int\"","String"),Delimiters))),`ListItem`(inj{Stream,KItem}(`#buffer(_)_K-IO_Stream_K`(inj{String,KItem}(S))))),_Gen0)),_Gen6,_Gen7),_DotVar0)=>`<generatedTop>`(`<T>`(_Gen1,_Gen2,_Gen3,_Gen4,_Gen5,`<input>`(`_List_`(`_List_`(`ListItem`(inj{Int,KItem}(`String2Int(_)_STRING-COMMON_Int_String`(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S,#token("0","Int"),`findChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(S,Delimiters,#token("0","Int")))))),`ListItem`(inj{Stream,KItem}(`#buffer(_)_K-IO_Stream_K`(inj{String,KItem}(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S,`_+Int_`(`findChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(S,Delimiters,#token("0","Int")),#token("1","Int")),`lengthString(_)_STRING-COMMON_Int_String`(S))))))),_Gen0)),_Gen6,_Gen7),_DotVar0) requires `_andBool_`(`_=/=Int_`(`findChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(S,Delimiters,#token("0","Int")),#token("-1","Int")),`_>Int_`(`lengthString(_)_STRING-COMMON_Int_String`(S),#token("1","Int"))) ensures #token("true","Bool") [UNIQUE_ID(276cf77a317ebbe308a0a353690291cbf2a01f9dd3f1681037f881a9106caaa0), label(STDIN-STREAM.stdinParseInt), org.kframework.attributes.Location(Location(2700,8,2707,38)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), stream]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Var'Unds'Gen1:SortThreadsCell{},Var'Unds'Gen2:SortGenvCell{},Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Lbl'-LT-'input'-GT-'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'parseInput'LParUndsCommUndsRParUnds'K-IO'Unds'Stream'Unds'String'Unds'String{}(\dv{SortString{}}("Int"),VarDelimiters:SortString{}))),LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(kseq{}(inj{SortString{}, SortKItem{}}(VarS:SortString{}),dotk{}()))))),Var'Unds'Gen0:SortList{})),Var'Unds'Gen6:SortOutputCell{},Var'Unds'Gen7:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(Lbl'UndsEqlsSlshEqls'Int'Unds'{}(LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS:SortString{},VarDelimiters:SortString{},\dv{SortInt{}}("0")),\dv{SortInt{}}("-1")),Lbl'Unds-GT-'Int'Unds'{}(LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarS:SortString{}),\dv{SortInt{}}("1"))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Var'Unds'Gen1:SortThreadsCell{},Var'Unds'Gen2:SortGenvCell{},Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Lbl'-LT-'input'-GT-'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(LblListItem{}(inj{SortInt{}, SortKItem{}}(LblString2Int'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS:SortString{},\dv{SortInt{}}("0"),LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS:SortString{},VarDelimiters:SortString{},\dv{SortInt{}}("0")))))),LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(kseq{}(inj{SortString{}, SortKItem{}}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS:SortString{},Lbl'UndsPlus'Int'Unds'{}(LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS:SortString{},VarDelimiters:SortString{},\dv{SortInt{}}("0")),\dv{SortInt{}}("1")),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarS:SortString{}))),dotk{}()))))),Var'Unds'Gen0:SortList{})),Var'Unds'Gen6:SortOutputCell{},Var'Unds'Gen7:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("276cf77a317ebbe308a0a353690291cbf2a01f9dd3f1681037f881a9106caaa0"), label{}("STDIN-STREAM.stdinParseInt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2700,8,2707,38)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), stream{}("")]

// rule `<generatedTop>`(`<T>`(_Gen1,_Gen2,_Gen3,_Gen4,_Gen5,`<input>`(`_List_`(`_List_`(`ListItem`(inj{Stream,KItem}(`#parseInput(_,_)_K-IO_Stream_String_String`(#token("\"String\"","String"),Delimiters))),`ListItem`(inj{Stream,KItem}(`#buffer(_)_K-IO_Stream_K`(inj{String,KItem}(S))))),_Gen0)),_Gen6,_Gen7),_DotVar0)=>`<generatedTop>`(`<T>`(_Gen1,_Gen2,_Gen3,_Gen4,_Gen5,`<input>`(`_List_`(`_List_`(`ListItem`(inj{String,KItem}(S)),`ListItem`(inj{Stream,KItem}(`#buffer(_)_K-IO_Stream_K`(inj{String,KItem}(#token("\"\"","String")))))),_Gen0)),_Gen6,_Gen7),_DotVar0) requires `_=/=Int_`(`findChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(S,Delimiters,#token("0","Int")),#token("-1","Int")) ensures #token("true","Bool") [UNIQUE_ID(3ae93598c3863f4e83c9e0f431bf1e1702334accac62a68621651783a7e8247a), label(STDIN-STREAM.stdinParseString), org.kframework.attributes.Location(Location(2690,8,2695,50)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), stream]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Var'Unds'Gen1:SortThreadsCell{},Var'Unds'Gen2:SortGenvCell{},Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Lbl'-LT-'input'-GT-'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'parseInput'LParUndsCommUndsRParUnds'K-IO'Unds'Stream'Unds'String'Unds'String{}(\dv{SortString{}}("String"),VarDelimiters:SortString{}))),LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(kseq{}(inj{SortString{}, SortKItem{}}(VarS:SortString{}),dotk{}()))))),Var'Unds'Gen0:SortList{})),Var'Unds'Gen6:SortOutputCell{},Var'Unds'Gen7:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'UndsEqlsSlshEqls'Int'Unds'{}(LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS:SortString{},VarDelimiters:SortString{},\dv{SortInt{}}("0")),\dv{SortInt{}}("-1")),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Var'Unds'Gen1:SortThreadsCell{},Var'Unds'Gen2:SortGenvCell{},Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Lbl'-LT-'input'-GT-'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(LblListItem{}(inj{SortString{}, SortKItem{}}(VarS:SortString{})),LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(kseq{}(inj{SortString{}, SortKItem{}}(\dv{SortString{}}("")),dotk{}()))))),Var'Unds'Gen0:SortList{})),Var'Unds'Gen6:SortOutputCell{},Var'Unds'Gen7:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("3ae93598c3863f4e83c9e0f431bf1e1702334accac62a68621651783a7e8247a"), label{}("STDIN-STREAM.stdinParseString"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2690,8,2695,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), stream{}("")]

// rule `<generatedTop>`(`<T>`(_Gen1,_Gen2,_Gen3,_Gen4,_Gen5,`<input>`(`_List_`(`_List_`(`_List_`(`ListItem`(inj{Stream,KItem}(`#parseInput(_,_)_K-IO_Stream_String_String`(_Gen0,Delimiters))),`ListItem`(inj{Stream,KItem}(`#buffer(_)_K-IO_Stream_K`(inj{String,KItem}(S))))),`ListItem`(inj{String,KItem}(#token("\"on\"","String")))),`ListItem`(inj{Stream,KItem}(`#istream(_)_K-IO_Stream_Int`(N))))),_Gen6,_Gen7),_DotVar0)=>`<generatedTop>`(`<T>`(_Gen1,_Gen2,_Gen3,_Gen4,_Gen5,`<input>`(`_List_`(`_List_`(`_List_`(`ListItem`(inj{Stream,KItem}(`#parseInput(_,_)_K-IO_Stream_String_String`(_Gen0,Delimiters))),`ListItem`(inj{Stream,KItem}(`#buffer(_)_K-IO_Stream_K`(inj{String,KItem}(`_+String__STRING-COMMON_String_String_String`(S,`chrChar(_)_STRING-COMMON_String_Int`(`project:Int`(inj{IOInt,KItem}(`#getc(_)_K-IO_IOInt_Int`(N)))))))))),`ListItem`(inj{String,KItem}(#token("\"on\"","String")))),`ListItem`(inj{Stream,KItem}(`#istream(_)_K-IO_Stream_Int`(N))))),_Gen6,_Gen7),_DotVar0) requires `_==Int_`(`findChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(S,Delimiters,#token("0","Int")),#token("-1","Int")) ensures #token("true","Bool") [UNIQUE_ID(b30d0d76abe8106854fc25ad1443e672cd6a0c1de7a1016001a5af430b38090b), label(STDIN-STREAM.stdinGetc), org.kframework.attributes.Location(Location(2679,8,2685,49)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), priority(200), stream]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Var'Unds'Gen1:SortThreadsCell{},Var'Unds'Gen2:SortGenvCell{},Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Lbl'-LT-'input'-GT-'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'parseInput'LParUndsCommUndsRParUnds'K-IO'Unds'Stream'Unds'String'Unds'String{}(Var'Unds'Gen0:SortString{},VarDelimiters:SortString{}))),LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(kseq{}(inj{SortString{}, SortKItem{}}(VarS:SortString{}),dotk{}()))))),LblListItem{}(inj{SortString{}, SortKItem{}}(\dv{SortString{}}("on")))),LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'istream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(VarN:SortInt{}))))),Var'Unds'Gen6:SortOutputCell{},Var'Unds'Gen7:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'UndsEqlsEqls'Int'Unds'{}(LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS:SortString{},VarDelimiters:SortString{},\dv{SortInt{}}("0")),\dv{SortInt{}}("-1")),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Var'Unds'Gen1:SortThreadsCell{},Var'Unds'Gen2:SortGenvCell{},Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Lbl'-LT-'input'-GT-'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'parseInput'LParUndsCommUndsRParUnds'K-IO'Unds'Stream'Unds'String'Unds'String{}(Var'Unds'Gen0:SortString{},VarDelimiters:SortString{}))),LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(kseq{}(inj{SortString{}, SortKItem{}}(Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(VarS:SortString{},LblchrChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int{}(Lblproject'Coln'Int{}(kseq{}(inj{SortIOInt{}, SortKItem{}}(Lbl'Hash'getc'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'Int{}(VarN:SortInt{})),dotk{}()))))),dotk{}()))))),LblListItem{}(inj{SortString{}, SortKItem{}}(\dv{SortString{}}("on")))),LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'istream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(VarN:SortInt{}))))),Var'Unds'Gen6:SortOutputCell{},Var'Unds'Gen7:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("b30d0d76abe8106854fc25ad1443e672cd6a0c1de7a1016001a5af430b38090b"), label{}("STDIN-STREAM.stdinGetc"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2679,8,2685,49)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), priority{}("200"), stream{}("")]

// rule `<generatedTop>`(`<T>`(_Gen3,_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,`<output>`(`_List_`(`_List_`(`_List_`(`_List_`(`ListItem`(inj{Stream,KItem}(`#ostream(_)_K-IO_Stream_Int`(_Gen0))),`ListItem`(_Gen1)),`ListItem`(inj{Stream,KItem}(`#buffer(_)_K-IO_Stream_K`(inj{String,KItem}(Buffer))))),`ListItem`(inj{Float,KItem}(F))),_Gen2)),_Gen9),_DotVar0)=>`<generatedTop>`(`<T>`(_Gen3,_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,`<output>`(`_List_`(`_List_`(`_List_`(`ListItem`(inj{Stream,KItem}(`#ostream(_)_K-IO_Stream_Int`(_Gen0))),`ListItem`(_Gen1)),`ListItem`(inj{Stream,KItem}(`#buffer(_)_K-IO_Stream_K`(inj{String,KItem}(`_+String__STRING-COMMON_String_String_String`(Buffer,`Float2String(_)_STRING-COMMON_String_Float`(F))))))),_Gen2)),_Gen9),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(89fef51abf440e0b5fb4f7e5124420710d920e33fd02d4b5f0a2bce24cf6bb6b), label(STDOUT-STREAM.stdoutBufferFloat), org.kframework.attributes.Location(Location(2760,8,2766,17)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), priority(25), stream]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Var'Unds'Gen3:SortThreadsCell{},Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Lbl'-LT-'output'-GT-'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(Var'Unds'Gen0:SortInt{}))),LblListItem{}(Var'Unds'Gen1:SortKItem{})),LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(kseq{}(inj{SortString{}, SortKItem{}}(VarBuffer:SortString{}),dotk{}()))))),LblListItem{}(inj{SortFloat{}, SortKItem{}}(VarF:SortFloat{}))),Var'Unds'Gen2:SortList{})),Var'Unds'Gen9:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Var'Unds'Gen3:SortThreadsCell{},Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Lbl'-LT-'output'-GT-'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(Var'Unds'Gen0:SortInt{}))),LblListItem{}(Var'Unds'Gen1:SortKItem{})),LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(kseq{}(inj{SortString{}, SortKItem{}}(Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(VarBuffer:SortString{},LblFloat2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Float{}(VarF:SortFloat{}))),dotk{}()))))),Var'Unds'Gen2:SortList{})),Var'Unds'Gen9:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("89fef51abf440e0b5fb4f7e5124420710d920e33fd02d4b5f0a2bce24cf6bb6b"), label{}("STDOUT-STREAM.stdoutBufferFloat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2760,8,2766,17)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), priority{}("25"), stream{}("")]

// rule `<generatedTop>`(`<T>`(_Gen3,_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,`<output>`(`_List_`(`_List_`(`_List_`(`_List_`(`ListItem`(inj{Stream,KItem}(`#ostream(_)_K-IO_Stream_Int`(_Gen0))),`ListItem`(_Gen1)),`ListItem`(inj{Stream,KItem}(`#buffer(_)_K-IO_Stream_K`(inj{String,KItem}(Buffer))))),`ListItem`(inj{Int,KItem}(I))),_Gen2)),_Gen9),_DotVar0)=>`<generatedTop>`(`<T>`(_Gen3,_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,`<output>`(`_List_`(`_List_`(`_List_`(`ListItem`(inj{Stream,KItem}(`#ostream(_)_K-IO_Stream_Int`(_Gen0))),`ListItem`(_Gen1)),`ListItem`(inj{Stream,KItem}(`#buffer(_)_K-IO_Stream_K`(inj{String,KItem}(`_+String__STRING-COMMON_String_String_String`(Buffer,`Int2String(_)_STRING-COMMON_String_Int`(I))))))),_Gen2)),_Gen9),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f1b7e635260c20311589d096311bc20689afe150d1fe517d0d5c90f2911983bb), label(STDOUT-STREAM.stdoutBufferInt), org.kframework.attributes.Location(Location(2770,8,2776,17)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), priority(25), stream]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Var'Unds'Gen3:SortThreadsCell{},Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Lbl'-LT-'output'-GT-'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(Var'Unds'Gen0:SortInt{}))),LblListItem{}(Var'Unds'Gen1:SortKItem{})),LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(kseq{}(inj{SortString{}, SortKItem{}}(VarBuffer:SortString{}),dotk{}()))))),LblListItem{}(inj{SortInt{}, SortKItem{}}(VarI:SortInt{}))),Var'Unds'Gen2:SortList{})),Var'Unds'Gen9:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Var'Unds'Gen3:SortThreadsCell{},Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Lbl'-LT-'output'-GT-'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(Var'Unds'Gen0:SortInt{}))),LblListItem{}(Var'Unds'Gen1:SortKItem{})),LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(kseq{}(inj{SortString{}, SortKItem{}}(Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(VarBuffer:SortString{},LblInt2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int{}(VarI:SortInt{}))),dotk{}()))))),Var'Unds'Gen2:SortList{})),Var'Unds'Gen9:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("f1b7e635260c20311589d096311bc20689afe150d1fe517d0d5c90f2911983bb"), label{}("STDOUT-STREAM.stdoutBufferInt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2770,8,2776,17)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), priority{}("25"), stream{}("")]

// rule `<generatedTop>`(`<T>`(_Gen3,_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,`<output>`(`_List_`(`_List_`(`_List_`(`_List_`(`ListItem`(inj{Stream,KItem}(`#ostream(_)_K-IO_Stream_Int`(_Gen0))),`ListItem`(_Gen1)),`ListItem`(inj{Stream,KItem}(`#buffer(_)_K-IO_Stream_K`(inj{String,KItem}(Buffer))))),`ListItem`(inj{String,KItem}(S))),_Gen2)),_Gen9),_DotVar0)=>`<generatedTop>`(`<T>`(_Gen3,_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,`<output>`(`_List_`(`_List_`(`_List_`(`ListItem`(inj{Stream,KItem}(`#ostream(_)_K-IO_Stream_Int`(_Gen0))),`ListItem`(_Gen1)),`ListItem`(inj{Stream,KItem}(`#buffer(_)_K-IO_Stream_K`(inj{String,KItem}(`_+String__STRING-COMMON_String_String_String`(Buffer,S)))))),_Gen2)),_Gen9),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b0fe5129bd201b152b85e90ec5a8723a84094ae3ebdfc28487c9b99c7ea3fed9), label(STDOUT-STREAM.stdoutBufferString), org.kframework.attributes.Location(Location(2780,8,2786,17)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), priority(25), stream]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Var'Unds'Gen3:SortThreadsCell{},Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Lbl'-LT-'output'-GT-'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(Var'Unds'Gen0:SortInt{}))),LblListItem{}(Var'Unds'Gen1:SortKItem{})),LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(kseq{}(inj{SortString{}, SortKItem{}}(VarBuffer:SortString{}),dotk{}()))))),LblListItem{}(inj{SortString{}, SortKItem{}}(VarS:SortString{}))),Var'Unds'Gen2:SortList{})),Var'Unds'Gen9:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Var'Unds'Gen3:SortThreadsCell{},Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Lbl'-LT-'output'-GT-'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(Var'Unds'Gen0:SortInt{}))),LblListItem{}(Var'Unds'Gen1:SortKItem{})),LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(kseq{}(inj{SortString{}, SortKItem{}}(Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(VarBuffer:SortString{},VarS:SortString{})),dotk{}()))))),Var'Unds'Gen2:SortList{})),Var'Unds'Gen9:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("b0fe5129bd201b152b85e90ec5a8723a84094ae3ebdfc28487c9b99c7ea3fed9"), label{}("STDOUT-STREAM.stdoutBufferString"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2780,8,2786,17)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), priority{}("25"), stream{}("")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(`execute_SIMPLE-TYPED-DYNAMIC_KItem`(.KList)),_Gen1,`<env>`(Env),_Gen2)),_DotVar2)),`<genv>`(`.Map`(.KList)),_Gen3,_Gen4,_Gen5,_Gen6,_Gen7,_Gen8),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Stmt,KItem}(`_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp`(`_(_)_SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exps`(inj{Id,Exp}(#token("main","Id")),inj{Vals,Exps}(`.List{"_,__SIMPLE-TYPED-DYNAMIC-SYNTAX_Vals_Val_Vals"}_Vals`(.KList)))))),_Gen1,`<env>`(Env),_Gen2)),_DotVar2)),`<genv>`(Env),_Gen3,_Gen4,_Gen5,_Gen6,_Gen7,_Gen8),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9ab892ee316b171eae69a7da87c42fd92894bf12a4153f1fb9924dd45f250ffc), org.kframework.attributes.Location(Location(160,8,162,34)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(Lblexecute'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}(),dotk{}())),Var'Unds'Gen1:SortControlCell{},Lbl'-LT-'env'-GT-'{}(VarEnv:SortMap{}),Var'Unds'Gen2:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Lbl'-LT-'genv'-GT-'{}(Lbl'Stop'Map{}()),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortInputCell{},Var'Unds'Gen7:SortOutputCell{},Var'Unds'Gen8:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Lbl'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(inj{SortId{}, SortExp{}}(\dv{SortId{}}("main")),inj{SortVals{}, SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}())))),dotk{}())),Var'Unds'Gen1:SortControlCell{},Lbl'-LT-'env'-GT-'{}(VarEnv:SortMap{}),Var'Unds'Gen2:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Lbl'-LT-'genv'-GT-'{}(VarEnv:SortMap{}),Var'Unds'Gen3:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortInputCell{},Var'Unds'Gen7:SortOutputCell{},Var'Unds'Gen8:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("9ab892ee316b171eae69a7da87c42fd92894bf12a4153f1fb9924dd45f250ffc"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(160,8,162,34)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer!__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp0_`(.KList)~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`!__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp`(HOLE))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(5e7b84a504781a7f3d079b065300eb24dc1c03cef3c9dc77c5c4371cc8fafe11), cool, cool-like, label(SIMPLE-TYPED-DYNAMIC-SYNTAX.!__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp1-cool), org.kframework.attributes.Location(Location(38,18,38,50)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("5e7b84a504781a7f3d079b065300eb24dc1c03cef3c9dc77c5c4371cc8fafe11"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX.!__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(38,18,38,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer-__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp0_`(.KList)~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`-__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp`(HOLE))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(33b9ac3813855ef314d5f73d237dec9f71717d575b5b44aa2e8c5ec602347c28), cool, cool-like, label(SIMPLE-TYPED-DYNAMIC-SYNTAX.-__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp1-cool), org.kframework.attributes.Location(Location(21,18,21,50)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("33b9ac3813855ef314d5f73d237dec9f71717d575b5b44aa2e8c5ec602347c28"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX.-__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(21,18,21,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_!=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`_!=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(553d1adf9d3afaffc51e2f76d6031a4c6717103424f466dbbe20f9ea9ac5607a), cool, cool-like, label(SIMPLE-TYPED-DYNAMIC-SYNTAX._!=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1-cool), non-assoc, org.kframework.attributes.Location(Location(37,18,37,61)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("553d1adf9d3afaffc51e2f76d6031a4c6717103424f466dbbe20f9ea9ac5607a"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX._!=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1-cool"), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(37,18,37,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_!=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`_!=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(146aaced19f1e86ed0dc159e5a88728e35ab0f6bd1adade05033631a559a3eb1), cool, cool-like, label(SIMPLE-TYPED-DYNAMIC-SYNTAX._!=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp2-cool), non-assoc, org.kframework.attributes.Location(Location(37,18,37,61)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("146aaced19f1e86ed0dc159e5a88728e35ab0f6bd1adade05033631a559a3eb1"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX._!=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp2-cool"), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(37,18,37,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_%__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`_%__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(6c18b72e882f8c17d849a67e6071395942f6869cde0dbc300cfbf251e44fa182), cool, cool-like, label(SIMPLE-TYPED-DYNAMIC-SYNTAX._%__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1-cool), left, org.kframework.attributes.Location(Location(27,18,27,56)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("6c18b72e882f8c17d849a67e6071395942f6869cde0dbc300cfbf251e44fa182"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX._%__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1-cool"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(27,18,27,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_%__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`_%__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(92a00ef4f2db003124bdd1b1c8d8502735a0282cc5e8f22ef30eeee352b28d3e), cool, cool-like, label(SIMPLE-TYPED-DYNAMIC-SYNTAX._%__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp2-cool), left, org.kframework.attributes.Location(Location(27,18,27,56)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("92a00ef4f2db003124bdd1b1c8d8502735a0282cc5e8f22ef30eeee352b28d3e"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX._%__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp2-cool"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(27,18,27,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_&&__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`_&&__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(5e9460b56d020b2a3003b0fb5655af0a178ea88ac51393e19a252289fa2060f3), cool, cool-like, label(SIMPLE-TYPED-DYNAMIC-SYNTAX._&&__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1-cool), left, org.kframework.attributes.Location(Location(40,18,40,59)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict(1)]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("5e9460b56d020b2a3003b0fb5655af0a178ea88ac51393e19a252289fa2060f3"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX._&&__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1-cool"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(40,18,40,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("1")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_(_)_SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exps0_`(inj{Exps,KItem}(K1))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`_(_)_SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exps`(HOLE,K1))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(f0209f620843f7105c957276a5c3310dfffce524f924524cc45a89a9d2ec3e95), cool, cool-like, label(SIMPLE-TYPED-DYNAMIC-SYNTAX._(_)_SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exps1-cool), org.kframework.attributes.Location(Location(20,18,20,50)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarK1:SortExps{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(VarHOLE:SortExp{},VarK1:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("f0209f620843f7105c957276a5c3310dfffce524f924524cc45a89a9d2ec3e95"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX._(_)_SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exps1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(20,18,20,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exps,KItem}(HOLE)~>`#freezer_(_)_SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exps1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`_(_)_SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exps`(K0,HOLE))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exps,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(902b0f90090647ccb98fb4d6c2c0b625c7a9af15a4cb43c834aa054df6215d61), cool, cool-like, label(SIMPLE-TYPED-DYNAMIC-SYNTAX._(_)_SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exps2-cool), org.kframework.attributes.Location(Location(20,18,20,50)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),kseq{}(Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(VarK0:SortExp{},VarHOLE:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("902b0f90090647ccb98fb4d6c2c0b625c7a9af15a4cb43c834aa054df6215d61"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX._(_)_SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exps2-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(20,18,20,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_*__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`_*__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(f80ab37aced95bcbfb34d6a5488e107beaa55aaf5a51b224ac49ea83c00feb69), cool, cool-like, label(SIMPLE-TYPED-DYNAMIC-SYNTAX._*__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1-cool), left, org.kframework.attributes.Location(Location(25,18,25,56)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("f80ab37aced95bcbfb34d6a5488e107beaa55aaf5a51b224ac49ea83c00feb69"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX._*__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1-cool"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(25,18,25,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_*__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`_*__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(288e5262cc2c6fe779e442a4c9c286ba732d3c5e15f497138fcbc317eb27ec0d), cool, cool-like, label(SIMPLE-TYPED-DYNAMIC-SYNTAX._*__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp2-cool), left, org.kframework.attributes.Location(Location(25,18,25,56)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("288e5262cc2c6fe779e442a4c9c286ba732d3c5e15f497138fcbc317eb27ec0d"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX._*__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp2-cool"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(25,18,25,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_+__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`_+__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(f9793a7e348a115bc2fd3bc1319329f00cc5f538b8188aab79c34374efdb55d5), cool, cool-like, label(SIMPLE-TYPED-DYNAMIC-SYNTAX._+__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1-cool), left, org.kframework.attributes.Location(Location(29,18,29,56)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("f9793a7e348a115bc2fd3bc1319329f00cc5f538b8188aab79c34374efdb55d5"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX._+__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1-cool"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(29,18,29,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_+__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`_+__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(638806530a49315ce881a14db8d5e47d48a3767da970fb57496022f782ab9705), cool, cool-like, label(SIMPLE-TYPED-DYNAMIC-SYNTAX._+__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp2-cool), left, org.kframework.attributes.Location(Location(29,18,29,56)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("638806530a49315ce881a14db8d5e47d48a3767da970fb57496022f782ab9705"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX._+__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp2-cool"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(29,18,29,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_,__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exps_Exp_Exps0_`(inj{Exps,KItem}(K1))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exps,KItem}(`_,__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exps_Exp_Exps`(HOLE,K1))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(e962d9d270d39c76529e4153abaae2ae97ce1b3c8370dd912d1dd27f2781ef4a), cool, cool-like, klabel(exps), label(SIMPLE-TYPED-DYNAMIC-SYNTAX.exps1-cool), org.kframework.attributes.Location(Location(44,19,44,64)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict, userList(*)]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarK1:SortExps{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(Lbl'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(VarHOLE:SortExp{},VarK1:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("e962d9d270d39c76529e4153abaae2ae97ce1b3c8370dd912d1dd27f2781ef4a"), cool{}(), cool-like{}(), klabel{}("exps"), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX.exps1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(44,19,44,64)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}(""), userList{}("*")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exps,KItem}(HOLE)~>`#freezer_,__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exps_Exp_Exps1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exps,KItem}(`_,__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exps_Exp_Exps`(K0,HOLE))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exps,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(c351ac27f4a45aa26f91f59db1360e722786b27d86761a72d50ac6578f6cc67a), cool, cool-like, klabel(exps), label(SIMPLE-TYPED-DYNAMIC-SYNTAX.exps2-cool), org.kframework.attributes.Location(Location(44,19,44,64)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict, userList(*)]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),kseq{}(Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(Lbl'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(VarK0:SortExp{},VarHOLE:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("c351ac27f4a45aa26f91f59db1360e722786b27d86761a72d50ac6578f6cc67a"), cool{}(), cool-like{}(), klabel{}("exps"), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX.exps2-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(44,19,44,64)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}(""), userList{}("*")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_-__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`_-__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(7e88ab2ea4bf957dbe77a87b547f577dbc35148a43777d4eb3f812f04940ee36), cool, cool-like, label(SIMPLE-TYPED-DYNAMIC-SYNTAX._-__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1-cool), left, org.kframework.attributes.Location(Location(30,18,30,56)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("7e88ab2ea4bf957dbe77a87b547f577dbc35148a43777d4eb3f812f04940ee36"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX._-__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1-cool"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(30,18,30,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_-__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`_-__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(392cea6ee59f374fbd560e7e2ab5a6ca12a2b6e62fa7fb801885f8a778bc40c9), cool, cool-like, label(SIMPLE-TYPED-DYNAMIC-SYNTAX._-__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp2-cool), left, org.kframework.attributes.Location(Location(30,18,30,56)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("392cea6ee59f374fbd560e7e2ab5a6ca12a2b6e62fa7fb801885f8a778bc40c9"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX._-__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp2-cool"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(30,18,30,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_/__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`_/__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(def7d8587ee16cfac57d174fcdfa61c8ae0a2e9f784f3f31998f45a350fffd35), cool, cool-like, label(SIMPLE-TYPED-DYNAMIC-SYNTAX._/__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1-cool), left, org.kframework.attributes.Location(Location(26,18,26,56)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("def7d8587ee16cfac57d174fcdfa61c8ae0a2e9f784f3f31998f45a350fffd35"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX._/__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1-cool"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(26,18,26,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_/__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`_/__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(81527fd481a956570c21868066914a95235701ca41f6a03917fc158fef29fdff), cool, cool-like, label(SIMPLE-TYPED-DYNAMIC-SYNTAX._/__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp2-cool), left, org.kframework.attributes.Location(Location(26,18,26,56)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("81527fd481a956570c21868066914a95235701ca41f6a03917fc158fef29fdff"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX._/__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp2-cool"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(26,18,26,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp0_`(.KList)~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Stmt,KItem}(`_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp`(HOLE))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(795004ba7c96bab2f6726b1b4d7339711101ae8be2b9773e41b02c57af029f65), cool, cool-like, label(SIMPLE-TYPED-DYNAMIC-SYNTAX._;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp1-cool), org.kframework.attributes.Location(Location(52,19,52,65)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("795004ba7c96bab2f6726b1b4d7339711101ae8be2b9773e41b02c57af029f65"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX._;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(52,19,52,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_<=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`_<=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(3d4bd0bf457302a453f965d3a34766227cab2fafb142d1346c7fd4af6c4c1f49), cool, cool-like, label(SIMPLE-TYPED-DYNAMIC-SYNTAX._<=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1-cool), non-assoc, org.kframework.attributes.Location(Location(33,18,33,61)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("3d4bd0bf457302a453f965d3a34766227cab2fafb142d1346c7fd4af6c4c1f49"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX._<=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1-cool"), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(33,18,33,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_<=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`_<=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(19268d7f7200d06f78b6aaafe1c900da76bea74e2278b54fa10d3723ae21131e), cool, cool-like, label(SIMPLE-TYPED-DYNAMIC-SYNTAX._<=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp2-cool), non-assoc, org.kframework.attributes.Location(Location(33,18,33,61)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("19268d7f7200d06f78b6aaafe1c900da76bea74e2278b54fa10d3723ae21131e"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX._<=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp2-cool"), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(33,18,33,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_<__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`_<__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(61c27f004d7aa5f74d669c0ac4ee06c2ef4c70dad2256aa47afdc737de699d8a), cool, cool-like, label(SIMPLE-TYPED-DYNAMIC-SYNTAX._<__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1-cool), non-assoc, org.kframework.attributes.Location(Location(32,18,32,61)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("61c27f004d7aa5f74d669c0ac4ee06c2ef4c70dad2256aa47afdc737de699d8a"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX._<__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1-cool"), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(32,18,32,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_<__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`_<__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(4fbcb71a88b6b921c25504bf7684577bc48a12c4880b75a8286938ff9689fd83), cool, cool-like, label(SIMPLE-TYPED-DYNAMIC-SYNTAX._<__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp2-cool), non-assoc, org.kframework.attributes.Location(Location(32,18,32,61)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("4fbcb71a88b6b921c25504bf7684577bc48a12c4880b75a8286938ff9689fd83"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX._<__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp2-cool"), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(32,18,32,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_==__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`_==__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(cf3ac558e6a6d7e4f66b2972999b6c8145717cd3034c26af5dfba437c81ec85a), cool, cool-like, label(SIMPLE-TYPED-DYNAMIC-SYNTAX._==__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1-cool), non-assoc, org.kframework.attributes.Location(Location(36,18,36,61)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("cf3ac558e6a6d7e4f66b2972999b6c8145717cd3034c26af5dfba437c81ec85a"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX._==__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1-cool"), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(36,18,36,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_==__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`_==__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(1c69925a7ee011c7e6d26d2b3045660cf0d2b5bfa56129141eea7759908a9867), cool, cool-like, label(SIMPLE-TYPED-DYNAMIC-SYNTAX._==__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp2-cool), non-assoc, org.kframework.attributes.Location(Location(36,18,36,61)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("1c69925a7ee011c7e6d26d2b3045660cf0d2b5bfa56129141eea7759908a9867"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX._==__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp2-cool"), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(36,18,36,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`_=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(ef7079a9c9e7797dd12dbcb7a686769909c1924bf2564bae21891949173bde80), cool, cool-like, label(SIMPLE-TYPED-DYNAMIC-SYNTAX._=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp2-cool), org.kframework.attributes.Location(Location(43,18,43,60)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), right, strict(2)]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("ef7079a9c9e7797dd12dbcb7a686769909c1924bf2564bae21891949173bde80"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX._=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp2-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(43,18,43,60)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), right{}(), strict{}("2")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_>=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`_>=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(4fd890aaf437717be2d7e7dd4f97158f39127ce0da062d831f14f58f539f777d), cool, cool-like, label(SIMPLE-TYPED-DYNAMIC-SYNTAX._>=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1-cool), non-assoc, org.kframework.attributes.Location(Location(35,18,35,61)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("4fd890aaf437717be2d7e7dd4f97158f39127ce0da062d831f14f58f539f777d"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX._>=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1-cool"), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(35,18,35,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_>=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`_>=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(335c9f404dc199bd6301f632d9d3834e25fd578f96a6c2f0586dcaafc6ff52a3), cool, cool-like, label(SIMPLE-TYPED-DYNAMIC-SYNTAX._>=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp2-cool), non-assoc, org.kframework.attributes.Location(Location(35,18,35,61)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("335c9f404dc199bd6301f632d9d3834e25fd578f96a6c2f0586dcaafc6ff52a3"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX._>=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp2-cool"), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(35,18,35,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_>__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`_>__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(1a29eba9805acf27a83a992b6d3eff53041f36e15b436ab56e9211c1c6ed579c), cool, cool-like, label(SIMPLE-TYPED-DYNAMIC-SYNTAX._>__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1-cool), non-assoc, org.kframework.attributes.Location(Location(34,18,34,61)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("1a29eba9805acf27a83a992b6d3eff53041f36e15b436ab56e9211c1c6ed579c"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX._>__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1-cool"), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(34,18,34,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_>__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`_>__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(f29aae621519c38e2d35cfff7e441c44e8567405ab6acb876a2aeb5afaf38f6b), cool, cool-like, label(SIMPLE-TYPED-DYNAMIC-SYNTAX._>__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp2-cool), non-assoc, org.kframework.attributes.Location(Location(34,18,34,61)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("f29aae621519c38e2d35cfff7e441c44e8567405ab6acb876a2aeb5afaf38f6b"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX._>__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp2-cool"), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(34,18,34,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_[_]_SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exps0_`(inj{Exps,KItem}(K1))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`_[_]_SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exps`(HOLE,K1))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(0757ebd5acf71ca0bb513d0bac78e172bdb0d2fef639b03457445f0377dfebe0), cool, cool-like, label(SIMPLE-TYPED-DYNAMIC-SYNTAX._[_]_SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exps1-cool), org.kframework.attributes.Location(Location(19,18,19,50)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarK1:SortExps{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(VarHOLE:SortExp{},VarK1:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("0757ebd5acf71ca0bb513d0bac78e172bdb0d2fef639b03457445f0377dfebe0"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX._[_]_SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exps1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(19,18,19,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exps,KItem}(HOLE)~>`#freezer_[_]_SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exps1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`_[_]_SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exps`(K0,HOLE))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exps,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(805efc6f0c52c624cde0d3e5dc39abe134df945fb2424b8182e23c1cee2da516), cool, cool-like, label(SIMPLE-TYPED-DYNAMIC-SYNTAX._[_]_SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exps2-cool), org.kframework.attributes.Location(Location(19,18,19,50)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),kseq{}(Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(VarK0:SortExp{},VarHOLE:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("805efc6f0c52c624cde0d3e5dc39abe134df945fb2424b8182e23c1cee2da516"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX._[_]_SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exps2-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(19,18,19,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_||__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`_||__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(509dae1e4a77bc9c269784166bcd4a4e8f94f08b398fbbee29fc32526288b38b), cool, cool-like, label(SIMPLE-TYPED-DYNAMIC-SYNTAX._||__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1-cool), left, org.kframework.attributes.Location(Location(41,18,41,59)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict(1)]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("509dae1e4a77bc9c269784166bcd4a4e8f94f08b398fbbee29fc32526288b38b"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX._||__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1-cool"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(41,18,41,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("1")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezeracquire_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp0_`(.KList)~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Stmt,KItem}(`acquire_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp`(HOLE))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(8d31a0133f8e5ab28ac3f8bbee0c3f81b08d729c7543a00331ef53eb7ae553e8), cool, cool-like, label(SIMPLE-TYPED-DYNAMIC-SYNTAX.acquire_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp1-cool), org.kframework.attributes.Location(Location(63,19,63,65)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblacquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("8d31a0133f8e5ab28ac3f8bbee0c3f81b08d729c7543a00331ef53eb7ae553e8"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX.acquire_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(63,19,63,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerif(_)_else__SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp_Block_Block0_`(inj{Block,KItem}(K1),inj{Block,KItem}(K2))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Stmt,KItem}(`if(_)_else__SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp_Block_Block`(HOLE,K1,K2))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(291f2de03dd8f1c9b39b30599fe2b20c9a1b9c4fe281fd2f2ac6f9645aea92ef), avoid, cool, cool-like, label(SIMPLE-TYPED-DYNAMIC-SYNTAX.if(_)_else__SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp_Block_Block1-cool), org.kframework.attributes.Location(Location(53,19,53,75)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict(1)]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(kseq{}(inj{SortBlock{}, SortKItem{}}(VarK1:SortBlock{}),dotk{}()),kseq{}(inj{SortBlock{}, SortKItem{}}(VarK2:SortBlock{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(VarHOLE:SortExp{},VarK1:SortBlock{},VarK2:SortBlock{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("291f2de03dd8f1c9b39b30599fe2b20c9a1b9c4fe281fd2f2ac6f9645aea92ef"), avoid{}(), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX.if(_)_else__SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp_Block_Block1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(53,19,53,75)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("1")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerjoin_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp0_`(.KList)~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Stmt,KItem}(`join_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp`(HOLE))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(76fd2a9811ba3c7ca9f4c25408428e00fc2df9dbc4ce877718cc0b312d4e375b), cool, cool-like, label(SIMPLE-TYPED-DYNAMIC-SYNTAX.join_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp1-cool), org.kframework.attributes.Location(Location(62,19,62,65)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbljoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("76fd2a9811ba3c7ca9f4c25408428e00fc2df9dbc4ce877718cc0b312d4e375b"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX.join_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(62,19,62,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exps,KItem}(HOLE)~>`#freezerprint(_);_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exps0_`(.KList)~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Stmt,KItem}(`print(_);_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exps`(HOLE))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exps,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(a03c7a8c990bd48f5a4d72ebccfb1ecb60a8e99c2120b2cc4e1330d9718c5984), cool, cool-like, label(SIMPLE-TYPED-DYNAMIC-SYNTAX.print(_);_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exps1-cool), org.kframework.attributes.Location(Location(57,19,57,65)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),kseq{}(Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps{}(VarHOLE:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("a03c7a8c990bd48f5a4d72ebccfb1ecb60a8e99c2120b2cc4e1330d9718c5984"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX.print(_);_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exps1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(57,19,57,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerrelease_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp0_`(.KList)~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Stmt,KItem}(`release_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp`(HOLE))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(f0f6b837e48ce081b7ce8c0432ca119bf3e24862fc00a628a79b2b1e445db4ea), cool, cool-like, label(SIMPLE-TYPED-DYNAMIC-SYNTAX.release_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp1-cool), org.kframework.attributes.Location(Location(64,19,64,65)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("f0f6b837e48ce081b7ce8c0432ca119bf3e24862fc00a628a79b2b1e445db4ea"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX.release_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(64,19,64,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerrendezvous_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp0_`(.KList)~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Stmt,KItem}(`rendezvous_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp`(HOLE))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(13a9b4b9e779dd790afabfd7c170a6d2f0367fe0dcfc4befae96781306b53ee8), cool, cool-like, label(SIMPLE-TYPED-DYNAMIC-SYNTAX.rendezvous_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp1-cool), org.kframework.attributes.Location(Location(65,19,65,65)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("13a9b4b9e779dd790afabfd7c170a6d2f0367fe0dcfc4befae96781306b53ee8"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX.rendezvous_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(65,19,65,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerreturn_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp0_`(.KList)~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Stmt,KItem}(`return_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp`(HOLE))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(ff8daac843985358ac25fe25cfacd9b109433e7c4cc80b2ccaf2007063855594), cool, cool-like, label(SIMPLE-TYPED-DYNAMIC-SYNTAX.return_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp1-cool), org.kframework.attributes.Location(Location(58,19,58,65)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("ff8daac843985358ac25fe25cfacd9b109433e7c4cc80b2ccaf2007063855594"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX.return_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(58,19,58,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezersizeOf(_)_SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp0_`(.KList)~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`sizeOf(_)_SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp`(HOLE))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(480c62f3302e2287fb886b2b0f5661dc59aee5a42d7d5320b4d73570fdecc036), cool, cool-like, label(SIMPLE-TYPED-DYNAMIC-SYNTAX.sizeOf(_)_SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp1-cool), org.kframework.attributes.Location(Location(22,18,22,50)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(LblsizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("480c62f3302e2287fb886b2b0f5661dc59aee5a42d7d5320b4d73570fdecc036"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX.sizeOf(_)_SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(22,18,22,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerthrow_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp0_`(.KList)~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Stmt,KItem}(`throw_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp`(HOLE))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(fc843bf80815137fbeb8686e98b14fc4ccdff1e6fccab0a89c9d49e5b62b8adf), cool, cool-like, label(SIMPLE-TYPED-DYNAMIC-SYNTAX.throw_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp1-cool), org.kframework.attributes.Location(Location(61,15,61,61)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("fc843bf80815137fbeb8686e98b14fc4ccdff1e6fccab0a89c9d49e5b62b8adf"), cool{}(), cool-like{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX.throw_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp1-cool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(61,15,61,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Id,KItem}(X)~>_DotVar5),_Gen1,`<env>`(`_Map_`(`_|->_`(inj{Id,KItem}(X),L),_DotVar6)),_Gen2)),_DotVar3)),_Gen3,`<store>`(`_Map_`(`_|->_`(L,inj{Val,KItem}(V)),_DotVar2)) #as _Gen12,_Gen4,_Gen5,_Gen6,_Gen7,_Gen8),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Val,KItem}(V)~>_DotVar5),_Gen1,`<env>`(`_Map_`(`_|->_`(inj{Id,KItem}(X),L),_DotVar6)),_Gen2)),_DotVar3)),_Gen3,_Gen12,_Gen4,_Gen5,_Gen6,_Gen7,_Gen8),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9d280516846db4a9132ce64f58dde5ead5cb44441018a4005f9f9534fbc13d3c), cool-like, lookup, org.kframework.attributes.Location(Location(164,8,166,42)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarX:SortId{}),Var'Unds'DotVar5:SortK{})),Var'Unds'Gen1:SortControlCell{},Lbl'-LT-'env'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarX:SortId{}),VarL:SortKItem{}),Var'Unds'DotVar6:SortMap{})),Var'Unds'Gen2:SortHoldsCell{})),Var'Unds'DotVar3:SortThreadCellMap{})),Var'Unds'Gen3:SortGenvCell{},\and{SortStoreCell{}}(Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(VarL:SortKItem{},inj{SortVal{}, SortKItem{}}(VarV:SortVal{})),Var'Unds'DotVar2:SortMap{})),Var'Unds'Gen12:SortStoreCell{}),Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortInputCell{},Var'Unds'Gen7:SortOutputCell{},Var'Unds'Gen8:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortVal{}, SortKItem{}}(VarV:SortVal{}),Var'Unds'DotVar5:SortK{})),Var'Unds'Gen1:SortControlCell{},Lbl'-LT-'env'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarX:SortId{}),VarL:SortKItem{}),Var'Unds'DotVar6:SortMap{})),Var'Unds'Gen2:SortHoldsCell{})),Var'Unds'DotVar3:SortThreadCellMap{})),Var'Unds'Gen3:SortGenvCell{},Var'Unds'Gen12:SortStoreCell{},Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortInputCell{},Var'Unds'Gen7:SortOutputCell{},Var'Unds'Gen8:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("9d280516846db4a9132ce64f58dde5ead5cb44441018a4005f9f9534fbc13d3c"), cool-like{}(), group{}("lookup"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(164,8,166,42)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`!__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp`(HOLE))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer!__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp0_`(.KList)~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(62b0bd5c2d03ce29a8a9b832bf00b0fb2774535d48a611fe585ba4f76f82bbba), heat, label(SIMPLE-TYPED-DYNAMIC-SYNTAX.!__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp1-heat), org.kframework.attributes.Location(Location(38,18,38,50)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("62b0bd5c2d03ce29a8a9b832bf00b0fb2774535d48a611fe585ba4f76f82bbba"), heat{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX.!__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(38,18,38,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`!__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp`(inj{Bool,Exp}(T)))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Bool,KItem}(`notBool_`(T))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ad1b7ab3f6a045575d35ba8007585d03d7302fa050f25161de93a915639b2e9b), org.kframework.attributes.Location(Location(185,8,185,25)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'BangUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(inj{SortBool{}, SortExp{}}(VarT:SortBool{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBool{}, SortKItem{}}(LblnotBool'Unds'{}(VarT:SortBool{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("ad1b7ab3f6a045575d35ba8007585d03d7302fa050f25161de93a915639b2e9b"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(185,8,185,25)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`++__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp`(HOLE))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`lvalue(_)_SIMPLE-TYPED-DYNAMIC_Exp_K`(inj{Exp,KItem}(HOLE)))~>`#freezer++__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp0_`(.KList)~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(c942a50d9fa5d8d04f06c9230286dce5fb1ae81d3760348f8b91b33c066417d6), heat, org.kframework.attributes.Location(Location(168,11,168,35)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbllvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),kseq{}(Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("c942a50d9fa5d8d04f06c9230286dce5fb1ae81d3760348f8b91b33c066417d6"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,11,168,35)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`++__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp`(inj{Val,Exp}(`loc(_)_SIMPLE-TYPED-DYNAMIC_Val_Int`(L))))~>_DotVar5),_Gen1,_Gen2,_Gen3)),_DotVar3)),_Gen4,`<store>`(`_Map_`(`_|->_`(inj{Int,KItem}(L),inj{Int,KItem}(I)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Int,KItem}(`_+Int_`(I,#token("1","Int")))~>_DotVar5),_Gen1,_Gen2,_Gen3)),_DotVar3)),_Gen4,`<store>`(`_Map_`(`_|->_`(inj{Int,KItem}(L),inj{Int,KItem}(`_+Int_`(I,#token("1","Int")))),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e53bf792da0cc0b564637454c3ef2d8aec4b5f4feca642abc00700e033fb9448), increment, org.kframework.attributes.Location(Location(169,8,170,56)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(inj{SortVal{}, SortExp{}}(Lblloc'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Val'Unds'Int{}(VarL:SortInt{})))),Var'Unds'DotVar5:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar3:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(VarL:SortInt{}),inj{SortInt{}, SortKItem{}}(VarI:SortInt{})),Var'Unds'DotVar2:SortMap{})),Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInt{}, SortKItem{}}(Lbl'UndsPlus'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("1"))),Var'Unds'DotVar5:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar3:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(VarL:SortInt{}),inj{SortInt{}, SortKItem{}}(Lbl'UndsPlus'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("1")))),Var'Unds'DotVar2:SortMap{})),Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("e53bf792da0cc0b564637454c3ef2d8aec4b5f4feca642abc00700e033fb9448"), group{}("increment"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(169,8,170,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`-__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp`(HOLE))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer-__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp0_`(.KList)~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(905832aec2a8eb207b60f00e3920bc92013370dbb7a256af53d977e261534a5b), heat, label(SIMPLE-TYPED-DYNAMIC-SYNTAX.-__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp1-heat), org.kframework.attributes.Location(Location(21,18,21,50)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("905832aec2a8eb207b60f00e3920bc92013370dbb7a256af53d977e261534a5b"), heat{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX.-__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(21,18,21,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`-__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp`(inj{Int,Exp}(I)))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Int,KItem}(`_-Int_`(#token("0","Int"),I))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(22c59cfd5be6e0bab820b96a4e3b1568cd3563e94b1fd622860d02749d12bf6e), org.kframework.attributes.Location(Location(178,8,178,23)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(inj{SortInt{}, SortExp{}}(VarI:SortInt{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInt{}, SortKItem{}}(Lbl'Unds'-Int'Unds'{}(\dv{SortInt{}}("0"),VarI:SortInt{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("22c59cfd5be6e0bab820b96a4e3b1568cd3563e94b1fd622860d02749d12bf6e"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(178,8,178,23)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`_!=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_!=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(291691fe3a495db783c8734a75332da8ac3dfc4c516811ba6458e4c7667687a4), heat, label(SIMPLE-TYPED-DYNAMIC-SYNTAX._!=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1-heat), non-assoc, org.kframework.attributes.Location(Location(37,18,37,61)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("291691fe3a495db783c8734a75332da8ac3dfc4c516811ba6458e4c7667687a4"), heat{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX._!=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1-heat"), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(37,18,37,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`_!=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_!=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(632d97ee13dec8b436061547b08dea40e895584f82824860e92065187c8693bb), heat, label(SIMPLE-TYPED-DYNAMIC-SYNTAX._!=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp2-heat), non-assoc, org.kframework.attributes.Location(Location(37,18,37,61)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("632d97ee13dec8b436061547b08dea40e895584f82824860e92065187c8693bb"), heat{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX._!=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp2-heat"), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(37,18,37,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`_!=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(inj{Val,Exp}(V1),inj{Val,Exp}(V2)))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Bool,KItem}(`_=/=K_`(inj{Val,KItem}(V1),inj{Val,KItem}(V2)))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c587ad65fd95673755c3d6df5e9e55c4c70ed965dfb21f7fda464141be64411c), org.kframework.attributes.Location(Location(184,8,184,38)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsBangEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortVal{}, SortExp{}}(VarV1:SortVal{}),inj{SortVal{}, SortExp{}}(VarV2:SortVal{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBool{}, SortKItem{}}(Lbl'UndsEqlsSlshEqls'K'Unds'{}(kseq{}(inj{SortVal{}, SortKItem{}}(VarV1:SortVal{}),dotk{}()),kseq{}(inj{SortVal{}, SortKItem{}}(VarV2:SortVal{}),dotk{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("c587ad65fd95673755c3d6df5e9e55c4c70ed965dfb21f7fda464141be64411c"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(184,8,184,38)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`_%__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_%__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(992d60fa78e96d81401383f7e0630a024a8b8ad0a7733c54bdee0ca5d1bd246c), heat, label(SIMPLE-TYPED-DYNAMIC-SYNTAX._%__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1-heat), left, org.kframework.attributes.Location(Location(27,18,27,56)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("992d60fa78e96d81401383f7e0630a024a8b8ad0a7733c54bdee0ca5d1bd246c"), heat{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX._%__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1-heat"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(27,18,27,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`_%__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_%__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(2c9b8b8452036fcd97423e1ac7ec76be35b30a4e2efb7e94b051ec92e65f2c34), heat, label(SIMPLE-TYPED-DYNAMIC-SYNTAX._%__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp2-heat), left, org.kframework.attributes.Location(Location(27,18,27,56)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("2c9b8b8452036fcd97423e1ac7ec76be35b30a4e2efb7e94b051ec92e65f2c34"), heat{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX._%__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp2-heat"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(27,18,27,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`_%__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(inj{Int,Exp}(I1),inj{Int,Exp}(I2)))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Int,KItem}(`_%Int_`(I1,I2))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_=/=K_`(inj{Int,KItem}(I2),inj{Int,KItem}(#token("0","Int"))) ensures #token("true","Bool") [UNIQUE_ID(62524cb0e331e1b72678574947838f75953a6e46fce54f13fda1385e3e7cf243), org.kframework.attributes.Location(Location(177,8,177,44)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "when" Bool [klabel(#ruleRequires), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPercUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortInt{}, SortExp{}}(VarI1:SortInt{}),inj{SortInt{}, SortExp{}}(VarI2:SortInt{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'UndsEqlsSlshEqls'K'Unds'{}(kseq{}(inj{SortInt{}, SortKItem{}}(VarI2:SortInt{}),dotk{}()),kseq{}(inj{SortInt{}, SortKItem{}}(\dv{SortInt{}}("0")),dotk{}())),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInt{}, SortKItem{}}(Lbl'UndsPerc'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("62524cb0e331e1b72678574947838f75953a6e46fce54f13fda1385e3e7cf243"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(177,8,177,44)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"when\" Bool [klabel(#ruleRequires), symbol]")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`_&&__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_&&__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(e230485227c61f893c15f401cacce5662ae3fee9de879d3ddd990233ccaa3fae), heat, label(SIMPLE-TYPED-DYNAMIC-SYNTAX._&&__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1-heat), left, org.kframework.attributes.Location(Location(40,18,40,59)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict(1)]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("e230485227c61f893c15f401cacce5662ae3fee9de879d3ddd990233ccaa3fae"), heat{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX._&&__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1-heat"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(40,18,40,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("1")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`_&&__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(inj{Bool,Exp}(#token("true","Bool")),E))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(E)~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3c76d22f49d5b47fbf25315e5ec7065ce662904d434cf43f64f89bbbbdd3f34e), org.kframework.attributes.Location(Location(186,8,186,23)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortBool{}, SortExp{}}(\dv{SortBool{}}("true")),VarE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarE:SortExp{}),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("3c76d22f49d5b47fbf25315e5ec7065ce662904d434cf43f64f89bbbbdd3f34e"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(186,8,186,23)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`_(_)_SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exps`(HOLE,K1))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_(_)_SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exps0_`(inj{Exps,KItem}(K1))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(42071044d8f6db165a0fe31fb3a0e4a8e0bf47a667d2ea9a77586b378215cda6), heat, label(SIMPLE-TYPED-DYNAMIC-SYNTAX._(_)_SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exps1-heat), org.kframework.attributes.Location(Location(20,18,20,50)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(VarHOLE:SortExp{},VarK1:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarK1:SortExps{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("42071044d8f6db165a0fe31fb3a0e4a8e0bf47a667d2ea9a77586b378215cda6"), heat{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX._(_)_SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exps1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(20,18,20,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`_(_)_SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exps`(K0,HOLE))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exps,KItem}(HOLE)~>`#freezer_(_)_SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exps1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exps,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(327dcf76f5f87f914509af0087d66e79ce9ac64dc609c267ef69da209cc1c557), heat, label(SIMPLE-TYPED-DYNAMIC-SYNTAX._(_)_SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exps2-heat), org.kframework.attributes.Location(Location(20,18,20,50)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(VarK0:SortExp{},VarHOLE:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),kseq{}(Lbl'Hash'freezer'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("327dcf76f5f87f914509af0087d66e79ce9ac64dc609c267ef69da209cc1c557"), heat{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX._(_)_SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exps2-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(20,18,20,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`_(_)_SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exps`(inj{Val,Exp}(`lambda(_,_,_)_SIMPLE-TYPED-DYNAMIC_Val_Type_Params_Stmt`(T,Ps,S)),inj{Vals,Exps}(Vs)))~>K),`<control>`(`<fstack>`(`_List_`(`.List`(.KList),_DotVar4)),C,`<returnType>`(T')),`<env>`(Env),_Gen1)),_DotVar2)),`<genv>`(GEnv) #as _Gen11,_Gen2,_Gen3,_Gen4,_Gen5,_Gen6,_Gen7),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Stmt,KItem}(`___SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Stmt_Stmt`(`mkDecls(_,_)_SIMPLE-TYPED-DYNAMIC_Stmt_Params_Vals`(Ps,Vs),`___SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Stmt_Stmt`(S,`return;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt`(.KList))))),`<control>`(`<fstack>`(`_List_`(`ListItem`(`(_,_,_,_)_SIMPLE-TYPED-DYNAMIC_KItem_Type_Map_K_ControlCellFragment`(T',Env,K,`<control>-fragment`(noFstackCell(.KList),inj{XstackCell,XstackCellOpt}(C),noReturnTypeCell(.KList)))),_DotVar4)),C,`<returnType>`(T)),`<env>`(GEnv),_Gen1)),_DotVar2)),_Gen11,_Gen2,_Gen3,_Gen4,_Gen5,_Gen6,_Gen7),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(29b7a46ba87f6031ba8d1860df1d50b04ced86bea2a4ced17ef06459ba9a6a3e), org.kframework.attributes.Location(Location(203,8,210,27)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(inj{SortVal{}, SortExp{}}(Lbllambda'LParUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Val'Unds'Type'Unds'Params'Unds'Stmt{}(VarT:SortType{},VarPs:SortParams{},VarS:SortStmt{})),inj{SortVals{}, SortExps{}}(VarVs:SortVals{}))),VarK:SortK{})),Lbl'-LT-'control'-GT-'{}(Lbl'-LT-'fstack'-GT-'{}(Lbl'Unds'List'Unds'{}(Lbl'Stop'List{}(),Var'Unds'DotVar4:SortList{})),VarC:SortXstackCell{},Lbl'-LT-'returnType'-GT-'{}(VarT'Apos':SortType{})),Lbl'-LT-'env'-GT-'{}(VarEnv:SortMap{}),Var'Unds'Gen1:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),\and{SortGenvCell{}}(Lbl'-LT-'genv'-GT-'{}(VarGEnv:SortMap{}),Var'Unds'Gen11:SortGenvCell{}),Var'Unds'Gen2:SortStoreCell{},Var'Unds'Gen3:SortBusyCell{},Var'Unds'Gen4:SortTerminatedCell{},Var'Unds'Gen5:SortInputCell{},Var'Unds'Gen6:SortOutputCell{},Var'Unds'Gen7:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(LblmkDecls'LParUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Stmt'Unds'Params'Unds'Vals{}(VarPs:SortParams{},VarVs:SortVals{}),Lbl'UndsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(VarS:SortStmt{},Lblreturn'SClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt{}()))),dotk{}())),Lbl'-LT-'control'-GT-'{}(Lbl'-LT-'fstack'-GT-'{}(Lbl'Unds'List'Unds'{}(LblListItem{}(Lbl'LParUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type'Unds'Map'Unds'K'Unds'ControlCellFragment{}(VarT'Apos':SortType{},VarEnv:SortMap{},VarK:SortK{},Lbl'-LT-'control'-GT-'-fragment{}(LblnoFstackCell{}(),inj{SortXstackCell{}, SortXstackCellOpt{}}(VarC:SortXstackCell{}),LblnoReturnTypeCell{}()))),Var'Unds'DotVar4:SortList{})),VarC:SortXstackCell{},Lbl'-LT-'returnType'-GT-'{}(VarT:SortType{})),Lbl'-LT-'env'-GT-'{}(VarGEnv:SortMap{}),Var'Unds'Gen1:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen11:SortGenvCell{},Var'Unds'Gen2:SortStoreCell{},Var'Unds'Gen3:SortBusyCell{},Var'Unds'Gen4:SortTerminatedCell{},Var'Unds'Gen5:SortInputCell{},Var'Unds'Gen6:SortOutputCell{},Var'Unds'Gen7:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("29b7a46ba87f6031ba8d1860df1d50b04ced86bea2a4ced17ef06459ba9a6a3e"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(203,8,210,27)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`_*__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_*__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(1766249b581e367676b3ffcd271cffdddb85dd31a583f7258f84389211365182), heat, label(SIMPLE-TYPED-DYNAMIC-SYNTAX._*__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1-heat), left, org.kframework.attributes.Location(Location(25,18,25,56)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("1766249b581e367676b3ffcd271cffdddb85dd31a583f7258f84389211365182"), heat{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX._*__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1-heat"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(25,18,25,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`_*__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_*__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(cfc677c6e4157fae058a9bc779241f93c8c8ff5b367a4f8afdd6c01e77670515), heat, label(SIMPLE-TYPED-DYNAMIC-SYNTAX._*__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp2-heat), left, org.kframework.attributes.Location(Location(25,18,25,56)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("cfc677c6e4157fae058a9bc779241f93c8c8ff5b367a4f8afdd6c01e77670515"), heat{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX._*__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp2-heat"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(25,18,25,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`_*__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(inj{Int,Exp}(I1),inj{Int,Exp}(I2)))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Int,KItem}(`_*Int_`(I1,I2))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(bfefc30f1148166a430ae313c03d556d04da6fe392c9e16115d545d16d0d8671), org.kframework.attributes.Location(Location(175,8,175,29)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsStarUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortInt{}, SortExp{}}(VarI1:SortInt{}),inj{SortInt{}, SortExp{}}(VarI2:SortInt{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInt{}, SortKItem{}}(Lbl'UndsStar'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("bfefc30f1148166a430ae313c03d556d04da6fe392c9e16115d545d16d0d8671"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(175,8,175,29)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`_+__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_+__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(48b234788e614f1e8c58f16dc50ecbb39e243c1b80bf79da1203458617ea788c), heat, label(SIMPLE-TYPED-DYNAMIC-SYNTAX._+__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1-heat), left, org.kframework.attributes.Location(Location(29,18,29,56)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("48b234788e614f1e8c58f16dc50ecbb39e243c1b80bf79da1203458617ea788c"), heat{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX._+__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1-heat"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(29,18,29,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`_+__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_+__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(720a8b369488750bd18b2c71cfc5f0875f2120b24914ff865ebe1a284c0b8685), heat, label(SIMPLE-TYPED-DYNAMIC-SYNTAX._+__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp2-heat), left, org.kframework.attributes.Location(Location(29,18,29,56)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("720a8b369488750bd18b2c71cfc5f0875f2120b24914ff865ebe1a284c0b8685"), heat{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX._+__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp2-heat"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(29,18,29,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`_+__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(inj{Int,Exp}(I1),inj{Int,Exp}(I2)))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Int,KItem}(`_+Int_`(I1,I2))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3c7cbe4b916c90fde098faed292864477bc3cc778eacd4a883f1b605afe59f4d), org.kframework.attributes.Location(Location(172,8,172,29)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortInt{}, SortExp{}}(VarI1:SortInt{}),inj{SortInt{}, SortExp{}}(VarI2:SortInt{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInt{}, SortKItem{}}(Lbl'UndsPlus'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("3c7cbe4b916c90fde098faed292864477bc3cc778eacd4a883f1b605afe59f4d"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(172,8,172,29)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`_+__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(inj{String,Exp}(Str1),inj{String,Exp}(Str2)))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{String,KItem}(`_+String__STRING-COMMON_String_String_String`(Str1,Str2))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(acee78d10462212cb13d9864630e309e03eff2dae70486cd1bef35c3c8dfc205), org.kframework.attributes.Location(Location(173,8,173,40)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortString{}, SortExp{}}(VarStr1:SortString{}),inj{SortString{}, SortExp{}}(VarStr2:SortString{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortString{}, SortKItem{}}(Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(VarStr1:SortString{},VarStr2:SortString{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("acee78d10462212cb13d9864630e309e03eff2dae70486cd1bef35c3c8dfc205"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(173,8,173,40)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exps,KItem}(`_,__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exps_Exp_Exps`(HOLE,K1))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_,__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exps_Exp_Exps0_`(inj{Exps,KItem}(K1))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(5f209dbecb13eb5a392ebdba9a87b1fec0e17d978ac1fd6517895d5df1a6675d), heat, klabel(exps), label(SIMPLE-TYPED-DYNAMIC-SYNTAX.exps1-heat), org.kframework.attributes.Location(Location(44,19,44,64)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict, userList(*)]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(Lbl'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(VarHOLE:SortExp{},VarK1:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarK1:SortExps{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("5f209dbecb13eb5a392ebdba9a87b1fec0e17d978ac1fd6517895d5df1a6675d"), heat{}(), klabel{}("exps"), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX.exps1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(44,19,44,64)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}(""), userList{}("*")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exps,KItem}(`_,__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exps_Exp_Exps`(K0,HOLE))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exps,KItem}(HOLE)~>`#freezer_,__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exps_Exp_Exps1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exps,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(c11c2552bd64c5cc453f46ea2399278021b941bfa62d725cd5b57248020e0c9b), heat, klabel(exps), label(SIMPLE-TYPED-DYNAMIC-SYNTAX.exps2-heat), org.kframework.attributes.Location(Location(44,19,44,64)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict, userList(*)]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(Lbl'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(VarK0:SortExp{},VarHOLE:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),kseq{}(Lbl'Hash'freezer'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("c11c2552bd64c5cc453f46ea2399278021b941bfa62d725cd5b57248020e0c9b"), heat{}(), klabel{}("exps"), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX.exps2-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(44,19,44,64)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}(""), userList{}("*")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`_-__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_-__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(fe6dd96e8bfde026d56509aa5dd0d4d46cebabd73b6d830804c59fcb77a692ab), heat, label(SIMPLE-TYPED-DYNAMIC-SYNTAX._-__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1-heat), left, org.kframework.attributes.Location(Location(30,18,30,56)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("fe6dd96e8bfde026d56509aa5dd0d4d46cebabd73b6d830804c59fcb77a692ab"), heat{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX._-__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1-heat"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(30,18,30,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`_-__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_-__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(898191f35ef1dd215bccc5b2fb7dc30e7072008b1795b1d24179b5dd923ca61f), heat, label(SIMPLE-TYPED-DYNAMIC-SYNTAX._-__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp2-heat), left, org.kframework.attributes.Location(Location(30,18,30,56)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("898191f35ef1dd215bccc5b2fb7dc30e7072008b1795b1d24179b5dd923ca61f"), heat{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX._-__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp2-heat"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(30,18,30,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`_-__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(inj{Int,Exp}(I1),inj{Int,Exp}(I2)))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Int,KItem}(`_-Int_`(I1,I2))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c6df2522502c654f1abd4ce284cc02e541a8670c5275097340bdb58fb35e2944), org.kframework.attributes.Location(Location(174,8,174,29)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortInt{}, SortExp{}}(VarI1:SortInt{}),inj{SortInt{}, SortExp{}}(VarI2:SortInt{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInt{}, SortKItem{}}(Lbl'Unds'-Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("c6df2522502c654f1abd4ce284cc02e541a8670c5275097340bdb58fb35e2944"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(174,8,174,29)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`_/__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_/__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(9f8b6f9ebd4ba48371853b362e4f842bd474c75515bc3d1d2e5166464e07e9e8), heat, label(SIMPLE-TYPED-DYNAMIC-SYNTAX._/__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1-heat), left, org.kframework.attributes.Location(Location(26,18,26,56)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("9f8b6f9ebd4ba48371853b362e4f842bd474c75515bc3d1d2e5166464e07e9e8"), heat{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX._/__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1-heat"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(26,18,26,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`_/__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_/__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(c682bbc250d6fba350999e653f4e022b1abb21536e0828fd10388eaf68837db6), heat, label(SIMPLE-TYPED-DYNAMIC-SYNTAX._/__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp2-heat), left, org.kframework.attributes.Location(Location(26,18,26,56)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("c682bbc250d6fba350999e653f4e022b1abb21536e0828fd10388eaf68837db6"), heat{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX._/__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp2-heat"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(26,18,26,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`_/__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(inj{Int,Exp}(I1),inj{Int,Exp}(I2)))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Int,KItem}(`_/Int_`(I1,I2))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_=/=K_`(inj{Int,KItem}(I2),inj{Int,KItem}(#token("0","Int"))) ensures #token("true","Bool") [UNIQUE_ID(632b9dfd549a23ee88917b7399115c543d3141dfd47d407793ae599da7c6c559), org.kframework.attributes.Location(Location(176,8,176,44)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "when" Bool [klabel(#ruleRequires), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsSlshUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortInt{}, SortExp{}}(VarI1:SortInt{}),inj{SortInt{}, SortExp{}}(VarI2:SortInt{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'UndsEqlsSlshEqls'K'Unds'{}(kseq{}(inj{SortInt{}, SortKItem{}}(VarI2:SortInt{}),dotk{}()),kseq{}(inj{SortInt{}, SortKItem{}}(\dv{SortInt{}}("0")),dotk{}())),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInt{}, SortKItem{}}(Lbl'UndsSlsh'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("632b9dfd549a23ee88917b7399115c543d3141dfd47d407793ae599da7c6c559"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(176,8,176,44)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"when\" Bool [klabel(#ruleRequires), symbol]")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Stmt,KItem}(`_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp`(HOLE))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp0_`(.KList)~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(a9daee25c18fde71207201bf865486258f5ebc05736358ae92a8549cb51075d4), heat, label(SIMPLE-TYPED-DYNAMIC-SYNTAX._;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp1-heat), org.kframework.attributes.Location(Location(52,19,52,65)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("a9daee25c18fde71207201bf865486258f5ebc05736358ae92a8549cb51075d4"), heat{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX._;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(52,19,52,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`_<=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_<=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(da7e68eea6b35c0daf836633f2f2f2550dd1f373794bba04dc76d91f377c158f), heat, label(SIMPLE-TYPED-DYNAMIC-SYNTAX._<=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1-heat), non-assoc, org.kframework.attributes.Location(Location(33,18,33,61)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("da7e68eea6b35c0daf836633f2f2f2550dd1f373794bba04dc76d91f377c158f"), heat{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX._<=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1-heat"), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(33,18,33,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`_<=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_<=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(a1f959e7d29f83255957ebcd9b263c30969b6ada206cf886303703251ea98fbc), heat, label(SIMPLE-TYPED-DYNAMIC-SYNTAX._<=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp2-heat), non-assoc, org.kframework.attributes.Location(Location(33,18,33,61)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("a1f959e7d29f83255957ebcd9b263c30969b6ada206cf886303703251ea98fbc"), heat{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX._<=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp2-heat"), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(33,18,33,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`_<=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(inj{Int,Exp}(I1),inj{Int,Exp}(I2)))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Bool,KItem}(`_<=Int_`(I1,I2))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a798348f0088009b789dcd76bfda2d8dea29906a9113a39a7d39a541c40b61da), org.kframework.attributes.Location(Location(180,8,180,31)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortInt{}, SortExp{}}(VarI1:SortInt{}),inj{SortInt{}, SortExp{}}(VarI2:SortInt{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBool{}, SortKItem{}}(Lbl'Unds-LT-Eqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("a798348f0088009b789dcd76bfda2d8dea29906a9113a39a7d39a541c40b61da"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(180,8,180,31)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`_<__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_<__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(943471e550763fbe3f1ec2ba6723422b90d75add681cf5eb35fb2dad39f2c63e), heat, label(SIMPLE-TYPED-DYNAMIC-SYNTAX._<__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1-heat), non-assoc, org.kframework.attributes.Location(Location(32,18,32,61)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("943471e550763fbe3f1ec2ba6723422b90d75add681cf5eb35fb2dad39f2c63e"), heat{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX._<__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1-heat"), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(32,18,32,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`_<__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_<__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(3575868b1c882752c7123a8a38e2445efdacc968be742cfbf0fcdaf8c75fb215), heat, label(SIMPLE-TYPED-DYNAMIC-SYNTAX._<__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp2-heat), non-assoc, org.kframework.attributes.Location(Location(32,18,32,61)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("3575868b1c882752c7123a8a38e2445efdacc968be742cfbf0fcdaf8c75fb215"), heat{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX._<__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp2-heat"), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(32,18,32,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`_<__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(inj{Int,Exp}(I1),inj{Int,Exp}(I2)))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Bool,KItem}(`_<Int_`(I1,I2))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7c0bbc9bb47c6d7628c9f53e70f9387bfbf11f9eec94248f57ce8867aab8dbcf), org.kframework.attributes.Location(Location(179,8,179,29)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-LT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortInt{}, SortExp{}}(VarI1:SortInt{}),inj{SortInt{}, SortExp{}}(VarI2:SortInt{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBool{}, SortKItem{}}(Lbl'Unds-LT-'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("7c0bbc9bb47c6d7628c9f53e70f9387bfbf11f9eec94248f57ce8867aab8dbcf"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(179,8,179,29)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`_==__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_==__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(d9213bc26f0921fd77b55ef6a2229d2d34ea6cf8938ffe0e5b30d010589fb4e5), heat, label(SIMPLE-TYPED-DYNAMIC-SYNTAX._==__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1-heat), non-assoc, org.kframework.attributes.Location(Location(36,18,36,61)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("d9213bc26f0921fd77b55ef6a2229d2d34ea6cf8938ffe0e5b30d010589fb4e5"), heat{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX._==__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1-heat"), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(36,18,36,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`_==__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_==__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(258ffc64c9109a4bc38d2754c3817e5bc5b3f704c4e741e490bbf665920a4beb), heat, label(SIMPLE-TYPED-DYNAMIC-SYNTAX._==__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp2-heat), non-assoc, org.kframework.attributes.Location(Location(36,18,36,61)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("258ffc64c9109a4bc38d2754c3817e5bc5b3f704c4e741e490bbf665920a4beb"), heat{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX._==__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp2-heat"), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(36,18,36,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`_==__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(inj{Val,Exp}(V1),inj{Val,Exp}(V2)))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Bool,KItem}(`_==K_`(inj{Val,KItem}(V1),inj{Val,KItem}(V2)))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(aeba6021d57b4355866ab3fb6a1a3fb41d4b84cf2c30ac27ab0d8d266938e348), org.kframework.attributes.Location(Location(183,8,183,37)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsEqlsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortVal{}, SortExp{}}(VarV1:SortVal{}),inj{SortVal{}, SortExp{}}(VarV2:SortVal{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBool{}, SortKItem{}}(Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortVal{}, SortKItem{}}(VarV1:SortVal{}),dotk{}()),kseq{}(inj{SortVal{}, SortKItem{}}(VarV2:SortVal{}),dotk{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("aeba6021d57b4355866ab3fb6a1a3fb41d4b84cf2c30ac27ab0d8d266938e348"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(183,8,183,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`_=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(8fbbff0f25671e7ca7ea7408f917b9fbc03d1295b35d67b1968ffdd063059a60), heat, label(SIMPLE-TYPED-DYNAMIC-SYNTAX._=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp2-heat), org.kframework.attributes.Location(Location(43,18,43,60)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), right, strict(2)]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("8fbbff0f25671e7ca7ea7408f917b9fbc03d1295b35d67b1968ffdd063059a60"), heat{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX._=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp2-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(43,18,43,60)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), right{}(), strict{}("2")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`_=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(inj{Val,Exp}(`loc(_)_SIMPLE-TYPED-DYNAMIC_Val_Int`(L)),inj{Val,Exp}(V)))~>_DotVar5),_Gen1,_Gen2,_Gen3)),_DotVar3)),_Gen4,`<store>`(`_Map_`(`_|->_`(inj{Int,KItem}(L),V'),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Val,KItem}(V)~>_DotVar5),_Gen1,_Gen2,_Gen3)),_DotVar3)),_Gen4,`<store>`(`_Map_`(`_|->_`(inj{Int,KItem}(L),inj{Val,KItem}(V)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9),_DotVar0) requires `_==K_`(inj{Type,KItem}(`typeOf(_)_SIMPLE-TYPED-DYNAMIC_Type_K`(inj{Val,KItem}(V))),inj{Type,KItem}(`typeOf(_)_SIMPLE-TYPED-DYNAMIC_Type_K`(V'))) ensures #token("true","Bool") [UNIQUE_ID(1551dfb3b7a8b827dade9d9a4158389fa802ae322edf392253450145860099b3), assignment, org.kframework.attributes.Location(Location(228,8,229,34)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "when" Bool [klabel(#ruleRequires), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortVal{}, SortExp{}}(Lblloc'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Val'Unds'Int{}(VarL:SortInt{})),inj{SortVal{}, SortExp{}}(VarV:SortVal{}))),Var'Unds'DotVar5:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar3:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(VarL:SortInt{}),VarV'Apos':SortKItem{}),Var'Unds'DotVar2:SortMap{})),Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortType{}, SortKItem{}}(LbltypeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Type'Unds'K{}(kseq{}(inj{SortVal{}, SortKItem{}}(VarV:SortVal{}),dotk{}()))),dotk{}()),kseq{}(inj{SortType{}, SortKItem{}}(LbltypeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Type'Unds'K{}(kseq{}(VarV'Apos':SortKItem{},dotk{}()))),dotk{}())),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortVal{}, SortKItem{}}(VarV:SortVal{}),Var'Unds'DotVar5:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar3:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(VarL:SortInt{}),inj{SortVal{}, SortKItem{}}(VarV:SortVal{})),Var'Unds'DotVar2:SortMap{})),Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("1551dfb3b7a8b827dade9d9a4158389fa802ae322edf392253450145860099b3"), group{}("assignment"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(228,8,229,34)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"when\" Bool [klabel(#ruleRequires), symbol]")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`_>=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_>=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(378b65f8227ac76748a0fa9da809f42cadbd5b088d2f47946e504669c7b8ed5c), heat, label(SIMPLE-TYPED-DYNAMIC-SYNTAX._>=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1-heat), non-assoc, org.kframework.attributes.Location(Location(35,18,35,61)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("378b65f8227ac76748a0fa9da809f42cadbd5b088d2f47946e504669c7b8ed5c"), heat{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX._>=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1-heat"), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(35,18,35,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`_>=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_>=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(be78fbcba85b7111b89f622fdcd490a704e6ac3e33e8a480ede030d625ca9d80), heat, label(SIMPLE-TYPED-DYNAMIC-SYNTAX._>=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp2-heat), non-assoc, org.kframework.attributes.Location(Location(35,18,35,61)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("be78fbcba85b7111b89f622fdcd490a704e6ac3e33e8a480ede030d625ca9d80"), heat{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX._>=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp2-heat"), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(35,18,35,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`_>=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(inj{Int,Exp}(I1),inj{Int,Exp}(I2)))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Bool,KItem}(`_>=Int_`(I1,I2))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(06480c2837905af1a6922ebee92ad45be46fe3fd66a91fc7ffa0401fa48ba7a6), org.kframework.attributes.Location(Location(182,8,182,31)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-GT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortInt{}, SortExp{}}(VarI1:SortInt{}),inj{SortInt{}, SortExp{}}(VarI2:SortInt{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBool{}, SortKItem{}}(Lbl'Unds-GT-Eqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("06480c2837905af1a6922ebee92ad45be46fe3fd66a91fc7ffa0401fa48ba7a6"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(182,8,182,31)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`_>__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_>__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(62744c7bd66277cdcec784ed80d7cfa1e694b09506de48463f64f54213876640), heat, label(SIMPLE-TYPED-DYNAMIC-SYNTAX._>__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1-heat), non-assoc, org.kframework.attributes.Location(Location(34,18,34,61)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("62744c7bd66277cdcec784ed80d7cfa1e694b09506de48463f64f54213876640"), heat{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX._>__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1-heat"), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(34,18,34,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`_>__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_>__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(e17fd74faf2befb5d34526cbb026b602cd0ccda579dde4f2f9ffeab905f56b52), heat, label(SIMPLE-TYPED-DYNAMIC-SYNTAX._>__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp2-heat), non-assoc, org.kframework.attributes.Location(Location(34,18,34,61)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("e17fd74faf2befb5d34526cbb026b602cd0ccda579dde4f2f9ffeab905f56b52"), heat{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX._>__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp2-heat"), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(34,18,34,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`_>__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(inj{Int,Exp}(I1),inj{Int,Exp}(I2)))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Bool,KItem}(`_>Int_`(I1,I2))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(40422f2b1daa398e56a890fed388fc74900e7cacb887b88114a0d7c1bd406098), org.kframework.attributes.Location(Location(181,8,181,29)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortInt{}, SortExp{}}(VarI1:SortInt{}),inj{SortInt{}, SortExp{}}(VarI2:SortInt{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBool{}, SortKItem{}}(Lbl'Unds-GT-'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("40422f2b1daa398e56a890fed388fc74900e7cacb887b88114a0d7c1bd406098"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(181,8,181,29)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`_[_]_SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exps`(HOLE,K1))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_[_]_SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exps0_`(inj{Exps,KItem}(K1))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(9234d0097ed02ea4833462d7e68fe788a1a3521491cc95f4db478a6137ff1d7d), heat, label(SIMPLE-TYPED-DYNAMIC-SYNTAX._[_]_SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exps1-heat), org.kframework.attributes.Location(Location(19,18,19,50)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(VarHOLE:SortExp{},VarK1:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarK1:SortExps{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("9234d0097ed02ea4833462d7e68fe788a1a3521491cc95f4db478a6137ff1d7d"), heat{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX._[_]_SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exps1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(19,18,19,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`_[_]_SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exps`(K0,HOLE))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exps,KItem}(HOLE)~>`#freezer_[_]_SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exps1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exps,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(866739ebda666d4986735491ada94092ae6fa3662d3aef0825feb1d44e9a1f1c), heat, label(SIMPLE-TYPED-DYNAMIC-SYNTAX._[_]_SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exps2-heat), org.kframework.attributes.Location(Location(19,18,19,50)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(VarK0:SortExp{},VarHOLE:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),kseq{}(Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("866739ebda666d4986735491ada94092ae6fa3662d3aef0825feb1d44e9a1f1c"), heat{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX._[_]_SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exps2-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(19,18,19,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Stmt,KItem}(`__(_)__SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Type_Id_Params_Block`(T,F,Ps,S))~>_DotVar5),_Gen1,`<env>`(Env),_Gen2)),_DotVar3)),_Gen3,`<store>`(_DotVar2),_Gen4,_Gen5,_Gen6,_Gen7,`<nextLoc>`(L)),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(_DotVar5),_Gen1,`<env>`(`Map:update`(Env,inj{Id,KItem}(F),inj{Int,KItem}(L))),_Gen2)),_DotVar3)),_Gen3,`<store>`(`_Map_`(`_|->_`(inj{Int,KItem}(L),inj{Val,KItem}(`lambda(_,_,_)_SIMPLE-TYPED-DYNAMIC_Val_Type_Params_Stmt`(T,Ps,inj{Block,Stmt}(S)))),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,`<nextLoc>`(`_+Int_`(L,#token("1","Int")))),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0a2ff894f7d899e0bda8637dfab312632e15e4a6373b64d2a745b1d4e1523daa), org.kframework.attributes.Location(Location(153,10,156,42)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsUndsLParUndsRParUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Id'Unds'Params'Unds'Block{}(VarT:SortType{},VarF:SortId{},VarPs:SortParams{},VarS:SortBlock{})),Var'Unds'DotVar5:SortK{})),Var'Unds'Gen1:SortControlCell{},Lbl'-LT-'env'-GT-'{}(VarEnv:SortMap{}),Var'Unds'Gen2:SortHoldsCell{})),Var'Unds'DotVar3:SortThreadCellMap{})),Var'Unds'Gen3:SortGenvCell{},Lbl'-LT-'store'-GT-'{}(Var'Unds'DotVar2:SortMap{}),Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortInputCell{},Var'Unds'Gen7:SortOutputCell{},Lbl'-LT-'nextLoc'-GT-'{}(VarL:SortInt{})),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(Var'Unds'DotVar5:SortK{}),Var'Unds'Gen1:SortControlCell{},Lbl'-LT-'env'-GT-'{}(LblMap'Coln'update{}(VarEnv:SortMap{},inj{SortId{}, SortKItem{}}(VarF:SortId{}),inj{SortInt{}, SortKItem{}}(VarL:SortInt{}))),Var'Unds'Gen2:SortHoldsCell{})),Var'Unds'DotVar3:SortThreadCellMap{})),Var'Unds'Gen3:SortGenvCell{},Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(VarL:SortInt{}),inj{SortVal{}, SortKItem{}}(Lbllambda'LParUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Val'Unds'Type'Unds'Params'Unds'Stmt{}(VarT:SortType{},VarPs:SortParams{},inj{SortBlock{}, SortStmt{}}(VarS:SortBlock{})))),Var'Unds'DotVar2:SortMap{})),Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortInputCell{},Var'Unds'Gen7:SortOutputCell{},Lbl'-LT-'nextLoc'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarL:SortInt{},\dv{SortInt{}}("1")))),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("0a2ff894f7d899e0bda8637dfab312632e15e4a6373b64d2a745b1d4e1523daa"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(153,10,156,42)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Stmt,KItem}(`__;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Type_Exps`(T,`_,__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exps_Exp_Exps`(`_[_]_SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exps`(inj{Id,Exp}(X),inj{Vals,Exps}(`_,__SIMPLE-TYPED-DYNAMIC-SYNTAX_Vals_Val_Vals`(inj{Int,Val}(N),`.List{"_,__SIMPLE-TYPED-DYNAMIC-SYNTAX_Vals_Val_Vals"}_Vals`(.KList)))),inj{Vals,Exps}(`.List{"_,__SIMPLE-TYPED-DYNAMIC-SYNTAX_Vals_Val_Vals"}_Vals`(.KList)))))~>_DotVar5),_Gen1,`<env>`(Env),_Gen2)),_DotVar3)),_Gen3,`<store>`(_DotVar2),_Gen4,_Gen5,_Gen6,_Gen7,`<nextLoc>`(L)),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(_DotVar5),_Gen1,`<env>`(`Map:update`(Env,inj{Id,KItem}(X),inj{Int,KItem}(L))),_Gen2)),_DotVar3)),_Gen3,`<store>`(`_Map_`(`_Map_`(`_|->_`(inj{Int,KItem}(L),inj{Val,KItem}(`array(_,_,_)_SIMPLE-TYPED-DYNAMIC_Val_Type_Int_Int`(T,`_+Int_`(L,#token("1","Int")),N))),`_..._|->__SIMPLE-TYPED-DYNAMIC_Map_Int_Int_K`(`_+Int_`(L,#token("1","Int")),`_+Int_`(L,N),`undefined(_)_SIMPLE-TYPED-DYNAMIC_KItem_Type`(T))),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,`<nextLoc>`(`_+Int_`(`_+Int_`(L,#token("1","Int")),N))),_DotVar0) requires `_>=Int_`(N,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(976d64ed4632badd71d445561fe9721a295a1abe11ebbeb76b94ddfbaa7f6598), org.kframework.attributes.Location(Location(131,8,136,19)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "when" Bool [klabel(#ruleRequires), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps{}(VarT:SortType{},Lbl'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(Lbl'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(inj{SortId{}, SortExp{}}(VarX:SortId{}),inj{SortVals{}, SortExps{}}(Lbl'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals{}(inj{SortInt{}, SortVal{}}(VarN:SortInt{}),Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}()))),inj{SortVals{}, SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}())))),Var'Unds'DotVar5:SortK{})),Var'Unds'Gen1:SortControlCell{},Lbl'-LT-'env'-GT-'{}(VarEnv:SortMap{}),Var'Unds'Gen2:SortHoldsCell{})),Var'Unds'DotVar3:SortThreadCellMap{})),Var'Unds'Gen3:SortGenvCell{},Lbl'-LT-'store'-GT-'{}(Var'Unds'DotVar2:SortMap{}),Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortInputCell{},Var'Unds'Gen7:SortOutputCell{},Lbl'-LT-'nextLoc'-GT-'{}(VarL:SortInt{})),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds-GT-Eqls'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(Var'Unds'DotVar5:SortK{}),Var'Unds'Gen1:SortControlCell{},Lbl'-LT-'env'-GT-'{}(LblMap'Coln'update{}(VarEnv:SortMap{},inj{SortId{}, SortKItem{}}(VarX:SortId{}),inj{SortInt{}, SortKItem{}}(VarL:SortInt{}))),Var'Unds'Gen2:SortHoldsCell{})),Var'Unds'DotVar3:SortThreadCellMap{})),Var'Unds'Gen3:SortGenvCell{},Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(VarL:SortInt{}),inj{SortVal{}, SortKItem{}}(Lblarray'LParUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Val'Unds'Type'Unds'Int'Unds'Int{}(VarT:SortType{},Lbl'UndsPlus'Int'Unds'{}(VarL:SortInt{},\dv{SortInt{}}("1")),VarN:SortInt{}))),Lbl'UndsStopStopStopUndsPipe'-'-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC'Unds'Map'Unds'Int'Unds'Int'Unds'K{}(Lbl'UndsPlus'Int'Unds'{}(VarL:SortInt{},\dv{SortInt{}}("1")),Lbl'UndsPlus'Int'Unds'{}(VarL:SortInt{},VarN:SortInt{}),kseq{}(Lblundefined'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type{}(VarT:SortType{}),dotk{}()))),Var'Unds'DotVar2:SortMap{})),Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortInputCell{},Var'Unds'Gen7:SortOutputCell{},Lbl'-LT-'nextLoc'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(VarL:SortInt{},\dv{SortInt{}}("1")),VarN:SortInt{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("976d64ed4632badd71d445561fe9721a295a1abe11ebbeb76b94ddfbaa7f6598"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(131,8,136,19)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"when\" Bool [klabel(#ruleRequires), symbol]")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Stmt,KItem}(`__;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Type_Exps`(T,`_,__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exps_Exp_Exps`(`_[_]_SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exps`(inj{Id,Exp}(X),inj{Vals,Exps}(`_,__SIMPLE-TYPED-DYNAMIC-SYNTAX_Vals_Val_Vals`(inj{Int,Val}(N1),`_,__SIMPLE-TYPED-DYNAMIC-SYNTAX_Vals_Val_Vals`(inj{Int,Val}(N2),Vs)))),inj{Vals,Exps}(`.List{"_,__SIMPLE-TYPED-DYNAMIC-SYNTAX_Vals_Val_Vals"}_Vals`(.KList)))))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Stmt,KItem}(`___SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Stmt_Stmt`(`__;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Type_Exps`(`_<_>_SIMPLE-TYPED-DYNAMIC_Type_Type_Vals`(`_[]_SIMPLE-TYPED-DYNAMIC-SYNTAX_Type_Type`(T),Vs),`_,__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exps_Exp_Exps`(`_[_]_SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exps`(inj{Id,Exp}(X),inj{Vals,Exps}(`_,__SIMPLE-TYPED-DYNAMIC-SYNTAX_Vals_Val_Vals`(inj{Int,Val}(N1),`.List{"_,__SIMPLE-TYPED-DYNAMIC-SYNTAX_Vals_Val_Vals"}_Vals`(.KList)))),inj{Vals,Exps}(`.List{"_,__SIMPLE-TYPED-DYNAMIC-SYNTAX_Vals_Val_Vals"}_Vals`(.KList)))),inj{Block,Stmt}(`{_}_SIMPLE-TYPED-DYNAMIC-SYNTAX_Block_Stmt`(`___SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Stmt_Stmt`(`__;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Type_Exps`(`_<_>_SIMPLE-TYPED-DYNAMIC_Type_Type_Vals`(`_[]_SIMPLE-TYPED-DYNAMIC-SYNTAX_Type_Type`(`_[]_SIMPLE-TYPED-DYNAMIC-SYNTAX_Type_Type`(T)),Vs),`_,__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exps_Exp_Exps`(`_=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(inj{Id,Exp}(#token("$1","Id")),inj{Id,Exp}(X)),inj{Vals,Exps}(`.List{"_,__SIMPLE-TYPED-DYNAMIC-SYNTAX_Vals_Val_Vals"}_Vals`(.KList)))),inj{Block,Stmt}(`{_}_SIMPLE-TYPED-DYNAMIC-SYNTAX_Block_Stmt`(`___SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Stmt_Stmt`(`__;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Type_Exps`(`int_SIMPLE-TYPED-DYNAMIC-SYNTAX_Type`(.KList),`_,__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exps_Exp_Exps`(`_=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(inj{Id,Exp}(#token("$2","Id")),inj{Int,Exp}(#token("0","Int"))),inj{Vals,Exps}(`.List{"_,__SIMPLE-TYPED-DYNAMIC-SYNTAX_Vals_Val_Vals"}_Vals`(.KList)))),`while(_)__SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp_Block`(`_<=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(inj{Id,Exp}(#token("$2","Id")),`_-__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(inj{Int,Exp}(N1),inj{Int,Exp}(#token("1","Int")))),`{_}_SIMPLE-TYPED-DYNAMIC-SYNTAX_Block_Stmt`(`___SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Stmt_Stmt`(`___SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Stmt_Stmt`(`__;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Type_Exps`(T,`_,__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exps_Exp_Exps`(`_[_]_SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exps`(inj{Id,Exp}(X),inj{Vals,Exps}(`_,__SIMPLE-TYPED-DYNAMIC-SYNTAX_Vals_Val_Vals`(inj{Int,Val}(N2),Vs))),inj{Vals,Exps}(`.List{"_,__SIMPLE-TYPED-DYNAMIC-SYNTAX_Vals_Val_Vals"}_Vals`(.KList)))),`_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp`(`_=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(`_[_]_SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exps`(inj{Id,Exp}(#token("$1","Id")),`_,__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exps_Exp_Exps`(inj{Id,Exp}(#token("$2","Id")),inj{Vals,Exps}(`.List{"_,__SIMPLE-TYPED-DYNAMIC-SYNTAX_Vals_Val_Vals"}_Vals`(.KList)))),inj{Id,Exp}(X)))),`_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp`(`++__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp`(inj{Id,Exp}(#token("$2","Id")))))))))))))))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1951eeecc315c34ccf74b761a52dd99d4e0979c841a69e4a542d00516c629f70), org.kframework.attributes.Location(Location(143,8,151,9)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps{}(VarT:SortType{},Lbl'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(Lbl'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(inj{SortId{}, SortExp{}}(VarX:SortId{}),inj{SortVals{}, SortExps{}}(Lbl'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals{}(inj{SortInt{}, SortVal{}}(VarN1:SortInt{}),Lbl'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals{}(inj{SortInt{}, SortVal{}}(VarN2:SortInt{}),VarVs:SortVals{})))),inj{SortVals{}, SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}())))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(Lbl'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps{}(Lbl'Unds-LT-Unds-GT-Unds'SIMPLE-TYPED-DYNAMIC'Unds'Type'Unds'Type'Unds'Vals{}(Lbl'UndsLSqBRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Type'Unds'Type{}(VarT:SortType{}),VarVs:SortVals{}),Lbl'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(Lbl'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(inj{SortId{}, SortExp{}}(VarX:SortId{}),inj{SortVals{}, SortExps{}}(Lbl'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals{}(inj{SortInt{}, SortVal{}}(VarN1:SortInt{}),Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}()))),inj{SortVals{}, SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}()))),inj{SortBlock{}, SortStmt{}}(Lbl'LBraUndsRBraUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Block'Unds'Stmt{}(Lbl'UndsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(Lbl'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps{}(Lbl'Unds-LT-Unds-GT-Unds'SIMPLE-TYPED-DYNAMIC'Unds'Type'Unds'Type'Unds'Vals{}(Lbl'UndsLSqBRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Type'Unds'Type{}(Lbl'UndsLSqBRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Type'Unds'Type{}(VarT:SortType{})),VarVs:SortVals{}),Lbl'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortId{}, SortExp{}}(\dv{SortId{}}("$1")),inj{SortId{}, SortExp{}}(VarX:SortId{})),inj{SortVals{}, SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}()))),inj{SortBlock{}, SortStmt{}}(Lbl'LBraUndsRBraUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Block'Unds'Stmt{}(Lbl'UndsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(Lbl'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps{}(Lblint'Unds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Type{}(),Lbl'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortId{}, SortExp{}}(\dv{SortId{}}("$2")),inj{SortInt{}, SortExp{}}(\dv{SortInt{}}("0"))),inj{SortVals{}, SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}()))),Lblwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Lbl'Unds-LT-EqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortId{}, SortExp{}}(\dv{SortId{}}("$2")),Lbl'Unds'-'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortInt{}, SortExp{}}(VarN1:SortInt{}),inj{SortInt{}, SortExp{}}(\dv{SortInt{}}("1")))),Lbl'LBraUndsRBraUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Block'Unds'Stmt{}(Lbl'UndsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(Lbl'UndsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(Lbl'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps{}(VarT:SortType{},Lbl'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(Lbl'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(inj{SortId{}, SortExp{}}(VarX:SortId{}),inj{SortVals{}, SortExps{}}(Lbl'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals{}(inj{SortInt{}, SortVal{}}(VarN2:SortInt{}),VarVs:SortVals{}))),inj{SortVals{}, SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}()))),Lbl'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Lbl'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(inj{SortId{}, SortExp{}}(\dv{SortId{}}("$1")),Lbl'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(inj{SortId{}, SortExp{}}(\dv{SortId{}}("$2")),inj{SortVals{}, SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}()))),inj{SortId{}, SortExp{}}(VarX:SortId{})))),Lbl'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Lbl'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(inj{SortId{}, SortExp{}}(\dv{SortId{}}("$2"))))))))))))))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("1951eeecc315c34ccf74b761a52dd99d4e0979c841a69e4a542d00516c629f70"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(143,8,151,9)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Stmt,KItem}(`__;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Type_Exps`(T,`_,__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exps_Exp_Exps`(inj{Id,Exp}(X),inj{Vals,Exps}(`.List{"_,__SIMPLE-TYPED-DYNAMIC-SYNTAX_Vals_Val_Vals"}_Vals`(.KList)))))~>_DotVar5),_Gen1,`<env>`(Env),_Gen2)),_DotVar3)),_Gen3,`<store>`(_DotVar2),_Gen4,_Gen5,_Gen6,_Gen7,`<nextLoc>`(L)),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(_DotVar5),_Gen1,`<env>`(`Map:update`(Env,inj{Id,KItem}(X),inj{Int,KItem}(L))),_Gen2)),_DotVar3)),_Gen3,`<store>`(`_Map_`(`_|->_`(inj{Int,KItem}(L),`undefined(_)_SIMPLE-TYPED-DYNAMIC_KItem_Type`(T)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,`<nextLoc>`(`_+Int_`(L,#token("1","Int")))),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(481dc9eb131225fbe445883e11cdf34c01d8eb7211857002ab4645e7c0c6e851), org.kframework.attributes.Location(Location(127,8,130,46)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps{}(VarT:SortType{},Lbl'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(inj{SortId{}, SortExp{}}(VarX:SortId{}),inj{SortVals{}, SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}())))),Var'Unds'DotVar5:SortK{})),Var'Unds'Gen1:SortControlCell{},Lbl'-LT-'env'-GT-'{}(VarEnv:SortMap{}),Var'Unds'Gen2:SortHoldsCell{})),Var'Unds'DotVar3:SortThreadCellMap{})),Var'Unds'Gen3:SortGenvCell{},Lbl'-LT-'store'-GT-'{}(Var'Unds'DotVar2:SortMap{}),Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortInputCell{},Var'Unds'Gen7:SortOutputCell{},Lbl'-LT-'nextLoc'-GT-'{}(VarL:SortInt{})),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(Var'Unds'DotVar5:SortK{}),Var'Unds'Gen1:SortControlCell{},Lbl'-LT-'env'-GT-'{}(LblMap'Coln'update{}(VarEnv:SortMap{},inj{SortId{}, SortKItem{}}(VarX:SortId{}),inj{SortInt{}, SortKItem{}}(VarL:SortInt{}))),Var'Unds'Gen2:SortHoldsCell{})),Var'Unds'DotVar3:SortThreadCellMap{})),Var'Unds'Gen3:SortGenvCell{},Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(VarL:SortInt{}),Lblundefined'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type{}(VarT:SortType{})),Var'Unds'DotVar2:SortMap{})),Var'Unds'Gen4:SortBusyCell{},Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortInputCell{},Var'Unds'Gen7:SortOutputCell{},Lbl'-LT-'nextLoc'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarL:SortInt{},\dv{SortInt{}}("1")))),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("481dc9eb131225fbe445883e11cdf34c01d8eb7211857002ab4645e7c0c6e851"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(127,8,130,46)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Stmt,KItem}(`___SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Stmt_Stmt`(S1,S2))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Stmt,KItem}(S1)~>inj{Stmt,KItem}(S2)~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e4de4af5d6c324a74ba138fd9a2a075341f451c5958fdf33031bbe4e6757890d), org.kframework.attributes.Location(Location(234,8,234,35)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(VarS1:SortStmt{},VarS2:SortStmt{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(VarS1:SortStmt{}),kseq{}(inj{SortStmt{}, SortKItem{}}(VarS2:SortStmt{}),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("e4de4af5d6c324a74ba138fd9a2a075341f451c5958fdf33031bbe4e6757890d"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(234,8,234,35)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`_||__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_||__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(87f299f3ea81f340cced9e73ebf4d96361258216f58a0f7e906bbece3864101c), heat, label(SIMPLE-TYPED-DYNAMIC-SYNTAX._||__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1-heat), left, org.kframework.attributes.Location(Location(41,18,41,59)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict(1)]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("87f299f3ea81f340cced9e73ebf4d96361258216f58a0f7e906bbece3864101c"), heat{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX._||__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp1-heat"), left{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(41,18,41,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("1")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`_||__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(inj{Bool,Exp}(#token("false","Bool")),E))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(E)~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(951d2667c93b7e6fd51568f8e4bede621a4b27cc8f13ca3f0c06e38825d560f8), org.kframework.attributes.Location(Location(189,8,189,23)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortBool{}, SortExp{}}(\dv{SortBool{}}("false")),VarE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarE:SortExp{}),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("951d2667c93b7e6fd51568f8e4bede621a4b27cc8f13ca3f0c06e38825d560f8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(189,8,189,23)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Stmt,KItem}(`acquire_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp`(HOLE))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezeracquire_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp0_`(.KList)~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(decdb1f5cc616bac18e04e6d29d91afc9eaecd30d484effecce2790380d78508), heat, label(SIMPLE-TYPED-DYNAMIC-SYNTAX.acquire_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp1-heat), org.kframework.attributes.Location(Location(63,19,63,65)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblacquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezeracquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("decdb1f5cc616bac18e04e6d29d91afc9eaecd30d484effecce2790380d78508"), heat{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX.acquire_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(63,19,63,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Stmt,KItem}(`acquire_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp`(inj{Val,Exp}(V)))~>_DotVar4),_Gen1,_Gen2,`<holds>`(`_Map_`(`.Map`(.KList),_DotVar5)))),_DotVar2)),_Gen3,_Gen4,`<busy>`(Busy),_Gen5,_Gen6,_Gen7,_Gen8),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(_DotVar4),_Gen1,_Gen2,`<holds>`(`_Map_`(`_|->_`(inj{Val,KItem}(V),inj{Int,KItem}(#token("0","Int"))),_DotVar5)))),_DotVar2)),_Gen3,_Gen4,`<busy>`(`_Set_`(Busy,`SetItem`(inj{Val,KItem}(V)))),_Gen5,_Gen6,_Gen7,_Gen8),_DotVar0) requires `notBool_`(`Set:in`(inj{Val,KItem}(V),Busy)) ensures #token("true","Bool") [UNIQUE_ID(27f86a5c66b91ec6b0ff8b151798859a3001d8e43d1fa2fbac837d4c38743e21), acquire, org.kframework.attributes.Location(Location(294,9,297,35)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "when" Bool [klabel(#ruleRequires), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblacquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(inj{SortVal{}, SortExp{}}(VarV:SortVal{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Lbl'-LT-'holds'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'Stop'Map{}(),Var'Unds'DotVar5:SortMap{})))),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen3:SortGenvCell{},Var'Unds'Gen4:SortStoreCell{},Lbl'-LT-'busy'-GT-'{}(VarBusy:SortSet{}),Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortInputCell{},Var'Unds'Gen7:SortOutputCell{},Var'Unds'Gen8:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        LblnotBool'Unds'{}(LblSet'Coln'in{}(inj{SortVal{}, SortKItem{}}(VarV:SortVal{}),VarBusy:SortSet{})),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(Var'Unds'DotVar4:SortK{}),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Lbl'-LT-'holds'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortVal{}, SortKItem{}}(VarV:SortVal{}),inj{SortInt{}, SortKItem{}}(\dv{SortInt{}}("0"))),Var'Unds'DotVar5:SortMap{})))),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen3:SortGenvCell{},Var'Unds'Gen4:SortStoreCell{},Lbl'-LT-'busy'-GT-'{}(Lbl'Unds'Set'Unds'{}(VarBusy:SortSet{},LblSetItem{}(inj{SortVal{}, SortKItem{}}(VarV:SortVal{})))),Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortInputCell{},Var'Unds'Gen7:SortOutputCell{},Var'Unds'Gen8:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("27f86a5c66b91ec6b0ff8b151798859a3001d8e43d1fa2fbac837d4c38743e21"), group{}("acquire"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(294,9,297,35)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"when\" Bool [klabel(#ruleRequires), symbol]")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Stmt,KItem}(`acquire_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp`(inj{Val,Exp}(V)))~>_DotVar4),_Gen1,_Gen2,`<holds>`(`_Map_`(`_|->_`(inj{Val,KItem}(V),inj{Int,KItem}(N)),_DotVar5)))),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(_DotVar4),_Gen1,_Gen2,`<holds>`(`_Map_`(`_|->_`(inj{Val,KItem}(V),inj{Int,KItem}(`_+Int_`(N,#token("1","Int")))),_DotVar5)))),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0f3aa387d932ffaa793a511c7e132394eff54592c05bde78fe2c14def7ededc6), org.kframework.attributes.Location(Location(299,9,300,61)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblacquire'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(inj{SortVal{}, SortExp{}}(VarV:SortVal{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Lbl'-LT-'holds'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortVal{}, SortKItem{}}(VarV:SortVal{}),inj{SortInt{}, SortKItem{}}(VarN:SortInt{})),Var'Unds'DotVar5:SortMap{})))),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen3:SortGenvCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(Var'Unds'DotVar4:SortK{}),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Lbl'-LT-'holds'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortVal{}, SortKItem{}}(VarV:SortVal{}),inj{SortInt{}, SortKItem{}}(Lbl'UndsPlus'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("1")))),Var'Unds'DotVar5:SortMap{})))),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen3:SortGenvCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("0f3aa387d932ffaa793a511c7e132394eff54592c05bde78fe2c14def7ededc6"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(299,9,300,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Stmt,KItem}(`if(_)_else__SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp_Block_Block`(HOLE,K1,K2))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerif(_)_else__SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp_Block_Block0_`(inj{Block,KItem}(K1),inj{Block,KItem}(K2))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(6e4349eeeb50e0ad61606bebec5b1394a21799674fc08e33c532cbfaeb99d3ad), avoid, heat, label(SIMPLE-TYPED-DYNAMIC-SYNTAX.if(_)_else__SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp_Block_Block1-heat), org.kframework.attributes.Location(Location(53,19,53,75)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict(1)]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(VarHOLE:SortExp{},VarK1:SortBlock{},VarK2:SortBlock{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(kseq{}(inj{SortBlock{}, SortKItem{}}(VarK1:SortBlock{}),dotk{}()),kseq{}(inj{SortBlock{}, SortKItem{}}(VarK2:SortBlock{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("6e4349eeeb50e0ad61606bebec5b1394a21799674fc08e33c532cbfaeb99d3ad"), avoid{}(), heat{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX.if(_)_else__SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp_Block_Block1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(53,19,53,75)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("1")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Stmt,KItem}(`join_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp`(HOLE))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerjoin_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp0_`(.KList)~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(f2c3c0c734b80e59ad8377b7f8942c4a86ce1e973dd87eeaf9b7edeccd3289bd), heat, label(SIMPLE-TYPED-DYNAMIC-SYNTAX.join_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp1-heat), org.kframework.attributes.Location(Location(62,19,62,65)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbljoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerjoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("f2c3c0c734b80e59ad8377b7f8942c4a86ce1e973dd87eeaf9b7edeccd3289bd"), heat{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX.join_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(62,19,62,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Stmt,KItem}(`join_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp`(inj{Int,Exp}(T)))~>_DotVar5),_Gen1,_Gen2,_Gen3)),_DotVar3)),_Gen4,_Gen5,_Gen6,`<terminated>`(`_Set_`(`SetItem`(inj{Int,KItem}(T)),_DotVar2)) #as _Gen13,_Gen7,_Gen8,_Gen9),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(_DotVar5),_Gen1,_Gen2,_Gen3)),_DotVar3)),_Gen4,_Gen5,_Gen6,_Gen13,_Gen7,_Gen8,_Gen9),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6f00dbfb08d3e9712efc0ba1f7e71c977795e39c4371b6180faf5dc47e9ded73), org.kframework.attributes.Location(Location(291,9,292,52)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbljoin'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(inj{SortInt{}, SortExp{}}(VarT:SortInt{}))),Var'Unds'DotVar5:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar3:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},\and{SortTerminatedCell{}}(Lbl'-LT-'terminated'-GT-'{}(Lbl'Unds'Set'Unds'{}(LblSetItem{}(inj{SortInt{}, SortKItem{}}(VarT:SortInt{})),Var'Unds'DotVar2:SortSet{})),Var'Unds'Gen13:SortTerminatedCell{}),Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(Var'Unds'DotVar5:SortK{}),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar3:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen13:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("6f00dbfb08d3e9712efc0ba1f7e71c977795e39c4371b6180faf5dc47e9ded73"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(291,9,292,52)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`lookup(_)_SIMPLE-TYPED-DYNAMIC_Exp_Int`(L))~>_DotVar5),_Gen1,_Gen2,_Gen3)),_DotVar3)),_Gen4,`<store>`(`_Map_`(`_|->_`(inj{Int,KItem}(L),inj{Val,KItem}(V)),_DotVar2)) #as _Gen13,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Val,KItem}(V)~>_DotVar5),_Gen1,_Gen2,_Gen3)),_DotVar3)),_Gen4,_Gen13,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c7c53abe7ec490a52c03bde8684b0165a9f9aa9f26e916bbd319d3795b2ee7b8), lookup, org.kframework.attributes.Location(Location(318,8,318,69)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbllookup'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'Int{}(VarL:SortInt{})),Var'Unds'DotVar5:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar3:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},\and{SortStoreCell{}}(Lbl'-LT-'store'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(VarL:SortInt{}),inj{SortVal{}, SortKItem{}}(VarV:SortVal{})),Var'Unds'DotVar2:SortMap{})),Var'Unds'Gen13:SortStoreCell{}),Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortVal{}, SortKItem{}}(VarV:SortVal{}),Var'Unds'DotVar5:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar3:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen13:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("c7c53abe7ec490a52c03bde8684b0165a9f9aa9f26e916bbd319d3795b2ee7b8"), group{}("lookup"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(318,8,318,69)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`lvalue(_)_SIMPLE-TYPED-DYNAMIC_Exp_K`(inj{Exp,KItem}(HOLE)))~>`#freezer++__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp0_`(.KList)~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`++__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp`(HOLE))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(cf37eb7345d32b795512b566397e7be05e97475634fabbba3c499b332acb2fe5), cool, org.kframework.attributes.Location(Location(168,11,168,35)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbllvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),kseq{}(Lbl'Hash'freezer'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'PlusPlusUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("cf37eb7345d32b795512b566397e7be05e97475634fabbba3c499b332acb2fe5"), cool{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,11,168,35)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`lvalue(_)_SIMPLE-TYPED-DYNAMIC_Exp_K`(inj{Id,KItem}(X)))~>_DotVar4),_Gen1,`<env>`(`_Map_`(`_|->_`(inj{Id,KItem}(X),inj{Int,KItem}(L)),_DotVar5)),_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`lvalue(_)_SIMPLE-TYPED-DYNAMIC_Exp_K`(inj{Val,KItem}(`loc(_)_SIMPLE-TYPED-DYNAMIC_Val_Int`(L))))~>_DotVar4),_Gen1,`<env>`(`_Map_`(`_|->_`(inj{Id,KItem}(X),inj{Int,KItem}(L)),_DotVar5)),_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(daade30226bde03012b2934e87c297da84cbe17230f0c617318f43077464e8b2), org.kframework.attributes.Location(Location(329,8,329,74)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbllvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K{}(kseq{}(inj{SortId{}, SortKItem{}}(VarX:SortId{}),dotk{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Lbl'-LT-'env'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarX:SortId{}),inj{SortInt{}, SortKItem{}}(VarL:SortInt{})),Var'Unds'DotVar5:SortMap{})),Var'Unds'Gen2:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen3:SortGenvCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbllvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K{}(kseq{}(inj{SortVal{}, SortKItem{}}(Lblloc'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Val'Unds'Int{}(VarL:SortInt{})),dotk{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Lbl'-LT-'env'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarX:SortId{}),inj{SortInt{}, SortKItem{}}(VarL:SortInt{})),Var'Unds'DotVar5:SortMap{})),Var'Unds'Gen2:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen3:SortGenvCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("daade30226bde03012b2934e87c297da84cbe17230f0c617318f43077464e8b2"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(329,8,329,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`lvalue(_)_SIMPLE-TYPED-DYNAMIC_Exp_K`(inj{Exp,KItem}(`lookup(_)_SIMPLE-TYPED-DYNAMIC_Exp_Int`(L))))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`lvalue(_)_SIMPLE-TYPED-DYNAMIC_Exp_K`(inj{Val,KItem}(`loc(_)_SIMPLE-TYPED-DYNAMIC_Val_Int`(L))))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9a289b109eceb0d2ce1d979e01b0b7cf02a0bbfab5029cd5dcdaabd1445e6464), org.kframework.attributes.Location(Location(336,8,336,39)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbllvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbllookup'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'Int{}(VarL:SortInt{})),dotk{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbllvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K{}(kseq{}(inj{SortVal{}, SortKItem{}}(Lblloc'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Val'Unds'Int{}(VarL:SortInt{})),dotk{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("9a289b109eceb0d2ce1d979e01b0b7cf02a0bbfab5029cd5dcdaabd1445e6464"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(336,8,336,39)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Stmt,KItem}(`print(_);_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exps`(HOLE))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exps,KItem}(HOLE)~>`#freezerprint(_);_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exps0_`(.KList)~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exps,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(165b936ea996cc952ad9945e1a02f11890796237c4efb109a1d9df1e0930fc64), heat, label(SIMPLE-TYPED-DYNAMIC-SYNTAX.print(_);_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exps1-heat), org.kframework.attributes.Location(Location(57,19,57,65)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps{}(VarHOLE:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),kseq{}(Lbl'Hash'freezerprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("165b936ea996cc952ad9945e1a02f11890796237c4efb109a1d9df1e0930fc64"), heat{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX.print(_);_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exps1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(57,19,57,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Stmt,KItem}(`print(_);_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exps`(`_,__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exps_Exp_Exps`(inj{Val,Exp}(V),Es)))~>_DotVar5),_Gen1,_Gen2,_Gen3)),_DotVar3)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,`<output>`(_DotVar2),_Gen9),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Stmt,KItem}(`print(_);_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exps`(Es))~>_DotVar5),_Gen1,_Gen2,_Gen3)),_DotVar3)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,`<output>`(`_List_`(_DotVar2,`ListItem`(inj{Val,KItem}(V)))),_Gen9),_DotVar0) requires `_orBool_`(`_==K_`(inj{Type,KItem}(`typeOf(_)_SIMPLE-TYPED-DYNAMIC_Type_K`(inj{Val,KItem}(V))),inj{Type,KItem}(`int_SIMPLE-TYPED-DYNAMIC-SYNTAX_Type`(.KList))),`_==K_`(inj{Type,KItem}(`typeOf(_)_SIMPLE-TYPED-DYNAMIC_Type_K`(inj{Val,KItem}(V))),inj{Type,KItem}(`string_SIMPLE-TYPED-DYNAMIC-SYNTAX_Type`(.KList)))) ensures #token("true","Bool") [UNIQUE_ID(43e91828b4779fcd155164b22f7bdfe9e08811b7e2aa005eb1e5dc0bce9afc79), org.kframework.attributes.Location(Location(243,8,244,55)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "when" Bool [klabel(#ruleRequires), symbol]), print]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps{}(Lbl'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(inj{SortVal{}, SortExp{}}(VarV:SortVal{}),VarEs:SortExps{}))),Var'Unds'DotVar5:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar3:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Lbl'-LT-'output'-GT-'{}(Var'Unds'DotVar2:SortList{}),Var'Unds'Gen9:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'orBool'Unds'{}(Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortType{}, SortKItem{}}(LbltypeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Type'Unds'K{}(kseq{}(inj{SortVal{}, SortKItem{}}(VarV:SortVal{}),dotk{}()))),dotk{}()),kseq{}(inj{SortType{}, SortKItem{}}(Lblint'Unds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Type{}()),dotk{}())),Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortType{}, SortKItem{}}(LbltypeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Type'Unds'K{}(kseq{}(inj{SortVal{}, SortKItem{}}(VarV:SortVal{}),dotk{}()))),dotk{}()),kseq{}(inj{SortType{}, SortKItem{}}(Lblstring'Unds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Type{}()),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps{}(VarEs:SortExps{})),Var'Unds'DotVar5:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar3:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Lbl'-LT-'output'-GT-'{}(Lbl'Unds'List'Unds'{}(Var'Unds'DotVar2:SortList{},LblListItem{}(inj{SortVal{}, SortKItem{}}(VarV:SortVal{})))),Var'Unds'Gen9:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("43e91828b4779fcd155164b22f7bdfe9e08811b7e2aa005eb1e5dc0bce9afc79"), group{}("print"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(243,8,244,55)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"when\" Bool [klabel(#ruleRequires), symbol]")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Stmt,KItem}(`print(_);_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exps`(inj{Vals,Exps}(`.List{"_,__SIMPLE-TYPED-DYNAMIC-SYNTAX_Vals_Val_Vals"}_Vals`(.KList))))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(16b32bcb774afdc18706cf4bbe94bbcccc6589710519d6c9e8e27168842210ad), org.kframework.attributes.Location(Location(245,8,245,26)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblprint'LParUndsRParSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exps{}(inj{SortVals{}, SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(Var'Unds'DotVar4:SortK{}),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("16b32bcb774afdc18706cf4bbe94bbcccc6589710519d6c9e8e27168842210ad"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(245,8,245,26)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`read()_SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp`(.KList))~>_DotVar5),_Gen1,_Gen2,_Gen3)),_DotVar3)),_Gen4,_Gen5,_Gen6,_Gen7,`<input>`(`_List_`(`ListItem`(inj{Int,KItem}(I)),_DotVar2)),_Gen8,_Gen9),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Int,KItem}(I)~>_DotVar5),_Gen1,_Gen2,_Gen3)),_DotVar3)),_Gen4,_Gen5,_Gen6,_Gen7,`<input>`(_DotVar2),_Gen8,_Gen9),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b097384b64512ca5bc6aa9072e0b7471e1c8f1a90fb82bbc23c6fee1a49ad0b8), org.kframework.attributes.Location(Location(224,8,224,76)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), read]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lblread'LParRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp{}()),Var'Unds'DotVar5:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar3:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Lbl'-LT-'input'-GT-'{}(Lbl'Unds'List'Unds'{}(LblListItem{}(inj{SortInt{}, SortKItem{}}(VarI:SortInt{})),Var'Unds'DotVar2:SortList{})),Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInt{}, SortKItem{}}(VarI:SortInt{}),Var'Unds'DotVar5:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar3:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Lbl'-LT-'input'-GT-'{}(Var'Unds'DotVar2:SortList{}),Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("b097384b64512ca5bc6aa9072e0b7471e1c8f1a90fb82bbc23c6fee1a49ad0b8"), group{}("read"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(224,8,224,76)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Stmt,KItem}(`release_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp`(HOLE))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerrelease_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp0_`(.KList)~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(045880ca49f0f8ae563cfbb844fc13480054dfa74bf100ea9e27f3342fff131b), heat, label(SIMPLE-TYPED-DYNAMIC-SYNTAX.release_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp1-heat), org.kframework.attributes.Location(Location(64,19,64,65)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("045880ca49f0f8ae563cfbb844fc13480054dfa74bf100ea9e27f3342fff131b"), heat{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX.release_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(64,19,64,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Stmt,KItem}(`release_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp`(inj{Val,Exp}(V)))~>_DotVar4),_Gen1,_Gen2,`<holds>`(`_Map_`(`_|->_`(inj{Val,KItem}(V),inj{Int,KItem}(N)),_DotVar5)))),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(_DotVar4),_Gen1,_Gen2,`<holds>`(`_Map_`(`_|->_`(inj{Val,KItem}(V),inj{Int,KItem}(`_-Int_`(N,#token("1","Int")))),_DotVar5)))),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9),_DotVar0) requires `_>Int_`(N,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(0ad44d74687a3e51d803d5b7df8f522c3c83505711f8fa57ef0a34cbadca02dd), org.kframework.attributes.Location(Location(302,9,304,20)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "when" Bool [klabel(#ruleRequires), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(inj{SortVal{}, SortExp{}}(VarV:SortVal{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Lbl'-LT-'holds'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortVal{}, SortKItem{}}(VarV:SortVal{}),inj{SortInt{}, SortKItem{}}(VarN:SortInt{})),Var'Unds'DotVar5:SortMap{})))),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen3:SortGenvCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds-GT-'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(Var'Unds'DotVar4:SortK{}),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Lbl'-LT-'holds'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortVal{}, SortKItem{}}(VarV:SortVal{}),inj{SortInt{}, SortKItem{}}(Lbl'Unds'-Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("1")))),Var'Unds'DotVar5:SortMap{})))),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen3:SortGenvCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("0ad44d74687a3e51d803d5b7df8f522c3c83505711f8fa57ef0a34cbadca02dd"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(302,9,304,20)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"when\" Bool [klabel(#ruleRequires), symbol]")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Stmt,KItem}(`release_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp`(inj{Val,Exp}(V)))~>_DotVar5),_Gen1,_Gen2,`<holds>`(`_Map_`(`_|->_`(inj{Val,KItem}(V),inj{Int,KItem}(#token("0","Int"))),_DotVar6)))),_DotVar3)),_Gen3,_Gen4,`<busy>`(`_Set_`(`SetItem`(inj{Val,KItem}(V)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(_DotVar5),_Gen1,_Gen2,`<holds>`(`_Map_`(`.Map`(.KList),_DotVar6)))),_DotVar3)),_Gen3,_Gen4,`<busy>`(_DotVar2),_Gen5,_Gen6,_Gen7,_Gen8),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(20e5ad5ff5df9ec10b054cb3ef657f77f7304ceb84ffea0808b2f3182316dedc), org.kframework.attributes.Location(Location(306,9,307,48)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblrelease'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(inj{SortVal{}, SortExp{}}(VarV:SortVal{}))),Var'Unds'DotVar5:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Lbl'-LT-'holds'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortVal{}, SortKItem{}}(VarV:SortVal{}),inj{SortInt{}, SortKItem{}}(\dv{SortInt{}}("0"))),Var'Unds'DotVar6:SortMap{})))),Var'Unds'DotVar3:SortThreadCellMap{})),Var'Unds'Gen3:SortGenvCell{},Var'Unds'Gen4:SortStoreCell{},Lbl'-LT-'busy'-GT-'{}(Lbl'Unds'Set'Unds'{}(LblSetItem{}(inj{SortVal{}, SortKItem{}}(VarV:SortVal{})),Var'Unds'DotVar2:SortSet{})),Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortInputCell{},Var'Unds'Gen7:SortOutputCell{},Var'Unds'Gen8:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(Var'Unds'DotVar5:SortK{}),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Lbl'-LT-'holds'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'Stop'Map{}(),Var'Unds'DotVar6:SortMap{})))),Var'Unds'DotVar3:SortThreadCellMap{})),Var'Unds'Gen3:SortGenvCell{},Var'Unds'Gen4:SortStoreCell{},Lbl'-LT-'busy'-GT-'{}(Var'Unds'DotVar2:SortSet{}),Var'Unds'Gen5:SortTerminatedCell{},Var'Unds'Gen6:SortInputCell{},Var'Unds'Gen7:SortOutputCell{},Var'Unds'Gen8:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("20e5ad5ff5df9ec10b054cb3ef657f77f7304ceb84ffea0808b2f3182316dedc"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(306,9,307,48)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Stmt,KItem}(`rendezvous_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp`(HOLE))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerrendezvous_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp0_`(.KList)~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(9872d21debb83835faf6e9ad3d136775eb22cd4cc988d464cbdfdcc7848aebcc), heat, label(SIMPLE-TYPED-DYNAMIC-SYNTAX.rendezvous_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp1-heat), org.kframework.attributes.Location(Location(65,19,65,65)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("9872d21debb83835faf6e9ad3d136775eb22cd4cc988d464cbdfdcc7848aebcc"), heat{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX.rendezvous_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(65,19,65,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Stmt,KItem}(`return_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp`(HOLE))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerreturn_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp0_`(.KList)~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(73279a3a9afd9f623d2c3fd034f25b1161055997eeafb482b941847c475fb62d), heat, label(SIMPLE-TYPED-DYNAMIC-SYNTAX.return_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp1-heat), org.kframework.attributes.Location(Location(58,19,58,65)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("73279a3a9afd9f623d2c3fd034f25b1161055997eeafb482b941847c475fb62d"), heat{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX.return_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(58,19,58,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`sizeOf(_)_SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp`(HOLE))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezersizeOf(_)_SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp0_`(.KList)~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(4aec4941ba8bbd95817e0caabf2114fd093a90b1f99c058ad0799097b155ff3e), heat, label(SIMPLE-TYPED-DYNAMIC-SYNTAX.sizeOf(_)_SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp1-heat), org.kframework.attributes.Location(Location(22,18,22,50)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(LblsizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezersizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("4aec4941ba8bbd95817e0caabf2114fd093a90b1f99c058ad0799097b155ff3e"), heat{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX.sizeOf(_)_SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(22,18,22,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(`spawn__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Block`(S))~>_DotVar4),_Gen1,`<env>`(Env),_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9),`<generatedCounter>`(#Fresh))=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Int,KItem}(`_+Int_`(`freshInt(_)_INT_Int_Int`(`_+Int_`(#Fresh,#token("0","Int"))),#token("1","Int")))~>_DotVar4),_Gen1,`<env>`(Env),_Gen2)),`ThreadCellMapItem`(`<id>`(`_+Int_`(`freshInt(_)_INT_Int_Int`(`_+Int_`(#Fresh,#token("0","Int"))),#token("1","Int"))),`<thread>`(`<id>`(`_+Int_`(`freshInt(_)_INT_Int_Int`(`_+Int_`(#Fresh,#token("0","Int"))),#token("1","Int"))),`<k>`(inj{Block,KItem}(S)),initControlCell(.KList),`<env>`(Env),initHoldsCell(.KList)))),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9),`<generatedCounter>`(`_+Int_`(#Fresh,#token("1","Int")))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3fc7983331d92276876de06987dae0175202e5a16bced7af052c6ca7956ddc3e), org.kframework.attributes.Location(Location(277,9,285,28)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lblspawn'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Block{}(VarS:SortBlock{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Lbl'-LT-'env'-GT-'{}(VarEnv:SortMap{}),Var'Unds'Gen2:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen3:SortGenvCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),Lbl'-LT-'generatedCounter'-GT-'{}(Var'Hash'Fresh:SortInt{})),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInt{}, SortKItem{}}(Lbl'UndsPlus'Int'Unds'{}(LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int{}(Lbl'UndsPlus'Int'Unds'{}(Var'Hash'Fresh:SortInt{},\dv{SortInt{}}("0"))),\dv{SortInt{}}("1"))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Lbl'-LT-'env'-GT-'{}(VarEnv:SortMap{}),Var'Unds'Gen2:SortHoldsCell{})),LblThreadCellMapItem{}(Lbl'-LT-'id'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int{}(Lbl'UndsPlus'Int'Unds'{}(Var'Hash'Fresh:SortInt{},\dv{SortInt{}}("0"))),\dv{SortInt{}}("1"))),Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'id'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int{}(Lbl'UndsPlus'Int'Unds'{}(Var'Hash'Fresh:SortInt{},\dv{SortInt{}}("0"))),\dv{SortInt{}}("1"))),Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlock{}, SortKItem{}}(VarS:SortBlock{}),dotk{}())),LblinitControlCell{}(),Lbl'-LT-'env'-GT-'{}(VarEnv:SortMap{}),LblinitHoldsCell{}()))),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen3:SortGenvCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),Lbl'-LT-'generatedCounter'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(Var'Hash'Fresh:SortInt{},\dv{SortInt{}}("1")))), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("3fc7983331d92276876de06987dae0175202e5a16bced7af052c6ca7956ddc3e"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(277,9,285,28)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Stmt,KItem}(`throw_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp`(HOLE))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerthrow_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp0_`(.KList)~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(aa4fdfd339aa7c3addc196e0a00e2ba32891e1e51f69067ea569e4dc02603187), heat, label(SIMPLE-TYPED-DYNAMIC-SYNTAX.throw_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp1-heat), org.kframework.attributes.Location(Location(61,15,61,61)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), strict]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("aa4fdfd339aa7c3addc196e0a00e2ba32891e1e51f69067ea569e4dc02603187"), heat{}(), label{}("SIMPLE-TYPED-DYNAMIC-SYNTAX.throw_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp1-heat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(61,15,61,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), strict{}("")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Stmt,KItem}(`while(_)__SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp_Block`(E,S))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Stmt,KItem}(`if(_)_else__SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp_Block_Block`(E,`{_}_SIMPLE-TYPED-DYNAMIC-SYNTAX_Block_Stmt`(`___SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Stmt_Stmt`(inj{Block,Stmt}(S),`while(_)__SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp_Block`(E,S))),`{}_SIMPLE-TYPED-DYNAMIC-SYNTAX_Block`(.KList)))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6226883b3b07047404e6355caecfbc06503c2b89bea3ff673d41873eb6fb19d4), org.kframework.attributes.Location(Location(241,8,241,43)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(VarE:SortExp{},VarS:SortBlock{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(VarE:SortExp{},Lbl'LBraUndsRBraUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Block'Unds'Stmt{}(Lbl'UndsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(inj{SortBlock{}, SortStmt{}}(VarS:SortBlock{}),Lblwhile'LParUndsRParUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(VarE:SortExp{},VarS:SortBlock{}))),Lbl'LBraRBraUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Block{}())),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("6226883b3b07047404e6355caecfbc06503c2b89bea3ff673d41873eb6fb19d4"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(241,8,241,43)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Block,KItem}(`{_}_SIMPLE-TYPED-DYNAMIC-SYNTAX_Block_Stmt`(S))~>_DotVar4),_Gen1,`<env>`(Env),_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Stmt,KItem}(S)~>`setEnv(_)_SIMPLE-TYPED-DYNAMIC_KItem_Map`(Env)~>_DotVar4),_Gen1,`<env>`(Env),_Gen2)),_DotVar2)),_Gen3,_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f3edbcb0f2f26da043c0a4ddc3efd7f4214d64435961a965a972d99f3f6bfe8b), org.kframework.attributes.Location(Location(232,8,232,63)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlock{}, SortKItem{}}(Lbl'LBraUndsRBraUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Block'Unds'Stmt{}(VarS:SortStmt{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Lbl'-LT-'env'-GT-'{}(VarEnv:SortMap{}),Var'Unds'Gen2:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen3:SortGenvCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(VarS:SortStmt{}),kseq{}(LblsetEnv'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Map{}(VarEnv:SortMap{}),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortControlCell{},Lbl'-LT-'env'-GT-'{}(VarEnv:SortMap{}),Var'Unds'Gen2:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen3:SortGenvCell{},Var'Unds'Gen4:SortStoreCell{},Var'Unds'Gen5:SortBusyCell{},Var'Unds'Gen6:SortTerminatedCell{},Var'Unds'Gen7:SortInputCell{},Var'Unds'Gen8:SortOutputCell{},Var'Unds'Gen9:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("f3edbcb0f2f26da043c0a4ddc3efd7f4214d64435961a965a972d99f3f6bfe8b"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(232,8,232,63)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Block,KItem}(`{}_SIMPLE-TYPED-DYNAMIC-SYNTAX_Block`(.KList))~>_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(_DotVar4),_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d93a96a99fa72c08427059b9bbba01cb82d0cfd13973ca3fb16315431fd92dc7), org.kframework.attributes.Location(Location(231,8,231,15)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlock{}, SortKItem{}}(Lbl'LBraRBraUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Block{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(Var'Unds'DotVar4:SortK{}),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("d93a96a99fa72c08427059b9bbba01cb82d0cfd13973ca3fb16315431fd92dc7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(231,8,231,15)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen1,`<thread>`(_Gen1,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerlvalue(_)_SIMPLE-TYPED-DYNAMIC_Exp_K0_`(inj{Exps,KItem}(_Gen0))~>_DotVar4),_Gen2,_Gen3,_Gen4)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen1,`<thread>`(_Gen1,`<k>`(inj{Exp,KItem}(`lvalue(_)_SIMPLE-TYPED-DYNAMIC_Exp_K`(inj{Exp,KItem}(`_[_]_SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exps`(HOLE,_Gen0))))~>_DotVar4),_Gen2,_Gen3,_Gen4)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(95163eb990183acef1f888affcfaa51c8d3086af0d18f786cdbb3958ec29a035), cool, cool-like, org.kframework.attributes.Location(Location(334,11,334,37)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen1:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen1:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K0'Unds'{}(kseq{}(inj{SortExps{}, SortKItem{}}(Var'Unds'Gen0:SortExps{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen2:SortControlCell{},Var'Unds'Gen3:SortEnvCell{},Var'Unds'Gen4:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen5:SortGenvCell{},Var'Unds'Gen6:SortStoreCell{},Var'Unds'Gen7:SortBusyCell{},Var'Unds'Gen8:SortTerminatedCell{},Var'Unds'Gen9:SortInputCell{},Var'Unds'Gen10:SortOutputCell{},Var'Unds'Gen11:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen1:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen1:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbllvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(VarHOLE:SortExp{},Var'Unds'Gen0:SortExps{})),dotk{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen2:SortControlCell{},Var'Unds'Gen3:SortEnvCell{},Var'Unds'Gen4:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen5:SortGenvCell{},Var'Unds'Gen6:SortStoreCell{},Var'Unds'Gen7:SortBusyCell{},Var'Unds'Gen8:SortTerminatedCell{},Var'Unds'Gen9:SortInputCell{},Var'Unds'Gen10:SortOutputCell{},Var'Unds'Gen11:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("95163eb990183acef1f888affcfaa51c8d3086af0d18f786cdbb3958ec29a035"), cool{}(), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(334,11,334,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen1,`<thread>`(_Gen1,`<k>`(inj{Exps,KItem}(HOLE)~>`#freezerlvalue(_)_SIMPLE-TYPED-DYNAMIC_Exp_K1_`(inj{Exp,KItem}(_Gen0))~>_DotVar4),_Gen2,_Gen3,_Gen4)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen1,`<thread>`(_Gen1,`<k>`(inj{Exp,KItem}(`lvalue(_)_SIMPLE-TYPED-DYNAMIC_Exp_K`(inj{Exp,KItem}(`_[_]_SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exps`(_Gen0,HOLE))))~>_DotVar4),_Gen2,_Gen3,_Gen4)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exps,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(5b86c54317b4fc6eb44f7992294c08f83f5507530d5902d7074ceddfd37b13c6), cool, cool-like, org.kframework.attributes.Location(Location(333,11,333,37)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen1:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen1:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),kseq{}(Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Var'Unds'Gen0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen2:SortControlCell{},Var'Unds'Gen3:SortEnvCell{},Var'Unds'Gen4:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen5:SortGenvCell{},Var'Unds'Gen6:SortStoreCell{},Var'Unds'Gen7:SortBusyCell{},Var'Unds'Gen8:SortTerminatedCell{},Var'Unds'Gen9:SortInputCell{},Var'Unds'Gen10:SortOutputCell{},Var'Unds'Gen11:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen1:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen1:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbllvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Var'Unds'Gen0:SortExp{},VarHOLE:SortExps{})),dotk{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen2:SortControlCell{},Var'Unds'Gen3:SortEnvCell{},Var'Unds'Gen4:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen5:SortGenvCell{},Var'Unds'Gen6:SortStoreCell{},Var'Unds'Gen7:SortBusyCell{},Var'Unds'Gen8:SortTerminatedCell{},Var'Unds'Gen9:SortInputCell{},Var'Unds'Gen10:SortOutputCell{},Var'Unds'Gen11:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("5b86c54317b4fc6eb44f7992294c08f83f5507530d5902d7074ceddfd37b13c6"), cool{}(), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(333,11,333,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen1,`<thread>`(_Gen1,`<k>`(inj{Exp,KItem}(`_&&__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(inj{Bool,Exp}(#token("false","Bool")),_Gen0))~>_DotVar4),_Gen2,_Gen3,_Gen4)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen1,`<thread>`(_Gen1,`<k>`(inj{Bool,KItem}(#token("false","Bool"))~>_DotVar4),_Gen2,_Gen3,_Gen4)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7e86e246ccbbb828b8f757f43a4b17a3f31896964017c96c4d144a0263fcac39), org.kframework.attributes.Location(Location(187,8,187,27)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen1:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen1:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsAnd-And-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortBool{}, SortExp{}}(\dv{SortBool{}}("false")),Var'Unds'Gen0:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen2:SortControlCell{},Var'Unds'Gen3:SortEnvCell{},Var'Unds'Gen4:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen5:SortGenvCell{},Var'Unds'Gen6:SortStoreCell{},Var'Unds'Gen7:SortBusyCell{},Var'Unds'Gen8:SortTerminatedCell{},Var'Unds'Gen9:SortInputCell{},Var'Unds'Gen10:SortOutputCell{},Var'Unds'Gen11:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen1:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen1:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBool{}, SortKItem{}}(\dv{SortBool{}}("false")),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen2:SortControlCell{},Var'Unds'Gen3:SortEnvCell{},Var'Unds'Gen4:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen5:SortGenvCell{},Var'Unds'Gen6:SortStoreCell{},Var'Unds'Gen7:SortBusyCell{},Var'Unds'Gen8:SortTerminatedCell{},Var'Unds'Gen9:SortInputCell{},Var'Unds'Gen10:SortOutputCell{},Var'Unds'Gen11:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("7e86e246ccbbb828b8f757f43a4b17a3f31896964017c96c4d144a0263fcac39"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(187,8,187,27)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen1,`<thread>`(_Gen1,`<k>`(inj{Stmt,KItem}(`_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp`(inj{Val,Exp}(_Gen0)))~>_DotVar4),_Gen2,_Gen3,_Gen4)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen1,`<thread>`(_Gen1,`<k>`(_DotVar4),_Gen2,_Gen3,_Gen4)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d4fbd08def83ff06b1f784b1ae3a2a81c992a78c643f8f7fae30e2dbff02d7dc), org.kframework.attributes.Location(Location(236,8,236,19)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen1:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen1:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(inj{SortVal{}, SortExp{}}(Var'Unds'Gen0:SortVal{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen2:SortControlCell{},Var'Unds'Gen3:SortEnvCell{},Var'Unds'Gen4:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen5:SortGenvCell{},Var'Unds'Gen6:SortStoreCell{},Var'Unds'Gen7:SortBusyCell{},Var'Unds'Gen8:SortTerminatedCell{},Var'Unds'Gen9:SortInputCell{},Var'Unds'Gen10:SortOutputCell{},Var'Unds'Gen11:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen1:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen1:SortIdCell{},Lbl'-LT-'k'-GT-'{}(Var'Unds'DotVar4:SortK{}),Var'Unds'Gen2:SortControlCell{},Var'Unds'Gen3:SortEnvCell{},Var'Unds'Gen4:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen5:SortGenvCell{},Var'Unds'Gen6:SortStoreCell{},Var'Unds'Gen7:SortBusyCell{},Var'Unds'Gen8:SortTerminatedCell{},Var'Unds'Gen9:SortInputCell{},Var'Unds'Gen10:SortOutputCell{},Var'Unds'Gen11:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("d4fbd08def83ff06b1f784b1ae3a2a81c992a78c643f8f7fae30e2dbff02d7dc"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(236,8,236,19)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen1,`<thread>`(_Gen1,`<k>`(inj{Exp,KItem}(`_=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(HOLE,_Gen0))~>_DotVar4),_Gen2,_Gen3,_Gen4)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen1,`<thread>`(_Gen1,`<k>`(inj{Exp,KItem}(`lvalue(_)_SIMPLE-TYPED-DYNAMIC_Exp_K`(inj{Exp,KItem}(HOLE)))~>`#freezer_=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(_Gen0))~>_DotVar4),_Gen2,_Gen3,_Gen4)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(932b94a0a278761134d776db1d339654f93bf3b610e3f2b3f413e67bbe2602a4), heat, org.kframework.attributes.Location(Location(226,11,226,37)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen1:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen1:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},Var'Unds'Gen0:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen2:SortControlCell{},Var'Unds'Gen3:SortEnvCell{},Var'Unds'Gen4:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen5:SortGenvCell{},Var'Unds'Gen6:SortStoreCell{},Var'Unds'Gen7:SortBusyCell{},Var'Unds'Gen8:SortTerminatedCell{},Var'Unds'Gen9:SortInputCell{},Var'Unds'Gen10:SortOutputCell{},Var'Unds'Gen11:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen1:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen1:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbllvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),kseq{}(Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Var'Unds'Gen0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen2:SortControlCell{},Var'Unds'Gen3:SortEnvCell{},Var'Unds'Gen4:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen5:SortGenvCell{},Var'Unds'Gen6:SortStoreCell{},Var'Unds'Gen7:SortBusyCell{},Var'Unds'Gen8:SortTerminatedCell{},Var'Unds'Gen9:SortInputCell{},Var'Unds'Gen10:SortOutputCell{},Var'Unds'Gen11:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("932b94a0a278761134d776db1d339654f93bf3b610e3f2b3f413e67bbe2602a4"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(226,11,226,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen1,`<thread>`(_Gen1,`<k>`(inj{Exp,KItem}(`_||__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(inj{Bool,Exp}(#token("true","Bool")),_Gen0))~>_DotVar4),_Gen2,_Gen3,_Gen4)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen1,`<thread>`(_Gen1,`<k>`(inj{Bool,KItem}(#token("true","Bool"))~>_DotVar4),_Gen2,_Gen3,_Gen4)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3a803cf216b86fb2b5914863b46e18b57d9c470b2d7055b963798b30af92bd30), org.kframework.attributes.Location(Location(188,8,188,26)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen1:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen1:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPipePipeUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortBool{}, SortExp{}}(\dv{SortBool{}}("true")),Var'Unds'Gen0:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen2:SortControlCell{},Var'Unds'Gen3:SortEnvCell{},Var'Unds'Gen4:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen5:SortGenvCell{},Var'Unds'Gen6:SortStoreCell{},Var'Unds'Gen7:SortBusyCell{},Var'Unds'Gen8:SortTerminatedCell{},Var'Unds'Gen9:SortInputCell{},Var'Unds'Gen10:SortOutputCell{},Var'Unds'Gen11:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen1:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen1:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBool{}, SortKItem{}}(\dv{SortBool{}}("true")),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen2:SortControlCell{},Var'Unds'Gen3:SortEnvCell{},Var'Unds'Gen4:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen5:SortGenvCell{},Var'Unds'Gen6:SortStoreCell{},Var'Unds'Gen7:SortBusyCell{},Var'Unds'Gen8:SortTerminatedCell{},Var'Unds'Gen9:SortInputCell{},Var'Unds'Gen10:SortOutputCell{},Var'Unds'Gen11:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("3a803cf216b86fb2b5914863b46e18b57d9c470b2d7055b963798b30af92bd30"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(188,8,188,26)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen1,`<thread>`(_Gen1,`<k>`(inj{Stmt,KItem}(`if(_)_else__SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp_Block_Block`(inj{Bool,Exp}(#token("false","Bool")),_Gen0,S))~>_DotVar4),_Gen2,_Gen3,_Gen4)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen1,`<thread>`(_Gen1,`<k>`(inj{Block,KItem}(S)~>_DotVar4),_Gen2,_Gen3,_Gen4)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e899638edc3fce89e5b710ce370b1cb10fb5e30aa6ed4c644616d5fb1135c318), org.kframework.attributes.Location(Location(239,8,239,32)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen1:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen1:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(inj{SortBool{}, SortExp{}}(\dv{SortBool{}}("false")),Var'Unds'Gen0:SortBlock{},VarS:SortBlock{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen2:SortControlCell{},Var'Unds'Gen3:SortEnvCell{},Var'Unds'Gen4:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen5:SortGenvCell{},Var'Unds'Gen6:SortStoreCell{},Var'Unds'Gen7:SortBusyCell{},Var'Unds'Gen8:SortTerminatedCell{},Var'Unds'Gen9:SortInputCell{},Var'Unds'Gen10:SortOutputCell{},Var'Unds'Gen11:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen1:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen1:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlock{}, SortKItem{}}(VarS:SortBlock{}),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen2:SortControlCell{},Var'Unds'Gen3:SortEnvCell{},Var'Unds'Gen4:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen5:SortGenvCell{},Var'Unds'Gen6:SortStoreCell{},Var'Unds'Gen7:SortBusyCell{},Var'Unds'Gen8:SortTerminatedCell{},Var'Unds'Gen9:SortInputCell{},Var'Unds'Gen10:SortOutputCell{},Var'Unds'Gen11:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("e899638edc3fce89e5b710ce370b1cb10fb5e30aa6ed4c644616d5fb1135c318"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(239,8,239,32)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen1,`<thread>`(_Gen1,`<k>`(inj{Stmt,KItem}(`if(_)_else__SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp_Block_Block`(inj{Bool,Exp}(#token("true","Bool")),S,_Gen0))~>_DotVar4),_Gen2,_Gen3,_Gen4)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen1,`<thread>`(_Gen1,`<k>`(inj{Block,KItem}(S)~>_DotVar4),_Gen2,_Gen3,_Gen4)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e80fcf3f1b9f2bf537f629642556ee4df3d39d07a41268e3136dccd077380562), org.kframework.attributes.Location(Location(238,8,238,32)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen1:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen1:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblif'LParUndsRParUnds'else'UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(inj{SortBool{}, SortExp{}}(\dv{SortBool{}}("true")),VarS:SortBlock{},Var'Unds'Gen0:SortBlock{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen2:SortControlCell{},Var'Unds'Gen3:SortEnvCell{},Var'Unds'Gen4:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen5:SortGenvCell{},Var'Unds'Gen6:SortStoreCell{},Var'Unds'Gen7:SortBusyCell{},Var'Unds'Gen8:SortTerminatedCell{},Var'Unds'Gen9:SortInputCell{},Var'Unds'Gen10:SortOutputCell{},Var'Unds'Gen11:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen1:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen1:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlock{}, SortKItem{}}(VarS:SortBlock{}),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen2:SortControlCell{},Var'Unds'Gen3:SortEnvCell{},Var'Unds'Gen4:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen5:SortGenvCell{},Var'Unds'Gen6:SortStoreCell{},Var'Unds'Gen7:SortBusyCell{},Var'Unds'Gen8:SortTerminatedCell{},Var'Unds'Gen9:SortInputCell{},Var'Unds'Gen10:SortOutputCell{},Var'Unds'Gen11:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("e80fcf3f1b9f2bf537f629642556ee4df3d39d07a41268e3136dccd077380562"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(238,8,238,32)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen1,`<thread>`(_Gen1,`<k>`(inj{Exp,KItem}(`lvalue(_)_SIMPLE-TYPED-DYNAMIC_Exp_K`(inj{Exp,KItem}(HOLE)))~>`#freezer_=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(_Gen0))~>_DotVar4),_Gen2,_Gen3,_Gen4)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen1,`<thread>`(_Gen1,`<k>`(inj{Exp,KItem}(`_=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(HOLE,_Gen0))~>_DotVar4),_Gen2,_Gen3,_Gen4)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(c62190e5ba91425cab7c61e39d34b1e968aebdc52e8953abc0ecf3d0e65a34a1), cool, org.kframework.attributes.Location(Location(226,11,226,37)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen1:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen1:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbllvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),kseq{}(Lbl'Hash'freezer'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Var'Unds'Gen0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen2:SortControlCell{},Var'Unds'Gen3:SortEnvCell{},Var'Unds'Gen4:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen5:SortGenvCell{},Var'Unds'Gen6:SortStoreCell{},Var'Unds'Gen7:SortBusyCell{},Var'Unds'Gen8:SortTerminatedCell{},Var'Unds'Gen9:SortInputCell{},Var'Unds'Gen10:SortOutputCell{},Var'Unds'Gen11:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen1:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen1:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},Var'Unds'Gen0:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen2:SortControlCell{},Var'Unds'Gen3:SortEnvCell{},Var'Unds'Gen4:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen5:SortGenvCell{},Var'Unds'Gen6:SortStoreCell{},Var'Unds'Gen7:SortBusyCell{},Var'Unds'Gen8:SortTerminatedCell{},Var'Unds'Gen9:SortInputCell{},Var'Unds'Gen10:SortOutputCell{},Var'Unds'Gen11:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("c62190e5ba91425cab7c61e39d34b1e968aebdc52e8953abc0ecf3d0e65a34a1"), cool{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(226,11,226,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen1,`<thread>`(_Gen1,`<k>`(inj{Exp,KItem}(`lvalue(_)_SIMPLE-TYPED-DYNAMIC_Exp_K`(inj{Exp,KItem}(`_[_]_SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exps`(HOLE,_Gen0))))~>_DotVar4),_Gen2,_Gen3,_Gen4)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen1,`<thread>`(_Gen1,`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerlvalue(_)_SIMPLE-TYPED-DYNAMIC_Exp_K0_`(inj{Exps,KItem}(_Gen0))~>_DotVar4),_Gen2,_Gen3,_Gen4)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(0f7f4ef28bf56339990da3fa46e876e1298cf62988b9263de92a11db5c5ca63e), heat, org.kframework.attributes.Location(Location(334,11,334,37)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen1:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen1:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbllvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(VarHOLE:SortExp{},Var'Unds'Gen0:SortExps{})),dotk{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen2:SortControlCell{},Var'Unds'Gen3:SortEnvCell{},Var'Unds'Gen4:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen5:SortGenvCell{},Var'Unds'Gen6:SortStoreCell{},Var'Unds'Gen7:SortBusyCell{},Var'Unds'Gen8:SortTerminatedCell{},Var'Unds'Gen9:SortInputCell{},Var'Unds'Gen10:SortOutputCell{},Var'Unds'Gen11:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen1:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen1:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K0'Unds'{}(kseq{}(inj{SortExps{}, SortKItem{}}(Var'Unds'Gen0:SortExps{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen2:SortControlCell{},Var'Unds'Gen3:SortEnvCell{},Var'Unds'Gen4:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen5:SortGenvCell{},Var'Unds'Gen6:SortStoreCell{},Var'Unds'Gen7:SortBusyCell{},Var'Unds'Gen8:SortTerminatedCell{},Var'Unds'Gen9:SortInputCell{},Var'Unds'Gen10:SortOutputCell{},Var'Unds'Gen11:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("0f7f4ef28bf56339990da3fa46e876e1298cf62988b9263de92a11db5c5ca63e"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(334,11,334,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen1,`<thread>`(_Gen1,`<k>`(inj{Exp,KItem}(`lvalue(_)_SIMPLE-TYPED-DYNAMIC_Exp_K`(inj{Exp,KItem}(`_[_]_SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exps`(_Gen0,HOLE))))~>_DotVar4),_Gen2,_Gen3,_Gen4)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen1,`<thread>`(_Gen1,`<k>`(inj{Exps,KItem}(HOLE)~>`#freezerlvalue(_)_SIMPLE-TYPED-DYNAMIC_Exp_K1_`(inj{Exp,KItem}(_Gen0))~>_DotVar4),_Gen2,_Gen3,_Gen4)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exps,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(f5d7886ed58f2443449040f3632374cdeeb980a3aa2c20450718cae8b5359d20), heat, org.kframework.attributes.Location(Location(333,11,333,37)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen1:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen1:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbllvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Var'Unds'Gen0:SortExp{},VarHOLE:SortExps{})),dotk{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen2:SortControlCell{},Var'Unds'Gen3:SortEnvCell{},Var'Unds'Gen4:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen5:SortGenvCell{},Var'Unds'Gen6:SortStoreCell{},Var'Unds'Gen7:SortBusyCell{},Var'Unds'Gen8:SortTerminatedCell{},Var'Unds'Gen9:SortInputCell{},Var'Unds'Gen10:SortOutputCell{},Var'Unds'Gen11:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen1:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen1:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),kseq{}(Lbl'Hash'freezerlvalue'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'K1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Var'Unds'Gen0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen2:SortControlCell{},Var'Unds'Gen3:SortEnvCell{},Var'Unds'Gen4:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen5:SortGenvCell{},Var'Unds'Gen6:SortStoreCell{},Var'Unds'Gen7:SortBusyCell{},Var'Unds'Gen8:SortTerminatedCell{},Var'Unds'Gen9:SortInputCell{},Var'Unds'Gen10:SortOutputCell{},Var'Unds'Gen11:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("f5d7886ed58f2443449040f3632374cdeeb980a3aa2c20450718cae8b5359d20"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(333,11,333,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen1,`<thread>`(_Gen1,`<k>`(`setEnv(_)_SIMPLE-TYPED-DYNAMIC_KItem_Map`(Env)~>_DotVar4),_Gen2,`<env>`(_Gen0),_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen1,`<thread>`(_Gen1,`<k>`(_DotVar4),_Gen2,`<env>`(Env),_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f6fbc4e2fd7adde783445871fd781f69bd6eb199543bdc581fd946e3c8af3c6a), org.kframework.attributes.Location(Location(323,8,323,59)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen1:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen1:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(LblsetEnv'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Map{}(VarEnv:SortMap{}),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen2:SortControlCell{},Lbl'-LT-'env'-GT-'{}(Var'Unds'Gen0:SortMap{}),Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen1:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen1:SortIdCell{},Lbl'-LT-'k'-GT-'{}(Var'Unds'DotVar4:SortK{}),Var'Unds'Gen2:SortControlCell{},Lbl'-LT-'env'-GT-'{}(VarEnv:SortMap{}),Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("f6fbc4e2fd7adde783445871fd781f69bd6eb199543bdc581fd946e3c8af3c6a"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(323,8,323,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen2,`<thread>`(_Gen2,`<k>`(inj{Exps,KItem}(HOLE)~>`#freezer__;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Type_Exps2_`(inj{Type,KItem}(_Gen0),inj{Exp,KItem}(_Gen1))~>_DotVar4),_Gen3,_Gen4,_Gen5)),_DotVar2)),_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11,_Gen12),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen2,`<thread>`(_Gen2,`<k>`(inj{Stmt,KItem}(`__;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Type_Exps`(_Gen0,`_,__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exps_Exp_Exps`(`_[_]_SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exps`(_Gen1,HOLE),inj{Vals,Exps}(`.List{"_,__SIMPLE-TYPED-DYNAMIC-SYNTAX_Vals_Val_Vals"}_Vals`(.KList)))))~>_DotVar4),_Gen3,_Gen4,_Gen5)),_DotVar2)),_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11,_Gen12),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exps,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(ecf62ff2978a7684a3ff505a6f9efa6a8707ea84c16176e41d6e382facaeb9ad), cool, cool-like, org.kframework.attributes.Location(Location(138,11,138,37)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen2:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen2:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),kseq{}(Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(kseq{}(inj{SortType{}, SortKItem{}}(Var'Unds'Gen0:SortType{}),dotk{}()),kseq{}(inj{SortExp{}, SortKItem{}}(Var'Unds'Gen1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen3:SortControlCell{},Var'Unds'Gen4:SortEnvCell{},Var'Unds'Gen5:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen6:SortGenvCell{},Var'Unds'Gen7:SortStoreCell{},Var'Unds'Gen8:SortBusyCell{},Var'Unds'Gen9:SortTerminatedCell{},Var'Unds'Gen10:SortInputCell{},Var'Unds'Gen11:SortOutputCell{},Var'Unds'Gen12:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),dotk{}()))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen2:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen2:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps{}(Var'Unds'Gen0:SortType{},Lbl'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(Lbl'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Var'Unds'Gen1:SortExp{},VarHOLE:SortExps{}),inj{SortVals{}, SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}())))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen3:SortControlCell{},Var'Unds'Gen4:SortEnvCell{},Var'Unds'Gen5:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen6:SortGenvCell{},Var'Unds'Gen7:SortStoreCell{},Var'Unds'Gen8:SortBusyCell{},Var'Unds'Gen9:SortTerminatedCell{},Var'Unds'Gen10:SortInputCell{},Var'Unds'Gen11:SortOutputCell{},Var'Unds'Gen12:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("ecf62ff2978a7684a3ff505a6f9efa6a8707ea84c16176e41d6e382facaeb9ad"), cool{}(), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(138,11,138,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen2,`<thread>`(_Gen2,`<k>`(inj{Stmt,KItem}(`__;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Type_Exps`(_Gen0,`_,__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exps_Exp_Exps`(`_[_]_SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exps`(_Gen1,HOLE),inj{Vals,Exps}(`.List{"_,__SIMPLE-TYPED-DYNAMIC-SYNTAX_Vals_Val_Vals"}_Vals`(.KList)))))~>_DotVar4),_Gen3,_Gen4,_Gen5)),_DotVar2)),_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11,_Gen12),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen2,`<thread>`(_Gen2,`<k>`(inj{Exps,KItem}(HOLE)~>`#freezer__;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Type_Exps2_`(inj{Type,KItem}(_Gen0),inj{Exp,KItem}(_Gen1))~>_DotVar4),_Gen3,_Gen4,_Gen5)),_DotVar2)),_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11,_Gen12),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exps,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(e5269df0167135077eb2b47a6309bcc109355a68b0f50389aae7bbb90fbd31aa), heat, org.kframework.attributes.Location(Location(138,11,138,37)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen2:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen2:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps{}(Var'Unds'Gen0:SortType{},Lbl'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(Lbl'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Var'Unds'Gen1:SortExp{},VarHOLE:SortExps{}),inj{SortVals{}, SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}())))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen3:SortControlCell{},Var'Unds'Gen4:SortEnvCell{},Var'Unds'Gen5:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen6:SortGenvCell{},Var'Unds'Gen7:SortStoreCell{},Var'Unds'Gen8:SortBusyCell{},Var'Unds'Gen9:SortTerminatedCell{},Var'Unds'Gen10:SortInputCell{},Var'Unds'Gen11:SortOutputCell{},Var'Unds'Gen12:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),dotk{}())))),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen2:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen2:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),kseq{}(Lbl'Hash'freezer'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(kseq{}(inj{SortType{}, SortKItem{}}(Var'Unds'Gen0:SortType{}),dotk{}()),kseq{}(inj{SortExp{}, SortKItem{}}(Var'Unds'Gen1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen3:SortControlCell{},Var'Unds'Gen4:SortEnvCell{},Var'Unds'Gen5:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen6:SortGenvCell{},Var'Unds'Gen7:SortStoreCell{},Var'Unds'Gen8:SortBusyCell{},Var'Unds'Gen9:SortTerminatedCell{},Var'Unds'Gen10:SortInputCell{},Var'Unds'Gen11:SortOutputCell{},Var'Unds'Gen12:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("e5269df0167135077eb2b47a6309bcc109355a68b0f50389aae7bbb90fbd31aa"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(138,11,138,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen2,`<thread>`(_Gen2,`<k>`(inj{Stmt,KItem}(`return;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt`(.KList))~>_DotVar4),`<control>`(_Gen0,_Gen1,`<returnType>`(T)),_Gen3,_Gen4)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen2,`<thread>`(_Gen2,`<k>`(inj{Stmt,KItem}(`return_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp`(inj{Val,Exp}(`nothing(_)_SIMPLE-TYPED-DYNAMIC_Val_Type`(T))))~>_DotVar4),`<control>`(_Gen0,_Gen1,`<returnType>`(T)),_Gen3,_Gen4)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a33f0516232e4f54c0bab342d577528db050611c5f2cdbc9dcf8d741602f951f), org.kframework.attributes.Location(Location(222,8,222,78)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen2:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen2:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblreturn'SClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt{}()),Var'Unds'DotVar4:SortK{})),Lbl'-LT-'control'-GT-'{}(Var'Unds'Gen0:SortFstackCell{},Var'Unds'Gen1:SortXstackCell{},Lbl'-LT-'returnType'-GT-'{}(VarT:SortType{})),Var'Unds'Gen3:SortEnvCell{},Var'Unds'Gen4:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen5:SortGenvCell{},Var'Unds'Gen6:SortStoreCell{},Var'Unds'Gen7:SortBusyCell{},Var'Unds'Gen8:SortTerminatedCell{},Var'Unds'Gen9:SortInputCell{},Var'Unds'Gen10:SortOutputCell{},Var'Unds'Gen11:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen2:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen2:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(inj{SortVal{}, SortExp{}}(Lblnothing'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Val'Unds'Type{}(VarT:SortType{})))),Var'Unds'DotVar4:SortK{})),Lbl'-LT-'control'-GT-'{}(Var'Unds'Gen0:SortFstackCell{},Var'Unds'Gen1:SortXstackCell{},Lbl'-LT-'returnType'-GT-'{}(VarT:SortType{})),Var'Unds'Gen3:SortEnvCell{},Var'Unds'Gen4:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen5:SortGenvCell{},Var'Unds'Gen6:SortStoreCell{},Var'Unds'Gen7:SortBusyCell{},Var'Unds'Gen8:SortTerminatedCell{},Var'Unds'Gen9:SortInputCell{},Var'Unds'Gen10:SortOutputCell{},Var'Unds'Gen11:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("a33f0516232e4f54c0bab342d577528db050611c5f2cdbc9dcf8d741602f951f"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(222,8,222,78)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen2,`<thread>`(_Gen2,`<k>`(inj{Exp,KItem}(`sizeOf(_)_SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp`(inj{Val,Exp}(`array(_,_,_)_SIMPLE-TYPED-DYNAMIC_Val_Type_Int_Int`(_Gen0,_Gen1,N))))~>_DotVar4),_Gen3,_Gen4,_Gen5)),_DotVar2)),_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11,_Gen12),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen2,`<thread>`(_Gen2,`<k>`(inj{Int,KItem}(N)~>_DotVar4),_Gen3,_Gen4,_Gen5)),_DotVar2)),_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11,_Gen12),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e40dd6dbe7cffd673a24b49bbe4fef156f2d657a3fa5467ff29758f196b138cb), org.kframework.attributes.Location(Location(199,8,199,33)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen2:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen2:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(LblsizeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp{}(inj{SortVal{}, SortExp{}}(Lblarray'LParUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Val'Unds'Type'Unds'Int'Unds'Int{}(Var'Unds'Gen0:SortType{},Var'Unds'Gen1:SortInt{},VarN:SortInt{})))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen3:SortControlCell{},Var'Unds'Gen4:SortEnvCell{},Var'Unds'Gen5:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen6:SortGenvCell{},Var'Unds'Gen7:SortStoreCell{},Var'Unds'Gen8:SortBusyCell{},Var'Unds'Gen9:SortTerminatedCell{},Var'Unds'Gen10:SortInputCell{},Var'Unds'Gen11:SortOutputCell{},Var'Unds'Gen12:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen2:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen2:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInt{}, SortKItem{}}(VarN:SortInt{}),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen3:SortControlCell{},Var'Unds'Gen4:SortEnvCell{},Var'Unds'Gen5:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen6:SortGenvCell{},Var'Unds'Gen7:SortStoreCell{},Var'Unds'Gen8:SortBusyCell{},Var'Unds'Gen9:SortTerminatedCell{},Var'Unds'Gen10:SortInputCell{},Var'Unds'Gen11:SortOutputCell{},Var'Unds'Gen12:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("e40dd6dbe7cffd673a24b49bbe4fef156f2d657a3fa5467ff29758f196b138cb"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(199,8,199,33)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen2,`<thread>`(_Gen2,`<k>`(inj{Stmt,KItem}(`try_catch(_)__SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Block_Param_Block`(S1,P,S2))~>K),`<control>`(_Gen0,`<xstack>`(`_List_`(`.List`(.KList),_DotVar4)),_Gen1),`<env>`(Env),_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen2,`<thread>`(_Gen2,`<k>`(inj{Block,KItem}(S1)~>`popx_SIMPLE-TYPED-DYNAMIC_KItem`(.KList)~>K),`<control>`(_Gen0,`<xstack>`(`_List_`(`ListItem`(`(_,_,_,_,_)_SIMPLE-TYPED-DYNAMIC_KItem_Param_Stmt_K_Map_ControlCellFragment`(P,inj{Block,Stmt}(S2),K,Env,`<control>-fragment`(inj{FstackCell,FstackCellOpt}(_Gen0),noXstackCell(.KList),inj{ReturnTypeCell,ReturnTypeCellOpt}(_Gen1)))),_DotVar4)),_Gen1),`<env>`(Env),_Gen3)),_DotVar2)),_Gen4,_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d91a1fcde9e1d13fe98ea16ff40f86418da982539b37432c18b9b7d599aa9a90), org.kframework.attributes.Location(Location(251,8,256,24)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen2:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen2:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbltry'Unds'catch'LParUndsRParUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block{}(VarS1:SortBlock{},VarP:SortParam{},VarS2:SortBlock{})),VarK:SortK{})),Lbl'-LT-'control'-GT-'{}(Var'Unds'Gen0:SortFstackCell{},Lbl'-LT-'xstack'-GT-'{}(Lbl'Unds'List'Unds'{}(Lbl'Stop'List{}(),Var'Unds'DotVar4:SortList{})),Var'Unds'Gen1:SortReturnTypeCell{}),Lbl'-LT-'env'-GT-'{}(VarEnv:SortMap{}),Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen2:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen2:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlock{}, SortKItem{}}(VarS1:SortBlock{}),kseq{}(Lblpopx'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}(),VarK:SortK{}))),Lbl'-LT-'control'-GT-'{}(Var'Unds'Gen0:SortFstackCell{},Lbl'-LT-'xstack'-GT-'{}(Lbl'Unds'List'Unds'{}(LblListItem{}(Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Param'Unds'Stmt'Unds'K'Unds'Map'Unds'ControlCellFragment{}(VarP:SortParam{},inj{SortBlock{}, SortStmt{}}(VarS2:SortBlock{}),VarK:SortK{},VarEnv:SortMap{},Lbl'-LT-'control'-GT-'-fragment{}(inj{SortFstackCell{}, SortFstackCellOpt{}}(Var'Unds'Gen0:SortFstackCell{}),LblnoXstackCell{}(),inj{SortReturnTypeCell{}, SortReturnTypeCellOpt{}}(Var'Unds'Gen1:SortReturnTypeCell{})))),Var'Unds'DotVar4:SortList{})),Var'Unds'Gen1:SortReturnTypeCell{}),Lbl'-LT-'env'-GT-'{}(VarEnv:SortMap{}),Var'Unds'Gen3:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen4:SortGenvCell{},Var'Unds'Gen5:SortStoreCell{},Var'Unds'Gen6:SortBusyCell{},Var'Unds'Gen7:SortTerminatedCell{},Var'Unds'Gen8:SortInputCell{},Var'Unds'Gen9:SortOutputCell{},Var'Unds'Gen10:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("d91a1fcde9e1d13fe98ea16ff40f86418da982539b37432c18b9b7d599aa9a90"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(251,8,256,24)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen2,`<thread>`(_Gen2,`<k>`(`setEnv(_)_SIMPLE-TYPED-DYNAMIC_KItem_Map`(_Gen0)~>`setEnv(_)_SIMPLE-TYPED-DYNAMIC_KItem_Map`(_Gen1)~>_DotVar4),_Gen3,_Gen4,_Gen5)),_DotVar2)),_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11,_Gen12),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen2,`<thread>`(_Gen2,`<k>`(`setEnv(_)_SIMPLE-TYPED-DYNAMIC_KItem_Map`(_Gen1)~>_DotVar4),_Gen3,_Gen4,_Gen5)),_DotVar2)),_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11,_Gen12),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(578286d190320020b60fb7f54444bbe3933b484014afc793ab38c032d10a9dd0), org.kframework.attributes.Location(Location(324,8,324,37)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen2:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen2:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(LblsetEnv'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Map{}(Var'Unds'Gen0:SortMap{}),kseq{}(LblsetEnv'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Map{}(Var'Unds'Gen1:SortMap{}),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen3:SortControlCell{},Var'Unds'Gen4:SortEnvCell{},Var'Unds'Gen5:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen6:SortGenvCell{},Var'Unds'Gen7:SortStoreCell{},Var'Unds'Gen8:SortBusyCell{},Var'Unds'Gen9:SortTerminatedCell{},Var'Unds'Gen10:SortInputCell{},Var'Unds'Gen11:SortOutputCell{},Var'Unds'Gen12:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen2:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen2:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(LblsetEnv'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Map{}(Var'Unds'Gen1:SortMap{}),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen3:SortControlCell{},Var'Unds'Gen4:SortEnvCell{},Var'Unds'Gen5:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen6:SortGenvCell{},Var'Unds'Gen7:SortStoreCell{},Var'Unds'Gen8:SortBusyCell{},Var'Unds'Gen9:SortTerminatedCell{},Var'Unds'Gen10:SortInputCell{},Var'Unds'Gen11:SortOutputCell{},Var'Unds'Gen12:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("578286d190320020b60fb7f54444bbe3933b484014afc793ab38c032d10a9dd0"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(324,8,324,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen3,`<thread>`(_Gen3,`<k>`(inj{Stmt,KItem}(`return_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp`(inj{Val,Exp}(V)))~>_Gen0),`<control>`(`<fstack>`(`_List_`(`ListItem`(`(_,_,_,_)_SIMPLE-TYPED-DYNAMIC_KItem_Type_Map_K_ControlCellFragment`(T',Env,K,`<control>-fragment`(noFstackCell(.KList),inj{XstackCell,XstackCellOpt}(C),noReturnTypeCell(.KList)))),_DotVar4)),_Gen1,`<returnType>`(T)),`<env>`(_Gen2),_Gen4)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen3,`<thread>`(_Gen3,`<k>`(inj{Val,KItem}(V)~>K),`<control>`(`<fstack>`(`_List_`(`.List`(.KList),_DotVar4)),C,`<returnType>`(T')),`<env>`(Env),_Gen4)),_DotVar2)),_Gen5,_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11),_DotVar0) requires `_==K_`(inj{Type,KItem}(`typeOf(_)_SIMPLE-TYPED-DYNAMIC_Type_K`(inj{Val,KItem}(V))),inj{Type,KItem}(T)) ensures #token("true","Bool") [UNIQUE_ID(11ef6fa1926093f947f9ebb2f3a7955df7cd3ef982a63cd2396ccb3c93084655), org.kframework.attributes.Location(Location(212,8,219,25)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "when" Bool [klabel(#ruleRequires), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen3:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen3:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblreturn'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(inj{SortVal{}, SortExp{}}(VarV:SortVal{}))),Var'Unds'Gen0:SortK{})),Lbl'-LT-'control'-GT-'{}(Lbl'-LT-'fstack'-GT-'{}(Lbl'Unds'List'Unds'{}(LblListItem{}(Lbl'LParUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type'Unds'Map'Unds'K'Unds'ControlCellFragment{}(VarT'Apos':SortType{},VarEnv:SortMap{},VarK:SortK{},Lbl'-LT-'control'-GT-'-fragment{}(LblnoFstackCell{}(),inj{SortXstackCell{}, SortXstackCellOpt{}}(VarC:SortXstackCell{}),LblnoReturnTypeCell{}()))),Var'Unds'DotVar4:SortList{})),Var'Unds'Gen1:SortXstackCell{},Lbl'-LT-'returnType'-GT-'{}(VarT:SortType{})),Lbl'-LT-'env'-GT-'{}(Var'Unds'Gen2:SortMap{}),Var'Unds'Gen4:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen5:SortGenvCell{},Var'Unds'Gen6:SortStoreCell{},Var'Unds'Gen7:SortBusyCell{},Var'Unds'Gen8:SortTerminatedCell{},Var'Unds'Gen9:SortInputCell{},Var'Unds'Gen10:SortOutputCell{},Var'Unds'Gen11:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortType{}, SortKItem{}}(LbltypeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Type'Unds'K{}(kseq{}(inj{SortVal{}, SortKItem{}}(VarV:SortVal{}),dotk{}()))),dotk{}()),kseq{}(inj{SortType{}, SortKItem{}}(VarT:SortType{}),dotk{}())),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen3:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen3:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortVal{}, SortKItem{}}(VarV:SortVal{}),VarK:SortK{})),Lbl'-LT-'control'-GT-'{}(Lbl'-LT-'fstack'-GT-'{}(Lbl'Unds'List'Unds'{}(Lbl'Stop'List{}(),Var'Unds'DotVar4:SortList{})),VarC:SortXstackCell{},Lbl'-LT-'returnType'-GT-'{}(VarT'Apos':SortType{})),Lbl'-LT-'env'-GT-'{}(VarEnv:SortMap{}),Var'Unds'Gen4:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen5:SortGenvCell{},Var'Unds'Gen6:SortStoreCell{},Var'Unds'Gen7:SortBusyCell{},Var'Unds'Gen8:SortTerminatedCell{},Var'Unds'Gen9:SortInputCell{},Var'Unds'Gen10:SortOutputCell{},Var'Unds'Gen11:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("11ef6fa1926093f947f9ebb2f3a7955df7cd3ef982a63cd2396ccb3c93084655"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(212,8,219,25)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"when\" Bool [klabel(#ruleRequires), symbol]")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen3,`<thread>`(_Gen3,`<k>`(`popx_SIMPLE-TYPED-DYNAMIC_KItem`(.KList)~>_DotVar4),`<control>`(_Gen1,`<xstack>`(`_List_`(`ListItem`(_Gen0),_DotVar6)),_Gen2),_Gen4,_Gen5)),_DotVar2)),_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11,_Gen12),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen3,`<thread>`(_Gen3,`<k>`(_DotVar4),`<control>`(_Gen1,`<xstack>`(`_List_`(`.List`(.KList),_DotVar6)),_Gen2),_Gen4,_Gen5)),_DotVar2)),_Gen6,_Gen7,_Gen8,_Gen9,_Gen10,_Gen11,_Gen12),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(316339680be22ee5f36a9e92d33edaad636816ae8468aa39070ee29fe0789ea0), org.kframework.attributes.Location(Location(258,8,259,50)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen3:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen3:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(Lblpopx'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}(),Var'Unds'DotVar4:SortK{})),Lbl'-LT-'control'-GT-'{}(Var'Unds'Gen1:SortFstackCell{},Lbl'-LT-'xstack'-GT-'{}(Lbl'Unds'List'Unds'{}(LblListItem{}(Var'Unds'Gen0:SortKItem{}),Var'Unds'DotVar6:SortList{})),Var'Unds'Gen2:SortReturnTypeCell{}),Var'Unds'Gen4:SortEnvCell{},Var'Unds'Gen5:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen6:SortGenvCell{},Var'Unds'Gen7:SortStoreCell{},Var'Unds'Gen8:SortBusyCell{},Var'Unds'Gen9:SortTerminatedCell{},Var'Unds'Gen10:SortInputCell{},Var'Unds'Gen11:SortOutputCell{},Var'Unds'Gen12:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen3:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen3:SortIdCell{},Lbl'-LT-'k'-GT-'{}(Var'Unds'DotVar4:SortK{}),Lbl'-LT-'control'-GT-'{}(Var'Unds'Gen1:SortFstackCell{},Lbl'-LT-'xstack'-GT-'{}(Lbl'Unds'List'Unds'{}(Lbl'Stop'List{}(),Var'Unds'DotVar6:SortList{})),Var'Unds'Gen2:SortReturnTypeCell{}),Var'Unds'Gen4:SortEnvCell{},Var'Unds'Gen5:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen6:SortGenvCell{},Var'Unds'Gen7:SortStoreCell{},Var'Unds'Gen8:SortBusyCell{},Var'Unds'Gen9:SortTerminatedCell{},Var'Unds'Gen10:SortInputCell{},Var'Unds'Gen11:SortOutputCell{},Var'Unds'Gen12:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("316339680be22ee5f36a9e92d33edaad636816ae8468aa39070ee29fe0789ea0"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(258,8,259,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen7,`<thread>`(_Gen7,`<k>`(inj{Stmt,KItem}(`throw_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp`(inj{Val,Exp}(V)))~>_Gen0),`<control>`(_Gen3,`<xstack>`(`_List_`(`ListItem`(`(_,_,_,_,_)_SIMPLE-TYPED-DYNAMIC_KItem_Param_Stmt_K_Map_ControlCellFragment`(`___SIMPLE-TYPED-DYNAMIC-SYNTAX_Param_Type_Id`(T,X),S2,K,Env,`<control>-fragment`(inj{FstackCell,FstackCellOpt}(_Gen5),noXstackCell(.KList),inj{ReturnTypeCell,ReturnTypeCellOpt}(_Gen6)))),_DotVar4)),_Gen4),`<env>`(_Gen2),_Gen8)),_DotVar2)),_Gen9,_Gen10,_Gen11,_Gen12,_Gen13,_Gen14,_Gen15),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen7,`<thread>`(_Gen7,`<k>`(inj{Block,KItem}(`{_}_SIMPLE-TYPED-DYNAMIC-SYNTAX_Block_Stmt`(`___SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Stmt_Stmt`(`__;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Type_Exps`(T,`_,__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exps_Exp_Exps`(`_=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(inj{Id,Exp}(X),inj{Val,Exp}(V)),inj{Vals,Exps}(`.List{"_,__SIMPLE-TYPED-DYNAMIC-SYNTAX_Vals_Val_Vals"}_Vals`(.KList)))),S2)))~>K),`<control>`(_Gen5,`<xstack>`(`_List_`(`.List`(.KList),_DotVar4)),_Gen6),`<env>`(Env),_Gen8)),_DotVar2)),_Gen9,_Gen10,_Gen11,_Gen12,_Gen13,_Gen14,_Gen15),_DotVar0) requires `_==K_`(inj{Type,KItem}(`typeOf(_)_SIMPLE-TYPED-DYNAMIC_Type_K`(inj{Val,KItem}(V))),inj{Type,KItem}(T)) ensures #token("true","Bool") [UNIQUE_ID(6bf04da97015e3562da2424731d2bf7bec618dd82401d07ced1ecf3f6265a822), org.kframework.attributes.Location(Location(261,8,267,28)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "when" Bool [klabel(#ruleRequires), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen7:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen7:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(inj{SortVal{}, SortExp{}}(VarV:SortVal{}))),Var'Unds'Gen0:SortK{})),Lbl'-LT-'control'-GT-'{}(Var'Unds'Gen3:SortFstackCell{},Lbl'-LT-'xstack'-GT-'{}(Lbl'Unds'List'Unds'{}(LblListItem{}(Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Param'Unds'Stmt'Unds'K'Unds'Map'Unds'ControlCellFragment{}(Lbl'UndsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Param'Unds'Type'Unds'Id{}(VarT:SortType{},VarX:SortId{}),VarS2:SortStmt{},VarK:SortK{},VarEnv:SortMap{},Lbl'-LT-'control'-GT-'-fragment{}(inj{SortFstackCell{}, SortFstackCellOpt{}}(Var'Unds'Gen5:SortFstackCell{}),LblnoXstackCell{}(),inj{SortReturnTypeCell{}, SortReturnTypeCellOpt{}}(Var'Unds'Gen6:SortReturnTypeCell{})))),Var'Unds'DotVar4:SortList{})),Var'Unds'Gen4:SortReturnTypeCell{}),Lbl'-LT-'env'-GT-'{}(Var'Unds'Gen2:SortMap{}),Var'Unds'Gen8:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen9:SortGenvCell{},Var'Unds'Gen10:SortStoreCell{},Var'Unds'Gen11:SortBusyCell{},Var'Unds'Gen12:SortTerminatedCell{},Var'Unds'Gen13:SortInputCell{},Var'Unds'Gen14:SortOutputCell{},Var'Unds'Gen15:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortType{}, SortKItem{}}(LbltypeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Type'Unds'K{}(kseq{}(inj{SortVal{}, SortKItem{}}(VarV:SortVal{}),dotk{}()))),dotk{}()),kseq{}(inj{SortType{}, SortKItem{}}(VarT:SortType{}),dotk{}())),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen7:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen7:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlock{}, SortKItem{}}(Lbl'LBraUndsRBraUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Block'Unds'Stmt{}(Lbl'UndsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(Lbl'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps{}(VarT:SortType{},Lbl'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortId{}, SortExp{}}(VarX:SortId{}),inj{SortVal{}, SortExp{}}(VarV:SortVal{})),inj{SortVals{}, SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}()))),VarS2:SortStmt{}))),VarK:SortK{})),Lbl'-LT-'control'-GT-'{}(Var'Unds'Gen5:SortFstackCell{},Lbl'-LT-'xstack'-GT-'{}(Lbl'Unds'List'Unds'{}(Lbl'Stop'List{}(),Var'Unds'DotVar4:SortList{})),Var'Unds'Gen6:SortReturnTypeCell{}),Lbl'-LT-'env'-GT-'{}(VarEnv:SortMap{}),Var'Unds'Gen8:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen9:SortGenvCell{},Var'Unds'Gen10:SortStoreCell{},Var'Unds'Gen11:SortBusyCell{},Var'Unds'Gen12:SortTerminatedCell{},Var'Unds'Gen13:SortInputCell{},Var'Unds'Gen14:SortOutputCell{},Var'Unds'Gen15:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("6bf04da97015e3562da2424731d2bf7bec618dd82401d07ced1ecf3f6265a822"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(261,8,267,28)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"when\" Bool [klabel(#ruleRequires), symbol]")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen9,`<thread>`(_Gen9,`<k>`(inj{Stmt,KItem}(`throw_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp`(inj{Val,Exp}(V)))~>_Gen0),`<control>`(_Gen5,`<xstack>`(`_List_`(`ListItem`(`(_,_,_,_,_)_SIMPLE-TYPED-DYNAMIC_KItem_Param_Stmt_K_Map_ControlCellFragment`(`___SIMPLE-TYPED-DYNAMIC-SYNTAX_Param_Type_Id`(T,_Gen1),_Gen2,K,Env,`<control>-fragment`(inj{FstackCell,FstackCellOpt}(_Gen7),noXstackCell(.KList),inj{ReturnTypeCell,ReturnTypeCellOpt}(_Gen8)))),_DotVar4)),_Gen6),`<env>`(_Gen4),_Gen10)),_DotVar2)),_Gen11,_Gen12,_Gen13,_Gen14,_Gen15,_Gen16,_Gen17),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen9,`<thread>`(_Gen9,`<k>`(inj{Stmt,KItem}(`throw_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp`(inj{Val,Exp}(V)))~>K),`<control>`(_Gen7,`<xstack>`(`_List_`(`.List`(.KList),_DotVar4)),_Gen8),`<env>`(Env),_Gen10)),_DotVar2)),_Gen11,_Gen12,_Gen13,_Gen14,_Gen15,_Gen16,_Gen17),_DotVar0) requires `_=/=K_`(inj{Type,KItem}(`typeOf(_)_SIMPLE-TYPED-DYNAMIC_Type_K`(inj{Val,KItem}(V))),inj{Type,KItem}(T)) ensures #token("true","Bool") [UNIQUE_ID(c3a5128bd9a036ead72d369a2cba88662d30cf72c6cee62cc6335a24fa659548), org.kframework.attributes.Location(Location(269,8,275,28)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "when" Bool [klabel(#ruleRequires), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen9:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen9:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(inj{SortVal{}, SortExp{}}(VarV:SortVal{}))),Var'Unds'Gen0:SortK{})),Lbl'-LT-'control'-GT-'{}(Var'Unds'Gen5:SortFstackCell{},Lbl'-LT-'xstack'-GT-'{}(Lbl'Unds'List'Unds'{}(LblListItem{}(Lbl'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Param'Unds'Stmt'Unds'K'Unds'Map'Unds'ControlCellFragment{}(Lbl'UndsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Param'Unds'Type'Unds'Id{}(VarT:SortType{},Var'Unds'Gen1:SortId{}),Var'Unds'Gen2:SortStmt{},VarK:SortK{},VarEnv:SortMap{},Lbl'-LT-'control'-GT-'-fragment{}(inj{SortFstackCell{}, SortFstackCellOpt{}}(Var'Unds'Gen7:SortFstackCell{}),LblnoXstackCell{}(),inj{SortReturnTypeCell{}, SortReturnTypeCellOpt{}}(Var'Unds'Gen8:SortReturnTypeCell{})))),Var'Unds'DotVar4:SortList{})),Var'Unds'Gen6:SortReturnTypeCell{}),Lbl'-LT-'env'-GT-'{}(Var'Unds'Gen4:SortMap{}),Var'Unds'Gen10:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen11:SortGenvCell{},Var'Unds'Gen12:SortStoreCell{},Var'Unds'Gen13:SortBusyCell{},Var'Unds'Gen14:SortTerminatedCell{},Var'Unds'Gen15:SortInputCell{},Var'Unds'Gen16:SortOutputCell{},Var'Unds'Gen17:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'UndsEqlsSlshEqls'K'Unds'{}(kseq{}(inj{SortType{}, SortKItem{}}(LbltypeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Type'Unds'K{}(kseq{}(inj{SortVal{}, SortKItem{}}(VarV:SortVal{}),dotk{}()))),dotk{}()),kseq{}(inj{SortType{}, SortKItem{}}(VarT:SortType{}),dotk{}())),
        \dv{SortBool{}}("true"))),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen9:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen9:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblthrow'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(inj{SortVal{}, SortExp{}}(VarV:SortVal{}))),VarK:SortK{})),Lbl'-LT-'control'-GT-'{}(Var'Unds'Gen7:SortFstackCell{},Lbl'-LT-'xstack'-GT-'{}(Lbl'Unds'List'Unds'{}(Lbl'Stop'List{}(),Var'Unds'DotVar4:SortList{})),Var'Unds'Gen8:SortReturnTypeCell{}),Lbl'-LT-'env'-GT-'{}(VarEnv:SortMap{}),Var'Unds'Gen10:SortHoldsCell{})),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen11:SortGenvCell{},Var'Unds'Gen12:SortStoreCell{},Var'Unds'Gen13:SortBusyCell{},Var'Unds'Gen14:SortTerminatedCell{},Var'Unds'Gen15:SortInputCell{},Var'Unds'Gen16:SortOutputCell{},Var'Unds'Gen17:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("c3a5128bd9a036ead72d369a2cba88662d30cf72c6cee62cc6335a24fa659548"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(269,8,275,28)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"when\" Bool [klabel(#ruleRequires), symbol]")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`ThreadCellMapItem`(`<id>`(T),`<thread>`(`<id>`(T),`<k>`(.K),_Gen0,_Gen1,`<holds>`(H))),_DotVar3)),_Gen2,_Gen3,`<busy>`(Busy),`<terminated>`(_DotVar2),_Gen4,_Gen5,_Gen6),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(_DotVar3),_Gen2,_Gen3,`<busy>`(`Set:difference`(Busy,`keys(_)_MAP_Set_Map`(H))),`<terminated>`(`_Set_`(`SetItem`(inj{Int,KItem}(T)),_DotVar2)),_Gen4,_Gen5,_Gen6),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(85d175a002a5ed59b603970eae9644d76850a63920b06689c202db5552be464e), org.kframework.attributes.Location(Location(287,9,289,60)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Lbl'-LT-'id'-GT-'{}(VarT:SortInt{}),Lbl'-LT-'thread'-GT-'{}(Lbl'-LT-'id'-GT-'{}(VarT:SortInt{}),Lbl'-LT-'k'-GT-'{}(dotk{}()),Var'Unds'Gen0:SortControlCell{},Var'Unds'Gen1:SortEnvCell{},Lbl'-LT-'holds'-GT-'{}(VarH:SortMap{}))),Var'Unds'DotVar3:SortThreadCellMap{})),Var'Unds'Gen2:SortGenvCell{},Var'Unds'Gen3:SortStoreCell{},Lbl'-LT-'busy'-GT-'{}(VarBusy:SortSet{}),Lbl'-LT-'terminated'-GT-'{}(Var'Unds'DotVar2:SortSet{}),Var'Unds'Gen4:SortInputCell{},Var'Unds'Gen5:SortOutputCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Var'Unds'DotVar3:SortThreadCellMap{}),Var'Unds'Gen2:SortGenvCell{},Var'Unds'Gen3:SortStoreCell{},Lbl'-LT-'busy'-GT-'{}(LblSet'Coln'difference{}(VarBusy:SortSet{},Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map{}(VarH:SortMap{}))),Lbl'-LT-'terminated'-GT-'{}(Lbl'Unds'Set'Unds'{}(LblSetItem{}(inj{SortInt{}, SortKItem{}}(VarT:SortInt{})),Var'Unds'DotVar2:SortSet{})),Var'Unds'Gen4:SortInputCell{},Var'Unds'Gen5:SortOutputCell{},Var'Unds'Gen6:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("85d175a002a5ed59b603970eae9644d76850a63920b06689c202db5552be464e"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(287,9,289,60)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(inj{Stmt,KItem}(`rendezvous_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp`(inj{Val,Exp}(V)))~>_DotVar4),_Gen1,_Gen2,_Gen3)),`ThreadCellMapItem`(_Gen4,`<thread>`(_Gen4,`<k>`(inj{Stmt,KItem}(`rendezvous_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp`(inj{Val,Exp}(V)))~>_DotVar6),_Gen5,_Gen6,_Gen7))),_DotVar2)),_Gen8,_Gen9,_Gen10,_Gen11,_Gen12,_Gen13,_Gen14),_DotVar0)=>`<generatedTop>`(`<T>`(`<threads>`(`_ThreadCellMap_`(`_ThreadCellMap_`(`ThreadCellMapItem`(_Gen0,`<thread>`(_Gen0,`<k>`(_DotVar4),_Gen1,_Gen2,_Gen3)),`ThreadCellMapItem`(_Gen4,`<thread>`(_Gen4,`<k>`(_DotVar6),_Gen5,_Gen6,_Gen7))),_DotVar2)),_Gen8,_Gen9,_Gen10,_Gen11,_Gen12,_Gen13,_Gen14),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4e19fdb4553d7e6d0cd9bd4e92507050b7f1ffadfed822025fa910f1dc1015ee), org.kframework.attributes.Location(Location(309,9,310,39)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), rendezvous]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
        Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(inj{SortVal{}, SortExp{}}(VarV:SortVal{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),LblThreadCellMapItem{}(Var'Unds'Gen4:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen4:SortIdCell{},Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblrendezvous'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(inj{SortVal{}, SortExp{}}(VarV:SortVal{}))),Var'Unds'DotVar6:SortK{})),Var'Unds'Gen5:SortControlCell{},Var'Unds'Gen6:SortEnvCell{},Var'Unds'Gen7:SortHoldsCell{}))),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen8:SortGenvCell{},Var'Unds'Gen9:SortStoreCell{},Var'Unds'Gen10:SortBusyCell{},Var'Unds'Gen11:SortTerminatedCell{},Var'Unds'Gen12:SortInputCell{},Var'Unds'Gen13:SortOutputCell{},Var'Unds'Gen14:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}),
        \top{SortGeneratedTopCell{}}()),
      \and{SortGeneratedTopCell{}} (
      Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'threads'-GT-'{}(Lbl'Unds'ThreadCellMap'Unds'{}(Lbl'Unds'ThreadCellMap'Unds'{}(LblThreadCellMapItem{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen0:SortIdCell{},Lbl'-LT-'k'-GT-'{}(Var'Unds'DotVar4:SortK{}),Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})),LblThreadCellMapItem{}(Var'Unds'Gen4:SortIdCell{},Lbl'-LT-'thread'-GT-'{}(Var'Unds'Gen4:SortIdCell{},Lbl'-LT-'k'-GT-'{}(Var'Unds'DotVar6:SortK{}),Var'Unds'Gen5:SortControlCell{},Var'Unds'Gen6:SortEnvCell{},Var'Unds'Gen7:SortHoldsCell{}))),Var'Unds'DotVar2:SortThreadCellMap{})),Var'Unds'Gen8:SortGenvCell{},Var'Unds'Gen9:SortStoreCell{},Var'Unds'Gen10:SortBusyCell{},Var'Unds'Gen11:SortTerminatedCell{},Var'Unds'Gen12:SortInputCell{},Var'Unds'Gen13:SortOutputCell{},Var'Unds'Gen14:SortNextLocCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{}), \top{SortGeneratedTopCell{}}()))
  [UNIQUE'Unds'ID{}("4e19fdb4553d7e6d0cd9bd4e92507050b7f1ffadfed822025fa910f1dc1015ee"), group{}("rendezvous"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(309,9,310,39)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `Bool2String(_)_STRING-COMMON_String_Bool`(#token("false","Bool"))=>#token("\"false\"","String") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(cca4780e4e7660055f781b9643f3125234a0f4f08ba76cacf8e5a18fe7fc999f), org.kframework.attributes.Location(Location(1764,8,1764,37)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("false")
          ),
          \top{R} ()
        )),
    \equals{SortString{},R} (
      LblBool2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Bool{}(X0:SortBool{}),
     \and{SortString{}} (
       \dv{SortString{}}("false"),
        \top{SortString{}}())))
  [UNIQUE'Unds'ID{}("cca4780e4e7660055f781b9643f3125234a0f4f08ba76cacf8e5a18fe7fc999f"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1764,8,1764,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `Bool2String(_)_STRING-COMMON_String_Bool`(#token("true","Bool"))=>#token("\"true\"","String") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(365df37345a5a44ac061f8741369c7bd74a49f0f6e7b716be0374806dd1add3d), org.kframework.attributes.Location(Location(1763,8,1763,36)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("true")
          ),
          \top{R} ()
        )),
    \equals{SortString{},R} (
      LblBool2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Bool{}(X0:SortBool{}),
     \and{SortString{}} (
       \dv{SortString{}}("true"),
        \top{SortString{}}())))
  [UNIQUE'Unds'ID{}("365df37345a5a44ac061f8741369c7bd74a49f0f6e7b716be0374806dd1add3d"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1763,8,1763,36)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `String2Bool(_)_STRING-COMMON_Bool_String`(#token("\"false\"","String"))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b73b5c8e0ae45020f2b9b8170d366691fee01a63763b79653a2075703ec4e835), org.kframework.attributes.Location(Location(1770,8,1770,37)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            \dv{SortString{}}("false")
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblString2Bool'LParUndsRParUnds'STRING-COMMON'Unds'Bool'Unds'String{}(X0:SortString{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("b73b5c8e0ae45020f2b9b8170d366691fee01a63763b79653a2075703ec4e835"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1770,8,1770,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `String2Bool(_)_STRING-COMMON_Bool_String`(#token("\"true\"","String"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(27a5d1d7872d61f82556a4e44bda13846dde7dc2d9c54304d7858de9a8b9d6b8), org.kframework.attributes.Location(Location(1769,8,1769,36)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            \dv{SortString{}}("true")
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblString2Bool'LParUndsRParUnds'STRING-COMMON'Unds'Bool'Unds'String{}(X0:SortString{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("27a5d1d7872d61f82556a4e44bda13846dde7dc2d9c54304d7858de9a8b9d6b8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1769,8,1769,36)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `ThreadCellMapKey`(`<thread>`(Key,_Gen0,_Gen1,_Gen2,_Gen3))=>Key requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e802d3da416687d81f220c032238ab3b9417ad82017ade7e981e5884ed19e52f)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortThreadCell{}, R} (
            X0:SortThreadCell{},
            Lbl'-LT-'thread'-GT-'{}(VarKey:SortIdCell{},Var'Unds'Gen0:SortKCell{},Var'Unds'Gen1:SortControlCell{},Var'Unds'Gen2:SortEnvCell{},Var'Unds'Gen3:SortHoldsCell{})
          ),
          \top{R} ()
        )),
    \equals{SortIdCell{},R} (
      LblThreadCellMapKey{}(X0:SortThreadCell{}),
     \and{SortIdCell{}} (
       VarKey:SortIdCell{},
        \top{SortIdCell{}}())))
  [UNIQUE'Unds'ID{}("e802d3da416687d81f220c032238ab3b9417ad82017ade7e981e5884ed19e52f")]

// rule `_..._|->__SIMPLE-TYPED-DYNAMIC_Map_Int_Int_K`(N,M,K #as _Gen0)=>`_Map_`(`_|->_`(inj{Int,KItem}(N),K),`_..._|->__SIMPLE-TYPED-DYNAMIC_Map_Int_Int_K`(`_+Int_`(N,#token("1","Int")),M,_Gen0)) requires `_<=Int_`(N,M) ensures #token("true","Bool") [UNIQUE_ID(d7893d94c003efa57ddfefd45a761c9056acc440bac5ee90c1ce72601c5c291b), org.kframework.attributes.Location(Location(345,8,345,67)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "when" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-LT-Eqls'Int'Unds'{}(VarN:SortInt{},VarM:SortInt{}),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarN:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarM:SortInt{}
          ),\and{R} (
          \in{SortK{}, R} (
            X2:SortK{},
            \and{SortK{}}(kseq{}(VarK:SortKItem{},dotk{}()),Var'Unds'Gen0:SortK{})
          ),
          \top{R} ()
        )))),
    \equals{SortMap{},R} (
      Lbl'UndsStopStopStopUndsPipe'-'-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC'Unds'Map'Unds'Int'Unds'Int'Unds'K{}(X0:SortInt{},X1:SortInt{},X2:SortK{}),
     \and{SortMap{}} (
       Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(VarN:SortInt{}),VarK:SortKItem{}),Lbl'UndsStopStopStopUndsPipe'-'-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC'Unds'Map'Unds'Int'Unds'Int'Unds'K{}(Lbl'UndsPlus'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("1")),VarM:SortInt{},Var'Unds'Gen0:SortK{})),
        \top{SortMap{}}())))
  [UNIQUE'Unds'ID{}("d7893d94c003efa57ddfefd45a761c9056acc440bac5ee90c1ce72601c5c291b"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(345,8,345,67)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"when\" Bool [klabel(#ruleRequires), symbol]")]

// rule `_..._|->__SIMPLE-TYPED-DYNAMIC_Map_Int_Int_K`(N,M,_Gen0)=>`.Map`(.KList) requires `_>Int_`(N,M) ensures #token("true","Bool") [UNIQUE_ID(bf2e8d2f8ff4f5fc821491f4c4d9a0c6ebbc0a067a199c184147891cc7cd79da), org.kframework.attributes.Location(Location(344,8,344,42)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "when" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-GT-'Int'Unds'{}(VarN:SortInt{},VarM:SortInt{}),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarN:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarM:SortInt{}
          ),\and{R} (
          \in{SortK{}, R} (
            X2:SortK{},
            Var'Unds'Gen0:SortK{}
          ),
          \top{R} ()
        )))),
    \equals{SortMap{},R} (
      Lbl'UndsStopStopStopUndsPipe'-'-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC'Unds'Map'Unds'Int'Unds'Int'Unds'K{}(X0:SortInt{},X1:SortInt{},X2:SortK{}),
     \and{SortMap{}} (
       Lbl'Stop'Map{}(),
        \top{SortMap{}}())))
  [UNIQUE'Unds'ID{}("bf2e8d2f8ff4f5fc821491f4c4d9a0c6ebbc0a067a199c184147891cc7cd79da"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(344,8,344,42)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"when\" Bool [klabel(#ruleRequires), symbol]")]

// rule `_<=String__STRING-COMMON_Bool_String_String`(S1,S2)=>`notBool_`(`_<String__STRING-COMMON_Bool_String_String`(S2,S1)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9e50fb4dcba1212ee863c170298cb8b555f39fb3b4bcb649f3d1d8e321accc80), org.kframework.attributes.Location(Location(1863,8,1863,63)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarS1:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarS2:SortString{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds-LT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(X0:SortString{},X1:SortString{}),
     \and{SortBool{}} (
       LblnotBool'Unds'{}(Lbl'Unds-LT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(VarS2:SortString{},VarS1:SortString{})),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("9e50fb4dcba1212ee863c170298cb8b555f39fb3b4bcb649f3d1d8e321accc80"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1863,8,1863,63)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_<_>_SIMPLE-TYPED-DYNAMIC_Type_Type_Vals`(T,`.List{"_,__SIMPLE-TYPED-DYNAMIC-SYNTAX_Vals_Val_Vals"}_Vals`(.KList))=>T requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2dd34e69a88044bdfdfb9676471edfcd373b5c5efba4887c8a4ebb956d3e3a3f), org.kframework.attributes.Location(Location(340,8,340,26)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortType{}, R} (
            X0:SortType{},
            VarT:SortType{}
          ),\and{R} (
          \in{SortVals{}, R} (
            X1:SortVals{},
            Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}()
          ),
          \top{R} ()
        ))),
    \equals{SortType{},R} (
      Lbl'Unds-LT-Unds-GT-Unds'SIMPLE-TYPED-DYNAMIC'Unds'Type'Unds'Type'Unds'Vals{}(X0:SortType{},X1:SortVals{}),
     \and{SortType{}} (
       VarT:SortType{},
        \top{SortType{}}())))
  [UNIQUE'Unds'ID{}("2dd34e69a88044bdfdfb9676471edfcd373b5c5efba4887c8a4ebb956d3e3a3f"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(340,8,340,26)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_<_>_SIMPLE-TYPED-DYNAMIC_Type_Type_Vals`(T,`_,__SIMPLE-TYPED-DYNAMIC-SYNTAX_Vals_Val_Vals`(_Gen0,Vs))=>`_<_>_SIMPLE-TYPED-DYNAMIC_Type_Type_Vals`(`_[]_SIMPLE-TYPED-DYNAMIC-SYNTAX_Type_Type`(T),Vs) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(79cee4f60bf1885c538ec6a53568ffe816fa2d573845471c05cfdebf8c997e32), org.kframework.attributes.Location(Location(339,8,339,36)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortType{}, R} (
            X0:SortType{},
            VarT:SortType{}
          ),\and{R} (
          \in{SortVals{}, R} (
            X1:SortVals{},
            Lbl'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals{}(Var'Unds'Gen0:SortVal{},VarVs:SortVals{})
          ),
          \top{R} ()
        ))),
    \equals{SortType{},R} (
      Lbl'Unds-LT-Unds-GT-Unds'SIMPLE-TYPED-DYNAMIC'Unds'Type'Unds'Type'Unds'Vals{}(X0:SortType{},X1:SortVals{}),
     \and{SortType{}} (
       Lbl'Unds-LT-Unds-GT-Unds'SIMPLE-TYPED-DYNAMIC'Unds'Type'Unds'Type'Unds'Vals{}(Lbl'UndsLSqBRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Type'Unds'Type{}(VarT:SortType{}),VarVs:SortVals{}),
        \top{SortType{}}())))
  [UNIQUE'Unds'ID{}("79cee4f60bf1885c538ec6a53568ffe816fa2d573845471c05cfdebf8c997e32"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(339,8,339,36)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_=/=Bool_`(B1,B2)=>`notBool_`(`_==Bool_`(B1,B2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(31fe72efcfddcd8588a11d9d10c1b1a9f96ae3da46b647d4cb9d1e8b1bd1654f), org.kframework.attributes.Location(Location(1150,8,1150,57)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarB1:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarB2:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       LblnotBool'Unds'{}(Lbl'UndsEqlsEqls'Bool'Unds'{}(VarB1:SortBool{},VarB2:SortBool{})),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("31fe72efcfddcd8588a11d9d10c1b1a9f96ae3da46b647d4cb9d1e8b1bd1654f"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1150,8,1150,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_=/=Int_`(I1,I2)=>`notBool_`(`_==Int_`(I1,I2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4de6e05b11cdbed7ef5cb4c952127924661af4744c1e495370e1c8a962ba7be3), org.kframework.attributes.Location(Location(1429,8,1429,53)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'UndsEqlsSlshEqls'Int'Unds'{}(X0:SortInt{},X1:SortInt{}),
     \and{SortBool{}} (
       LblnotBool'Unds'{}(Lbl'UndsEqlsEqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("4de6e05b11cdbed7ef5cb4c952127924661af4744c1e495370e1c8a962ba7be3"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1429,8,1429,53)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_=/=K_`(K1,K2)=>`notBool_`(`_==K_`(K1,K2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(bccaba7335e4cd77501a0667f2f7b3eb4a2105d5f60d804915dd4b1b08902c0c), org.kframework.attributes.Location(Location(2302,8,2302,45)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK1:SortK{}
          ),\and{R} (
          \in{SortK{}, R} (
            X1:SortK{},
            VarK2:SortK{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'UndsEqlsSlshEqls'K'Unds'{}(X0:SortK{},X1:SortK{}),
     \and{SortBool{}} (
       LblnotBool'Unds'{}(Lbl'UndsEqlsEqls'K'Unds'{}(VarK1:SortK{},VarK2:SortK{})),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("bccaba7335e4cd77501a0667f2f7b3eb4a2105d5f60d804915dd4b1b08902c0c"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2302,8,2302,45)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_=/=String__STRING-COMMON_Bool_String_String`(S1,S2)=>`notBool_`(`_==String__STRING-COMMON_Bool_String_String`(S1,S2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f390a9b650f3de0e3a93773a46e65aae3decdeb2a10906058f204f031681c9b7), org.kframework.attributes.Location(Location(1843,8,1843,65)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarS1:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarS2:SortString{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(X0:SortString{},X1:SortString{}),
     \and{SortBool{}} (
       LblnotBool'Unds'{}(Lbl'UndsEqlsEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(VarS1:SortString{},VarS2:SortString{})),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("f390a9b650f3de0e3a93773a46e65aae3decdeb2a10906058f204f031681c9b7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1843,8,1843,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_>=String__STRING-COMMON_Bool_String_String`(S1,S2)=>`notBool_`(`_<String__STRING-COMMON_Bool_String_String`(S1,S2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b376ffb0925555ed27696d73fc8fe43306e2005e4cf6ad819e860958992f9f17), org.kframework.attributes.Location(Location(1865,8,1865,63)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarS1:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarS2:SortString{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds-GT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(X0:SortString{},X1:SortString{}),
     \and{SortBool{}} (
       LblnotBool'Unds'{}(Lbl'Unds-LT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(VarS1:SortString{},VarS2:SortString{})),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("b376ffb0925555ed27696d73fc8fe43306e2005e4cf6ad819e860958992f9f17"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1865,8,1865,63)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_>String__STRING-COMMON_Bool_String_String`(S1,S2)=>`_<String__STRING-COMMON_Bool_String_String`(S2,S1) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8e5353c0a58491f8613ad7a35d0833206c342df0c91773e42485e52f4dad0cd0), org.kframework.attributes.Location(Location(1864,8,1864,52)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarS1:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarS2:SortString{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds-GT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(X0:SortString{},X1:SortString{}),
     \and{SortBool{}} (
       Lbl'Unds-LT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(VarS2:SortString{},VarS1:SortString{}),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("8e5353c0a58491f8613ad7a35d0833206c342df0c91773e42485e52f4dad0cd0"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1864,8,1864,52)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_[_]_SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exps`(inj{Val,Exp}(V) #as _Gen0,inj{Vals,Exps}(`_,__SIMPLE-TYPED-DYNAMIC-SYNTAX_Vals_Val_Vals`(inj{Int,Val}(N1) #as _Gen3,`_,__SIMPLE-TYPED-DYNAMIC-SYNTAX_Vals_Val_Vals`(inj{Int,Val}(N2),Vs) #as _Gen4)))=>`_[_]_SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exps`(`_[_]_SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exps`(_Gen0,inj{Vals,Exps}(`_,__SIMPLE-TYPED-DYNAMIC-SYNTAX_Vals_Val_Vals`(_Gen3,`.List{"_,__SIMPLE-TYPED-DYNAMIC-SYNTAX_Vals_Val_Vals"}_Vals`(.KList)))),inj{Vals,Exps}(_Gen4)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d06ab4363ea180d1cbb9c5c2c49841e578cfa70a9f5dcfe88fd95331b1418c55), anywhere, org.kframework.attributes.Location(Location(192,8,192,55)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortExp{}, R} (
            X0:SortExp{},
            \and{SortExp{}}(inj{SortVal{}, SortExp{}}(VarV:SortVal{}),Var'Unds'Gen0:SortExp{})
          ),\and{R} (
          \in{SortExps{}, R} (
            X1:SortExps{},
            inj{SortVals{}, SortExps{}}(Lbl'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals{}(\and{SortVal{}}(inj{SortInt{}, SortVal{}}(VarN1:SortInt{}),Var'Unds'Gen3:SortVal{}),\and{SortVals{}}(Lbl'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals{}(inj{SortInt{}, SortVal{}}(VarN2:SortInt{}),VarVs:SortVals{}),Var'Unds'Gen4:SortVals{})))
          ),
          \top{R} ()
        ))),
    \equals{SortExp{},R} (
      Lbl'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{},X1:SortExps{}),
     \and{SortExp{}} (
       Lbl'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Lbl'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Var'Unds'Gen0:SortExp{},inj{SortVals{}, SortExps{}}(Lbl'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals{}(Var'Unds'Gen3:SortVal{},Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}()))),inj{SortVals{}, SortExps{}}(Var'Unds'Gen4:SortVals{})),
        \top{SortExp{}}())))
  [UNIQUE'Unds'ID{}("d06ab4363ea180d1cbb9c5c2c49841e578cfa70a9f5dcfe88fd95331b1418c55"), anywhere{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(192,8,192,55)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_[_]_SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exps`(inj{Val,Exp}(`array(_,_,_)_SIMPLE-TYPED-DYNAMIC_Val_Type_Int_Int`(_Gen0,L,M)),inj{Vals,Exps}(`_,__SIMPLE-TYPED-DYNAMIC-SYNTAX_Vals_Val_Vals`(inj{Int,Val}(N),`.List{"_,__SIMPLE-TYPED-DYNAMIC-SYNTAX_Vals_Val_Vals"}_Vals`(.KList))))=>`lookup(_)_SIMPLE-TYPED-DYNAMIC_Exp_Int`(`_+Int_`(L,N)) requires `_andBool_`(`_>=Int_`(N,#token("0","Int")),`_<Int_`(N,M)) ensures #token("true","Bool") [UNIQUE_ID(f9ad7e7684185a45e43b1dc6dc3d0f149aaa01a12c67cf44b080261c6088d353), anywhere, org.kframework.attributes.Location(Location(196,8,197,36)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "when" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-GT-Eqls'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("0")),Lbl'Unds-LT-'Int'Unds'{}(VarN:SortInt{},VarM:SortInt{})),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortExp{}, R} (
            X0:SortExp{},
            inj{SortVal{}, SortExp{}}(Lblarray'LParUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Val'Unds'Type'Unds'Int'Unds'Int{}(Var'Unds'Gen0:SortType{},VarL:SortInt{},VarM:SortInt{}))
          ),\and{R} (
          \in{SortExps{}, R} (
            X1:SortExps{},
            inj{SortVals{}, SortExps{}}(Lbl'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals{}(inj{SortInt{}, SortVal{}}(VarN:SortInt{}),Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}()))
          ),
          \top{R} ()
        ))),
    \equals{SortExp{},R} (
      Lbl'UndsLSqBUndsRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{},X1:SortExps{}),
     \and{SortExp{}} (
       Lbllookup'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Exp'Unds'Int{}(Lbl'UndsPlus'Int'Unds'{}(VarL:SortInt{},VarN:SortInt{})),
        \top{SortExp{}}())))
  [UNIQUE'Unds'ID{}("f9ad7e7684185a45e43b1dc6dc3d0f149aaa01a12c67cf44b080261c6088d353"), anywhere{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(196,8,197,36)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"when\" Bool [klabel(#ruleRequires), symbol]")]

// rule `__;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Type_Exps`(T,`_,__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exps_Exp_Exps`(`_=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(inj{Id,Exp}(X) #as _Gen2,E) #as _Gen1,`.List{"_,__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exps_Exp_Exps"}_Exps`(.KList) #as _Gen3))=>`___SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Stmt_Stmt`(`__;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Type_Exps`(T,`_,__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exps_Exp_Exps`(_Gen2,_Gen3)),`_;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Exp`(_Gen1)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(48be0fb0b0d46285417c45a5459feb8c57d4b09505cfec3a3ef99f13fc4ae9c5), anywhere, org.kframework.attributes.Location(Location(73,8,73,39)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortType{}, R} (
            X0:SortType{},
            VarT:SortType{}
          ),\and{R} (
          \in{SortExps{}, R} (
            X1:SortExps{},
            Lbl'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(\and{SortExp{}}(Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}}(inj{SortId{}, SortExp{}}(VarX:SortId{}),Var'Unds'Gen2:SortExp{}),VarE:SortExp{}),Var'Unds'Gen1:SortExp{}),\and{SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps'QuotRBraUnds'Exps{}(),Var'Unds'Gen3:SortExps{}))
          ),
          \top{R} ()
        ))),
    \equals{SortStmt{},R} (
      Lbl'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps{}(X0:SortType{},X1:SortExps{}),
     \and{SortStmt{}} (
       Lbl'UndsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(Lbl'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps{}(VarT:SortType{},Lbl'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(Var'Unds'Gen2:SortExp{},Var'Unds'Gen3:SortExps{})),Lbl'UndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Var'Unds'Gen1:SortExp{})),
        \top{SortStmt{}}())))
  [UNIQUE'Unds'ID{}("48be0fb0b0d46285417c45a5459feb8c57d4b09505cfec3a3ef99f13fc4ae9c5"), anywhere{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(73,8,73,39)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `__;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Type_Exps`(T,`_,__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exps_Exp_Exps`(E1,`_,__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exps_Exp_Exps`(E2,Es) #as _Gen1))=>`___SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Stmt_Stmt`(`__;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Type_Exps`(T,`_,__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exps_Exp_Exps`(E1,`.List{"_,__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exps_Exp_Exps"}_Exps`(.KList))),`__;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Type_Exps`(T,_Gen1)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9c102e4709922a5f649432c4b363f1554c723d541bcab822747d3d048d9afbf2), anywhere, org.kframework.attributes.Location(Location(72,8,72,58)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortType{}, R} (
            X0:SortType{},
            VarT:SortType{}
          ),\and{R} (
          \in{SortExps{}, R} (
            X1:SortExps{},
            Lbl'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(VarE1:SortExp{},\and{SortExps{}}(Lbl'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(VarE2:SortExp{},VarEs:SortExps{}),Var'Unds'Gen1:SortExps{}))
          ),
          \top{R} ()
        ))),
    \equals{SortStmt{},R} (
      Lbl'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps{}(X0:SortType{},X1:SortExps{}),
     \and{SortStmt{}} (
       Lbl'UndsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(Lbl'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps{}(VarT:SortType{},Lbl'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(VarE1:SortExp{},Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps'QuotRBraUnds'Exps{}())),Lbl'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps{}(VarT:SortType{},Var'Unds'Gen1:SortExps{})),
        \top{SortStmt{}}())))
  [UNIQUE'Unds'ID{}("9c102e4709922a5f649432c4b363f1554c723d541bcab822747d3d048d9afbf2"), anywhere{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(72,8,72,58)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_andBool_`(#token("false","Bool") #as _Gen1,_Gen0)=>_Gen1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(61fbef33b3611f1cc2aaf3b5e8ddec4a0f434c557278c38461c65c8722743497), org.kframework.attributes.Location(Location(1123,8,1123,37)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \and{SortBool{}}(\dv{SortBool{}}("false"),Var'Unds'Gen1:SortBool{})
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'andBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       Var'Unds'Gen1:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("61fbef33b3611f1cc2aaf3b5e8ddec4a0f434c557278c38461c65c8722743497"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1123,8,1123,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_andBool_`(B,#token("true","Bool"))=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e8d4ca75a690151f99f8904b068db555782f5599b11230a9d0b97a71afb6fc98), org.kframework.attributes.Location(Location(1122,8,1122,37)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarB:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \dv{SortBool{}}("true")
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'andBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarB:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("e8d4ca75a690151f99f8904b068db555782f5599b11230a9d0b97a71afb6fc98"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1122,8,1122,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_andBool_`(_Gen0,#token("false","Bool") #as _Gen1)=>_Gen1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9c183fae7de06f560180386d14d29c609cadf0c98266ce2adbecb50100a1daca), org.kframework.attributes.Location(Location(1124,8,1124,37)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \and{SortBool{}}(\dv{SortBool{}}("false"),Var'Unds'Gen1:SortBool{})
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'andBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       Var'Unds'Gen1:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("9c183fae7de06f560180386d14d29c609cadf0c98266ce2adbecb50100a1daca"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1124,8,1124,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_andBool_`(#token("true","Bool"),B)=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5b9db8dba12010819161cc42dadccd0adf0100a47c21f884ae66c0a3d5483a1f), org.kframework.attributes.Location(Location(1121,8,1121,37)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("true")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarB:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'andBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarB:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("5b9db8dba12010819161cc42dadccd0adf0100a47c21f884ae66c0a3d5483a1f"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1121,8,1121,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_andThenBool_`(#token("false","Bool") #as _Gen1,_Gen0)=>_Gen1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5b729746be7bf2183d9eff138d97078a7c9489def6d8b2e1495c41ce3954997d), org.kframework.attributes.Location(Location(1128,8,1128,36)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \and{SortBool{}}(\dv{SortBool{}}("false"),Var'Unds'Gen1:SortBool{})
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'andThenBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       Var'Unds'Gen1:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("5b729746be7bf2183d9eff138d97078a7c9489def6d8b2e1495c41ce3954997d"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1128,8,1128,36)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_andThenBool_`(K,#token("true","Bool"))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(82ac30b094be9b12206773d87b60274e929a41ca595f4674be1d37eeff873d7c), org.kframework.attributes.Location(Location(1127,8,1127,37)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarK:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \dv{SortBool{}}("true")
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'andThenBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarK:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("82ac30b094be9b12206773d87b60274e929a41ca595f4674be1d37eeff873d7c"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1127,8,1127,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_andThenBool_`(_Gen0,#token("false","Bool") #as _Gen1)=>_Gen1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0508592878b546cbc6eeda6ec7b322584eea5c6d6eea3f72be8418fe4f7149b2), org.kframework.attributes.Location(Location(1129,8,1129,36)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \and{SortBool{}}(\dv{SortBool{}}("false"),Var'Unds'Gen1:SortBool{})
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'andThenBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       Var'Unds'Gen1:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("0508592878b546cbc6eeda6ec7b322584eea5c6d6eea3f72be8418fe4f7149b2"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1129,8,1129,36)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_andThenBool_`(#token("true","Bool"),K)=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(78a3191cbbdec57b0f411f41291076c8124bb0d9b6b57905674b2c6858d78689), org.kframework.attributes.Location(Location(1126,8,1126,37)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("true")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarK:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'andThenBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarK:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("78a3191cbbdec57b0f411f41291076c8124bb0d9b6b57905674b2c6858d78689"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1126,8,1126,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_divInt_`(I1,I2)=>`_/Int_`(`_-Int_`(I1,`_modInt_`(I1,I2)),I2) requires `_=/=Int_`(I2,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(83dcf9bc8c69f131715bc7a92d06c99b9a2b5f4c4fdafb69e6fdb2f1822712d4), org.kframework.attributes.Location(Location(1418,8,1419,23)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarI2:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))),
    \equals{SortInt{},R} (
      Lbl'Unds'divInt'Unds'{}(X0:SortInt{},X1:SortInt{}),
     \and{SortInt{}} (
       Lbl'UndsSlsh'Int'Unds'{}(Lbl'Unds'-Int'Unds'{}(VarI1:SortInt{},Lbl'Unds'modInt'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),VarI2:SortInt{}),
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("83dcf9bc8c69f131715bc7a92d06c99b9a2b5f4c4fdafb69e6fdb2f1822712d4"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1418,8,1419,23)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]")]

// rule `_dividesInt__INT-COMMON_Bool_Int_Int`(I1,I2)=>`_==Int_`(`_%Int_`(I2,I1),#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(fd8facae0061fe5bc5c406f7ad2ed5d8d21960bf1118c9b240451253064dadb5), org.kframework.attributes.Location(Location(1430,8,1430,58)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'dividesInt'UndsUnds'INT-COMMON'Unds'Bool'Unds'Int'Unds'Int{}(X0:SortInt{},X1:SortInt{}),
     \and{SortBool{}} (
       Lbl'UndsEqlsEqls'Int'Unds'{}(Lbl'UndsPerc'Int'Unds'{}(VarI2:SortInt{},VarI1:SortInt{}),\dv{SortInt{}}("0")),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("fd8facae0061fe5bc5c406f7ad2ed5d8d21960bf1118c9b240451253064dadb5"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1430,8,1430,58)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_impliesBool_`(B,#token("false","Bool"))=>`notBool_`(B) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(022c562a21d72cedfb795607d2249b8ad14b66399b720b3b2f4a05a1da08df96), org.kframework.attributes.Location(Location(1148,8,1148,45)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarB:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \dv{SortBool{}}("false")
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'impliesBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       LblnotBool'Unds'{}(VarB:SortBool{}),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("022c562a21d72cedfb795607d2249b8ad14b66399b720b3b2f4a05a1da08df96"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1148,8,1148,45)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_impliesBool_`(_Gen0,#token("true","Bool"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(99ba64afc26a739953df142ccd4b486bba68107fce8c9aa356d40afa7a988712), org.kframework.attributes.Location(Location(1147,8,1147,39)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \dv{SortBool{}}("true")
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'impliesBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("99ba64afc26a739953df142ccd4b486bba68107fce8c9aa356d40afa7a988712"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1147,8,1147,39)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_impliesBool_`(#token("false","Bool"),_Gen0)=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(55bb5c83c9563c712537b95401c0a5c88255fd7cdbd18b2d4358c54aee80660e), org.kframework.attributes.Location(Location(1146,8,1146,40)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("false")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'impliesBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("55bb5c83c9563c712537b95401c0a5c88255fd7cdbd18b2d4358c54aee80660e"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1146,8,1146,40)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_impliesBool_`(#token("true","Bool"),B)=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(da818c43c21c5fb2cced7e02a74b6b4191d323de2967a671b961ad28550f3c7d), org.kframework.attributes.Location(Location(1145,8,1145,36)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("true")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarB:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'impliesBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarB:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("da818c43c21c5fb2cced7e02a74b6b4191d323de2967a671b961ad28550f3c7d"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1145,8,1145,36)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_modInt_`(I1,I2)=>`_%Int_`(`_+Int_`(`_%Int_`(I1,`absInt(_)_INT-COMMON_Int_Int`(I2)),`absInt(_)_INT-COMMON_Int_Int`(I2)),`absInt(_)_INT-COMMON_Int_Int`(I2)) requires `_=/=Int_`(I2,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(adfacb58b0678a49f66186954229939a953c9849d5b08edc8f887c0d7514b2c6), concrete, org.kframework.attributes.Location(Location(1421,5,1424,23)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarI2:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \equals{SortInt{},R} (
      Lbl'Unds'modInt'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}),
     \and{SortInt{}} (
       Lbl'UndsPerc'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(Lbl'UndsPerc'Int'Unds'{}(VarI1:SortInt{},LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(VarI2:SortInt{})),LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(VarI2:SortInt{})),LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(VarI2:SortInt{})),
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("adfacb58b0678a49f66186954229939a953c9849d5b08edc8f887c0d7514b2c6"), concrete{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1421,5,1424,23)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), simplification{}()]

// rule `_orBool_`(B,#token("false","Bool"))=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d7245713da157cf997438091f92bb78eb51a6cefa568bb0d30560ce08d647f26), org.kframework.attributes.Location(Location(1138,8,1138,32)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarB:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \dv{SortBool{}}("false")
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'orBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarB:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("d7245713da157cf997438091f92bb78eb51a6cefa568bb0d30560ce08d647f26"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1138,8,1138,32)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_orBool_`(_Gen0,#token("true","Bool"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(47860d52c18a441b229449cd89d5464256137dc32deb5551effbac0482c883f3), org.kframework.attributes.Location(Location(1136,8,1136,34)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \dv{SortBool{}}("true")
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'orBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("47860d52c18a441b229449cd89d5464256137dc32deb5551effbac0482c883f3"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1136,8,1136,34)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_orBool_`(#token("false","Bool"),B)=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(991a3290bc7b6dca75d676a72a848ec6b2bd2827fb0e9626252aa1507394ca1b), org.kframework.attributes.Location(Location(1137,8,1137,32)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("false")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarB:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'orBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarB:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("991a3290bc7b6dca75d676a72a848ec6b2bd2827fb0e9626252aa1507394ca1b"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1137,8,1137,32)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_orBool_`(#token("true","Bool"),_Gen0)=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(71744528cdad83bc729990d3af3b544d27b09630b2615ca707dd2fc6ec93e7c2), org.kframework.attributes.Location(Location(1135,8,1135,34)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("true")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'orBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("71744528cdad83bc729990d3af3b544d27b09630b2615ca707dd2fc6ec93e7c2"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1135,8,1135,34)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_orElseBool_`(K,#token("false","Bool"))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(684b0444a1f711d49ff1502423a3346fb26958697423db488b05d25081fc0480), org.kframework.attributes.Location(Location(1143,8,1143,37)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarK:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \dv{SortBool{}}("false")
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'orElseBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarK:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("684b0444a1f711d49ff1502423a3346fb26958697423db488b05d25081fc0480"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1143,8,1143,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_orElseBool_`(_Gen0,#token("true","Bool"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c9eccff94ecf6e810c600d4536bf1701485c13c3456c6b98c0cdab0fe7c5af14), org.kframework.attributes.Location(Location(1141,8,1141,33)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \dv{SortBool{}}("true")
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'orElseBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("c9eccff94ecf6e810c600d4536bf1701485c13c3456c6b98c0cdab0fe7c5af14"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1141,8,1141,33)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_orElseBool_`(#token("false","Bool"),K)=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(eb8c85dac19a5951f694b65269c2b17c80d6d126d6a367958e4a5d736a880ecf), org.kframework.attributes.Location(Location(1142,8,1142,37)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("false")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarK:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'orElseBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarK:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("eb8c85dac19a5951f694b65269c2b17c80d6d126d6a367958e4a5d736a880ecf"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1142,8,1142,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_orElseBool_`(#token("true","Bool"),_Gen0)=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(354bd0860c7f38b59e285c935fd2ea553ebddbabb4973342ad25f0dac6ea7bf6), org.kframework.attributes.Location(Location(1140,8,1140,33)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("true")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'orElseBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("354bd0860c7f38b59e285c935fd2ea553ebddbabb4973342ad25f0dac6ea7bf6"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1140,8,1140,33)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_xorBool_`(B,B)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9a6d91cd75cd777b0d4db536b3e4b20578e74fe650e644b55294da95fd2dba7f), org.kframework.attributes.Location(Location(1133,8,1133,38)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarB:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarB:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'xorBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("9a6d91cd75cd777b0d4db536b3e4b20578e74fe650e644b55294da95fd2dba7f"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1133,8,1133,38)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_xorBool_`(B,#token("false","Bool"))=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7a2851f9d4ea4bd3f35070ee029fc3bdca36e361f7ee54addeff9d10ddeb7c75), org.kframework.attributes.Location(Location(1132,8,1132,38)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarB:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \dv{SortBool{}}("false")
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'xorBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarB:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("7a2851f9d4ea4bd3f35070ee029fc3bdca36e361f7ee54addeff9d10ddeb7c75"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1132,8,1132,38)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_xorBool_`(#token("false","Bool"),B)=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(73513655c09a595907ab9d26d67e27f01d14a3435743b77000c02d10f35c05bf), org.kframework.attributes.Location(Location(1131,8,1131,38)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("false")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarB:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'xorBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarB:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("73513655c09a595907ab9d26d67e27f01d14a3435743b77000c02d10f35c05bf"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1131,8,1131,38)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `_|Set__SET_Set_Set_Set`(S1,S2)=>`_Set_`(S1,`Set:difference`(S2,S1)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e9a710d8d1ca5c799420161879cbbff926de45a5bddd820d646f51d43eb67e62), concrete, org.kframework.attributes.Location(Location(749,8,749,45)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortSet{}, R} (
            X0:SortSet{},
            VarS1:SortSet{}
          ),\and{R} (
          \in{SortSet{}, R} (
            X1:SortSet{},
            VarS2:SortSet{}
          ),
          \top{R} ()
        ))),
    \equals{SortSet{},R} (
      Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(X0:SortSet{},X1:SortSet{}),
     \and{SortSet{}} (
       Lbl'Unds'Set'Unds'{}(VarS1:SortSet{},LblSet'Coln'difference{}(VarS2:SortSet{},VarS1:SortSet{})),
        \top{SortSet{}}())))
  [UNIQUE'Unds'ID{}("e9a710d8d1ca5c799420161879cbbff926de45a5bddd820d646f51d43eb67e62"), concrete{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(749,8,749,45)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `bitRangeInt(_,_,_)_INT-COMMON_Int_Int_Int_Int`(I,IDX,LEN)=>`_modInt_`(`_>>Int_`(I,IDX),`_<<Int_`(#token("1","Int"),LEN)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(147fc15c2ec6c36de1a9c0cad6212b8acd8b224f21c0aeabd36726e9c8a06119), org.kframework.attributes.Location(Location(1414,8,1414,85)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarIDX:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarLEN:SortInt{}
          ),
          \top{R} ()
        )))),
    \equals{SortInt{},R} (
      LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int{}(X0:SortInt{},X1:SortInt{},X2:SortInt{}),
     \and{SortInt{}} (
       Lbl'Unds'modInt'Unds'{}(Lbl'Unds-GT--GT-'Int'Unds'{}(VarI:SortInt{},VarIDX:SortInt{}),Lbl'Unds-LT--LT-'Int'Unds'{}(\dv{SortInt{}}("1"),VarLEN:SortInt{})),
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("147fc15c2ec6c36de1a9c0cad6212b8acd8b224f21c0aeabd36726e9c8a06119"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1414,8,1414,85)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `countAllOccurrences(_,_)_STRING-COMMON_Int_String_String`(Source,ToCount)=>`_+Int_`(#token("1","Int"),`countAllOccurrences(_,_)_STRING-COMMON_Int_String_String`(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(Source,`_+Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToCount,#token("0","Int")),`lengthString(_)_STRING-COMMON_Int_String`(ToCount)),`lengthString(_)_STRING-COMMON_Int_String`(Source)),ToCount)) requires `_>=Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToCount,#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(628cff029a6d79e4c99999c0309f91ab8cb12f0ba549bb3faa850f96304c970e), org.kframework.attributes.Location(Location(1874,8,1875,60)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-GT-Eqls'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToCount:SortString{},\dv{SortInt{}}("0")),\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarSource:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarToCount:SortString{}
          ),
          \top{R} ()
        ))),
    \equals{SortInt{},R} (
      LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String{}(X0:SortString{},X1:SortString{}),
     \and{SortInt{}} (
       Lbl'UndsPlus'Int'Unds'{}(\dv{SortInt{}}("1"),LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String{}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarSource:SortString{},Lbl'UndsPlus'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToCount:SortString{},\dv{SortInt{}}("0")),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarToCount:SortString{})),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarSource:SortString{})),VarToCount:SortString{})),
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("628cff029a6d79e4c99999c0309f91ab8cb12f0ba549bb3faa850f96304c970e"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1874,8,1875,60)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]")]

// rule `countAllOccurrences(_,_)_STRING-COMMON_Int_String_String`(Source,ToCount)=>#token("0","Int") requires `_<Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToCount,#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(1c726cd81629c2e5f411539a7f9b4d297e8600e5d71a5d235d287e3001f3ec84), org.kframework.attributes.Location(Location(1872,8,1873,59)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-LT-'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToCount:SortString{},\dv{SortInt{}}("0")),\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarSource:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarToCount:SortString{}
          ),
          \top{R} ()
        ))),
    \equals{SortInt{},R} (
      LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String{}(X0:SortString{},X1:SortString{}),
     \and{SortInt{}} (
       \dv{SortInt{}}("0"),
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("1c726cd81629c2e5f411539a7f9b4d297e8600e5d71a5d235d287e3001f3ec84"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1872,8,1873,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]")]

// rule `findChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,S2,I)=>`#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`{Int}(`_==Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("0","Int"),#token("1","Int")),I),#token("-1","Int")),`findChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("1","Int"),`lengthString(_)_STRING-COMMON_Int_String`(S2)),I),`#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`{Int}(`_==Int_`(`findChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("1","Int"),`lengthString(_)_STRING-COMMON_Int_String`(S2)),I),#token("-1","Int")),`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("0","Int"),#token("1","Int")),I),`minInt(_,_)_INT-COMMON_Int_Int_Int`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("0","Int"),#token("1","Int")),I),`findChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("1","Int"),`lengthString(_)_STRING-COMMON_Int_String`(S2)),I)))) requires `_=/=String__STRING-COMMON_Bool_String_String`(S2,#token("\"\"","String")) ensures #token("true","Bool") [UNIQUE_ID(9a3b7d1924363894c859ceb6bcec34fb944f01a5e0c90679d41b8430990b7295), org.kframework.attributes.Location(Location(1867,8,1867,431)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(VarS2:SortString{},\dv{SortString{}}("")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarS1:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarS2:SortString{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarI:SortInt{}
          ),
          \top{R} ()
        )))),
    \equals{SortInt{},R} (
      LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(X0:SortString{},X1:SortString{},X2:SortInt{}),
     \and{SortInt{}} (
       Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortInt{}}(Lbl'UndsEqlsEqls'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("0"),\dv{SortInt{}}("1")),VarI:SortInt{}),\dv{SortInt{}}("-1")),LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("1"),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarS2:SortString{})),VarI:SortInt{}),Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortInt{}}(Lbl'UndsEqlsEqls'Int'Unds'{}(LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("1"),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarS2:SortString{})),VarI:SortInt{}),\dv{SortInt{}}("-1")),LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("0"),\dv{SortInt{}}("1")),VarI:SortInt{}),LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("0"),\dv{SortInt{}}("1")),VarI:SortInt{}),LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("1"),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarS2:SortString{})),VarI:SortInt{})))),
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("9a3b7d1924363894c859ceb6bcec34fb944f01a5e0c90679d41b8430990b7295"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1867,8,1867,431)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]")]

// rule `findChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(_Gen0,#token("\"\"","String"),_Gen1)=>#token("-1","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5a6cf981f0ec2494854cd3e517b0cf645a1c9762c92a14849adfca9a6a553117), org.kframework.attributes.Location(Location(1868,8,1868,32)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            Var'Unds'Gen0:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            \dv{SortString{}}("")
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            Var'Unds'Gen1:SortInt{}
          ),
          \top{R} ()
        )))),
    \equals{SortInt{},R} (
      LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(X0:SortString{},X1:SortString{},X2:SortInt{}),
     \and{SortInt{}} (
       \dv{SortInt{}}("-1"),
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("5a6cf981f0ec2494854cd3e517b0cf645a1c9762c92a14849adfca9a6a553117"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1868,8,1868,32)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `freshId(_)_ID-COMMON_Id_Int`(I)=>`String2Id(_)_ID-COMMON_Id_String`(`_+String__STRING-COMMON_String_String_String`(#token("\"_\"","String"),`Int2String(_)_STRING-COMMON_String_Int`(I))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3965c8e65257ebae926d601fa8ac672d34e4c211d73ba594c571c6bc5960f3de), org.kframework.attributes.Location(Location(2246,8,2246,62)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI:SortInt{}
          ),
          \top{R} ()
        )),
    \equals{SortId{},R} (
      LblfreshId'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'Int{}(X0:SortInt{}),
     \and{SortId{}} (
       LblString2Id'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(\dv{SortString{}}("_"),LblInt2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int{}(VarI:SortInt{}))),
        \top{SortId{}}())))
  [UNIQUE'Unds'ID{}("3965c8e65257ebae926d601fa8ac672d34e4c211d73ba594c571c6bc5960f3de"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2246,8,2246,62)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `freshInt(_)_INT_Int_Int`(I)=>I requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(cf2cb8f038b4bdc4edb1334a3b8ced9cd296a7af43f0a1916e082a4e1aefa08b), org.kframework.attributes.Location(Location(1433,8,1433,28)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI:SortInt{}
          ),
          \top{R} ()
        )),
    \equals{SortInt{},R} (
      LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int{}(X0:SortInt{}),
     \and{SortInt{}} (
       VarI:SortInt{},
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("cf2cb8f038b4bdc4edb1334a3b8ced9cd296a7af43f0a1916e082a4e1aefa08b"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1433,8,1433,28)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule getGeneratedCounterCell(`<generatedTop>`(_DotVar0,Cell))=>Cell requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9ef5eb9b9e6bbd7436911fad20615821f61e06e742dd27773001ab0664bd1de3)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortGeneratedTopCell{}, R} (
            X0:SortGeneratedTopCell{},
            Lbl'-LT-'generatedTop'-GT-'{}(Var'Unds'DotVar0:SortTCell{},VarCell:SortGeneratedCounterCell{})
          ),
          \top{R} ()
        )),
    \equals{SortGeneratedCounterCell{},R} (
      LblgetGeneratedCounterCell{}(X0:SortGeneratedTopCell{}),
     \and{SortGeneratedCounterCell{}} (
       VarCell:SortGeneratedCounterCell{},
        \top{SortGeneratedCounterCell{}}())))
  [UNIQUE'Unds'ID{}("9ef5eb9b9e6bbd7436911fad20615821f61e06e742dd27773001ab0664bd1de3")]

// rule `getTypes(_)_SIMPLE-TYPED-DYNAMIC_Types_Params`(`.List{"_,__SIMPLE-TYPED-DYNAMIC-SYNTAX_Params_Param_Params"}_Params`(.KList))=>`_,__SIMPLE-TYPED-DYNAMIC-SYNTAX_Types_Type_Types`(`void_SIMPLE-TYPED-DYNAMIC-SYNTAX_Type`(.KList),`.List{"_,__SIMPLE-TYPED-DYNAMIC-SYNTAX_Types_Type_Types"}_Types`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5080c17ce5a63e74edf075e3cba2ade25af39a37839fadf9b0710bb38e2d90ae), org.kframework.attributes.Location(Location(360,8,360,41)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortParams{}, R} (
            X0:SortParams{},
            Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Params'Unds'Param'Unds'Params'QuotRBraUnds'Params{}()
          ),
          \top{R} ()
        )),
    \equals{SortTypes{},R} (
      LblgetTypes'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Types'Unds'Params{}(X0:SortParams{}),
     \and{SortTypes{}} (
       Lbl'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types{}(Lblvoid'Unds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Type{}(),Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}()),
        \top{SortTypes{}}())))
  [UNIQUE'Unds'ID{}("5080c17ce5a63e74edf075e3cba2ade25af39a37839fadf9b0710bb38e2d90ae"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(360,8,360,41)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `getTypes(_)_SIMPLE-TYPED-DYNAMIC_Types_Params`(`_,__SIMPLE-TYPED-DYNAMIC-SYNTAX_Params_Param_Params`(`___SIMPLE-TYPED-DYNAMIC-SYNTAX_Param_Type_Id`(T,_Gen0),`_,__SIMPLE-TYPED-DYNAMIC-SYNTAX_Params_Param_Params`(P,Ps) #as _Gen3))=>`_,__SIMPLE-TYPED-DYNAMIC-SYNTAX_Types_Type_Types`(T,`getTypes(_)_SIMPLE-TYPED-DYNAMIC_Types_Params`(_Gen3)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(89c578b43ffe7994b5103b8ed1645512f30834cdb429b336f79544216e574b66), org.kframework.attributes.Location(Location(359,8,359,57)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortParams{}, R} (
            X0:SortParams{},
            Lbl'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Params'Unds'Param'Unds'Params{}(Lbl'UndsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Param'Unds'Type'Unds'Id{}(VarT:SortType{},Var'Unds'Gen0:SortId{}),\and{SortParams{}}(Lbl'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Params'Unds'Param'Unds'Params{}(VarP:SortParam{},VarPs:SortParams{}),Var'Unds'Gen3:SortParams{}))
          ),
          \top{R} ()
        )),
    \equals{SortTypes{},R} (
      LblgetTypes'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Types'Unds'Params{}(X0:SortParams{}),
     \and{SortTypes{}} (
       Lbl'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types{}(VarT:SortType{},LblgetTypes'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Types'Unds'Params{}(Var'Unds'Gen3:SortParams{})),
        \top{SortTypes{}}())))
  [UNIQUE'Unds'ID{}("89c578b43ffe7994b5103b8ed1645512f30834cdb429b336f79544216e574b66"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(359,8,359,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `getTypes(_)_SIMPLE-TYPED-DYNAMIC_Types_Params`(`_,__SIMPLE-TYPED-DYNAMIC-SYNTAX_Params_Param_Params`(`___SIMPLE-TYPED-DYNAMIC-SYNTAX_Param_Type_Id`(T,_Gen0),`.List{"_,__SIMPLE-TYPED-DYNAMIC-SYNTAX_Params_Param_Params"}_Params`(.KList)))=>`_,__SIMPLE-TYPED-DYNAMIC-SYNTAX_Types_Type_Types`(T,`.List{"_,__SIMPLE-TYPED-DYNAMIC-SYNTAX_Types_Type_Types"}_Types`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0ba5064cede4345b8a6299129267e78e51875e244d0cf96815e01907895eb68b), org.kframework.attributes.Location(Location(358,8,358,42)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortParams{}, R} (
            X0:SortParams{},
            Lbl'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Params'Unds'Param'Unds'Params{}(Lbl'UndsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Param'Unds'Type'Unds'Id{}(VarT:SortType{},Var'Unds'Gen0:SortId{}),Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Params'Unds'Param'Unds'Params'QuotRBraUnds'Params{}())
          ),
          \top{R} ()
        )),
    \equals{SortTypes{},R} (
      LblgetTypes'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Types'Unds'Params{}(X0:SortParams{}),
     \and{SortTypes{}} (
       Lbl'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types{}(VarT:SortType{},Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}()),
        \top{SortTypes{}}())))
  [UNIQUE'Unds'ID{}("0ba5064cede4345b8a6299129267e78e51875e244d0cf96815e01907895eb68b"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(358,8,358,42)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule initBusyCell(.KList)=>`<busy>`(`.Set`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0684bf26697219a45407cda377fd8a6f26c911dc548ad148dd42132f5f242ada), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortBusyCell{},R} (
      LblinitBusyCell{}(),
     \and{SortBusyCell{}} (
       Lbl'-LT-'busy'-GT-'{}(Lbl'Stop'Set{}()),
        \top{SortBusyCell{}}())))
  [UNIQUE'Unds'ID{}("0684bf26697219a45407cda377fd8a6f26c911dc548ad148dd42132f5f242ada"), initializer{}()]

// rule initControlCell(.KList)=>`<control>`(initFstackCell(.KList),initXstackCell(.KList),initReturnTypeCell(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d8eca4928371999e57560d978989b6c3d817da51898994e9d3683ba5b279ec94), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortControlCell{},R} (
      LblinitControlCell{}(),
     \and{SortControlCell{}} (
       Lbl'-LT-'control'-GT-'{}(LblinitFstackCell{}(),LblinitXstackCell{}(),LblinitReturnTypeCell{}()),
        \top{SortControlCell{}}())))
  [UNIQUE'Unds'ID{}("d8eca4928371999e57560d978989b6c3d817da51898994e9d3683ba5b279ec94"), initializer{}()]

// rule initEnvCell(.KList)=>`<env>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(00d428bbba5e1be4a85aba1c6d8e92413cb67f2b9e9b8fc00940b647db49b07a), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortEnvCell{},R} (
      LblinitEnvCell{}(),
     \and{SortEnvCell{}} (
       Lbl'-LT-'env'-GT-'{}(Lbl'Stop'Map{}()),
        \top{SortEnvCell{}}())))
  [UNIQUE'Unds'ID{}("00d428bbba5e1be4a85aba1c6d8e92413cb67f2b9e9b8fc00940b647db49b07a"), initializer{}()]

// rule initFstackCell(.KList)=>`<fstack>`(`.List`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(27e90acb9ab8156291dc44e43cb2d9b690636cdeeab086b7a22c66f34416dc64), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortFstackCell{},R} (
      LblinitFstackCell{}(),
     \and{SortFstackCell{}} (
       Lbl'-LT-'fstack'-GT-'{}(Lbl'Stop'List{}()),
        \top{SortFstackCell{}}())))
  [UNIQUE'Unds'ID{}("27e90acb9ab8156291dc44e43cb2d9b690636cdeeab086b7a22c66f34416dc64"), initializer{}()]

// rule initGeneratedCounterCell(.KList)=>`<generatedCounter>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5de11f6b50c4684c0e05b773f809d756f4ce9c03a4f24e23a9cddaf3fa31f553), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortGeneratedCounterCell{},R} (
      LblinitGeneratedCounterCell{}(),
     \and{SortGeneratedCounterCell{}} (
       Lbl'-LT-'generatedCounter'-GT-'{}(\dv{SortInt{}}("0")),
        \top{SortGeneratedCounterCell{}}())))
  [UNIQUE'Unds'ID{}("5de11f6b50c4684c0e05b773f809d756f4ce9c03a4f24e23a9cddaf3fa31f553"), initializer{}()]

// rule initGeneratedTopCell(Init)=>`<generatedTop>`(initTCell(Init),initGeneratedCounterCell(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6bc7582a7d8c6574a248b085ad3bdecafbf86539963d4e752be82fb1c857fb28), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortMap{}, R} (
            X0:SortMap{},
            VarInit:SortMap{}
          ),
          \top{R} ()
        )),
    \equals{SortGeneratedTopCell{},R} (
      LblinitGeneratedTopCell{}(X0:SortMap{}),
     \and{SortGeneratedTopCell{}} (
       Lbl'-LT-'generatedTop'-GT-'{}(LblinitTCell{}(VarInit:SortMap{}),LblinitGeneratedCounterCell{}()),
        \top{SortGeneratedTopCell{}}())))
  [UNIQUE'Unds'ID{}("6bc7582a7d8c6574a248b085ad3bdecafbf86539963d4e752be82fb1c857fb28"), initializer{}()]

// rule initGenvCell(.KList)=>`<genv>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6acb8d91fcd4481d7413a4270ca8d8e0af3558e4c534d0c1e22b0c8c24919462), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortGenvCell{},R} (
      LblinitGenvCell{}(),
     \and{SortGenvCell{}} (
       Lbl'-LT-'genv'-GT-'{}(Lbl'Stop'Map{}()),
        \top{SortGenvCell{}}())))
  [UNIQUE'Unds'ID{}("6acb8d91fcd4481d7413a4270ca8d8e0af3558e4c534d0c1e22b0c8c24919462"), initializer{}()]

// rule initHoldsCell(.KList)=>`<holds>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9be8c90b7f6b23856b1ed3707ade1cf2a855a2cf6e34743812741545dc4b1b5b), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortHoldsCell{},R} (
      LblinitHoldsCell{}(),
     \and{SortHoldsCell{}} (
       Lbl'-LT-'holds'-GT-'{}(Lbl'Stop'Map{}()),
        \top{SortHoldsCell{}}())))
  [UNIQUE'Unds'ID{}("9be8c90b7f6b23856b1ed3707ade1cf2a855a2cf6e34743812741545dc4b1b5b"), initializer{}()]

// rule initIdCell(.KList)=>`<id>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2a06b6a27a201eff054d451215437e05883ac11cae719271694b12cb59b7c6df), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortIdCell{},R} (
      LblinitIdCell{}(),
     \and{SortIdCell{}} (
       Lbl'-LT-'id'-GT-'{}(\dv{SortInt{}}("0")),
        \top{SortIdCell{}}())))
  [UNIQUE'Unds'ID{}("2a06b6a27a201eff054d451215437e05883ac11cae719271694b12cb59b7c6df"), initializer{}()]

// rule initInputCell(Init)=>`<input>`(`_List_`(`_List_`(`ListItem`(inj{Stream,KItem}(`#buffer(_)_K-IO_Stream_K`(inj{String,KItem}(`project:String`(`Map:lookup`(Init,inj{KConfigVar,KItem}(#token("$STDIN","KConfigVar")))))))),`ListItem`(inj{String,KItem}(`project:String`(`Map:lookup`(Init,inj{KConfigVar,KItem}(#token("$IO","KConfigVar"))))))),`ListItem`(inj{Stream,KItem}(`#istream(_)_K-IO_Stream_Int`(`#stdin_K-IO_Int`(.KList)))))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(02dab0fdd06e535dc7414d9921d25b84e5e7b2a5ed0e971b567aee1acbd0ef48), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortMap{}, R} (
            X0:SortMap{},
            VarInit:SortMap{}
          ),
          \top{R} ()
        )),
    \equals{SortInputCell{},R} (
      LblinitInputCell{}(X0:SortMap{}),
     \and{SortInputCell{}} (
       Lbl'-LT-'input'-GT-'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(kseq{}(inj{SortString{}, SortKItem{}}(Lblproject'Coln'String{}(kseq{}(LblMap'Coln'lookup{}(VarInit:SortMap{},inj{SortKConfigVar{}, SortKItem{}}(\dv{SortKConfigVar{}}("$STDIN"))),dotk{}()))),dotk{}())))),LblListItem{}(inj{SortString{}, SortKItem{}}(Lblproject'Coln'String{}(kseq{}(LblMap'Coln'lookup{}(VarInit:SortMap{},inj{SortKConfigVar{}, SortKItem{}}(\dv{SortKConfigVar{}}("$IO"))),dotk{}()))))),LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'istream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(Lbl'Hash'stdin'Unds'K-IO'Unds'Int{}()))))),
        \top{SortInputCell{}}())))
  [UNIQUE'Unds'ID{}("02dab0fdd06e535dc7414d9921d25b84e5e7b2a5ed0e971b567aee1acbd0ef48"), initializer{}()]

// rule initKCell(Init)=>`<k>`(inj{Stmt,KItem}(`project:Stmt`(`Map:lookup`(Init,inj{KConfigVar,KItem}(#token("$PGM","KConfigVar")))))~>`execute_SIMPLE-TYPED-DYNAMIC_KItem`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9f38ed400ef18edf23138ed0b6267eb5b16cd23cd8003d92f957d6030f759928), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortMap{}, R} (
            X0:SortMap{},
            VarInit:SortMap{}
          ),
          \top{R} ()
        )),
    \equals{SortKCell{},R} (
      LblinitKCell{}(X0:SortMap{}),
     \and{SortKCell{}} (
       Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblproject'Coln'Stmt{}(kseq{}(LblMap'Coln'lookup{}(VarInit:SortMap{},inj{SortKConfigVar{}, SortKItem{}}(\dv{SortKConfigVar{}}("$PGM"))),dotk{}()))),kseq{}(Lblexecute'Unds'SIMPLE-TYPED-DYNAMIC'Unds'KItem{}(),dotk{}()))),
        \top{SortKCell{}}())))
  [UNIQUE'Unds'ID{}("9f38ed400ef18edf23138ed0b6267eb5b16cd23cd8003d92f957d6030f759928"), initializer{}()]

// rule initNextLocCell(.KList)=>`<nextLoc>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4fce38c9043a703557a44ac26d031234b8e1aef6e96c923d401287f09f8295f2), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortNextLocCell{},R} (
      LblinitNextLocCell{}(),
     \and{SortNextLocCell{}} (
       Lbl'-LT-'nextLoc'-GT-'{}(\dv{SortInt{}}("0")),
        \top{SortNextLocCell{}}())))
  [UNIQUE'Unds'ID{}("4fce38c9043a703557a44ac26d031234b8e1aef6e96c923d401287f09f8295f2"), initializer{}()]

// rule initOutputCell(Init)=>`<output>`(`_List_`(`_List_`(`ListItem`(inj{Stream,KItem}(`#ostream(_)_K-IO_Stream_Int`(`#stdout_K-IO_Int`(.KList)))),`ListItem`(inj{String,KItem}(`project:String`(`Map:lookup`(Init,inj{KConfigVar,KItem}(#token("$IO","KConfigVar"))))))),`ListItem`(inj{Stream,KItem}(`#buffer(_)_K-IO_Stream_K`(inj{String,KItem}(#token("\"\"","String"))))))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(fe4bbac01b7ae18be478d157df9368bcc1dd048a5bfb0e334cd02c0fc7d3c6a2), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortMap{}, R} (
            X0:SortMap{},
            VarInit:SortMap{}
          ),
          \top{R} ()
        )),
    \equals{SortOutputCell{},R} (
      LblinitOutputCell{}(X0:SortMap{}),
     \and{SortOutputCell{}} (
       Lbl'-LT-'output'-GT-'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(Lbl'Hash'stdout'Unds'K-IO'Unds'Int{}()))),LblListItem{}(inj{SortString{}, SortKItem{}}(Lblproject'Coln'String{}(kseq{}(LblMap'Coln'lookup{}(VarInit:SortMap{},inj{SortKConfigVar{}, SortKItem{}}(\dv{SortKConfigVar{}}("$IO"))),dotk{}()))))),LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(kseq{}(inj{SortString{}, SortKItem{}}(\dv{SortString{}}("")),dotk{}())))))),
        \top{SortOutputCell{}}())))
  [UNIQUE'Unds'ID{}("fe4bbac01b7ae18be478d157df9368bcc1dd048a5bfb0e334cd02c0fc7d3c6a2"), initializer{}()]

// rule initReturnTypeCell(.KList)=>`<returnType>`(`void_SIMPLE-TYPED-DYNAMIC-SYNTAX_Type`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(617076667993fbfa40190cb69903aa382f60e37efe76509d30080b420b2c5ca2), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortReturnTypeCell{},R} (
      LblinitReturnTypeCell{}(),
     \and{SortReturnTypeCell{}} (
       Lbl'-LT-'returnType'-GT-'{}(Lblvoid'Unds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Type{}()),
        \top{SortReturnTypeCell{}}())))
  [UNIQUE'Unds'ID{}("617076667993fbfa40190cb69903aa382f60e37efe76509d30080b420b2c5ca2"), initializer{}()]

// rule initStoreCell(.KList)=>`<store>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(25c9fd48ffb4ae6d3301adb7ee16d732c9e7eff638e62fef57a687c62281f5ee), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortStoreCell{},R} (
      LblinitStoreCell{}(),
     \and{SortStoreCell{}} (
       Lbl'-LT-'store'-GT-'{}(Lbl'Stop'Map{}()),
        \top{SortStoreCell{}}())))
  [UNIQUE'Unds'ID{}("25c9fd48ffb4ae6d3301adb7ee16d732c9e7eff638e62fef57a687c62281f5ee"), initializer{}()]

// rule initTCell(Init)=>`<T>`(initThreadsCell(Init),initGenvCell(.KList),initStoreCell(.KList),initBusyCell(.KList),initTerminatedCell(.KList),initInputCell(Init),initOutputCell(Init),initNextLocCell(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b2d66510704a406b7a31a2ab38c2fa45e2b91801a27f456b4e55e94ff3a835e4), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortMap{}, R} (
            X0:SortMap{},
            VarInit:SortMap{}
          ),
          \top{R} ()
        )),
    \equals{SortTCell{},R} (
      LblinitTCell{}(X0:SortMap{}),
     \and{SortTCell{}} (
       Lbl'-LT-'T'-GT-'{}(LblinitThreadsCell{}(VarInit:SortMap{}),LblinitGenvCell{}(),LblinitStoreCell{}(),LblinitBusyCell{}(),LblinitTerminatedCell{}(),LblinitInputCell{}(VarInit:SortMap{}),LblinitOutputCell{}(VarInit:SortMap{}),LblinitNextLocCell{}()),
        \top{SortTCell{}}())))
  [UNIQUE'Unds'ID{}("b2d66510704a406b7a31a2ab38c2fa45e2b91801a27f456b4e55e94ff3a835e4"), initializer{}()]

// rule initTerminatedCell(.KList)=>`<terminated>`(`.Set`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(41229aeff886e23baf75c294f7c63ef7311feea4a480497b71875dc0c1d0870e), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortTerminatedCell{},R} (
      LblinitTerminatedCell{}(),
     \and{SortTerminatedCell{}} (
       Lbl'-LT-'terminated'-GT-'{}(Lbl'Stop'Set{}()),
        \top{SortTerminatedCell{}}())))
  [UNIQUE'Unds'ID{}("41229aeff886e23baf75c294f7c63ef7311feea4a480497b71875dc0c1d0870e"), initializer{}()]

// rule initThreadCell(Init)=>`ThreadCellMapItem`(initIdCell(.KList),`<thread>`(initIdCell(.KList),initKCell(Init),initControlCell(.KList),initEnvCell(.KList),initHoldsCell(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2d28d404e0d031a436a2eb56e9d6268847d757c206067ad039750631cc83662f), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortMap{}, R} (
            X0:SortMap{},
            VarInit:SortMap{}
          ),
          \top{R} ()
        )),
    \equals{SortThreadCellMap{},R} (
      LblinitThreadCell{}(X0:SortMap{}),
     \and{SortThreadCellMap{}} (
       LblThreadCellMapItem{}(LblinitIdCell{}(),Lbl'-LT-'thread'-GT-'{}(LblinitIdCell{}(),LblinitKCell{}(VarInit:SortMap{}),LblinitControlCell{}(),LblinitEnvCell{}(),LblinitHoldsCell{}())),
        \top{SortThreadCellMap{}}())))
  [UNIQUE'Unds'ID{}("2d28d404e0d031a436a2eb56e9d6268847d757c206067ad039750631cc83662f"), initializer{}()]

// rule initThreadsCell(Init)=>`<threads>`(initThreadCell(Init)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3e08d3c475b64c7e4b7a4038d9a7c5dd428a06793741278eb7bb82d182f92b0c), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortMap{}, R} (
            X0:SortMap{},
            VarInit:SortMap{}
          ),
          \top{R} ()
        )),
    \equals{SortThreadsCell{},R} (
      LblinitThreadsCell{}(X0:SortMap{}),
     \and{SortThreadsCell{}} (
       Lbl'-LT-'threads'-GT-'{}(LblinitThreadCell{}(VarInit:SortMap{})),
        \top{SortThreadsCell{}}())))
  [UNIQUE'Unds'ID{}("3e08d3c475b64c7e4b7a4038d9a7c5dd428a06793741278eb7bb82d182f92b0c"), initializer{}()]

// rule initXstackCell(.KList)=>`<xstack>`(`.List`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(db25bb916116d20f3b0e316ee2f347665b6e04924ffcb24584fc63a9e5f9b36e), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortXstackCell{},R} (
      LblinitXstackCell{}(),
     \and{SortXstackCell{}} (
       Lbl'-LT-'xstack'-GT-'{}(Lbl'Stop'List{}()),
        \top{SortXstackCell{}}())))
  [UNIQUE'Unds'ID{}("db25bb916116d20f3b0e316ee2f347665b6e04924ffcb24584fc63a9e5f9b36e"), initializer{}()]

// rule isBlock(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(afc7f5b6d08d12f750a3a535211fd32a58589265fbdb2e772c3374c3685c9701), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortBlock{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortBlock{}, SortKItem{}}(Var'Unds'Gen1:SortBlock{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisBlock{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("afc7f5b6d08d12f750a3a535211fd32a58589265fbdb2e772c3374c3685c9701"), owise{}()]

// rule isBlock(inj{Block,KItem}(Block))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(90826e214774c10052882db34f0b29a8ab1ba03e3a5538878677c25ef57d97d0)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBlock{}, SortKItem{}}(VarBlock:SortBlock{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisBlock{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("90826e214774c10052882db34f0b29a8ab1ba03e3a5538878677c25ef57d97d0")]

// rule isBool(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7f8273ebd616814dbf1acdd96b9534fbaa5b0491bfd05a61916e5015ad4a37ab), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortBool{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortBool{}, SortKItem{}}(Var'Unds'Gen1:SortBool{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisBool{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("7f8273ebd616814dbf1acdd96b9534fbaa5b0491bfd05a61916e5015ad4a37ab"), owise{}()]

// rule isBool(inj{Bool,KItem}(Bool))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(dadad716b2f6a82fa4b2cc8f903a1b8f1f6e8cfa63f18b72a7cb35110bdcff77)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBool{}, SortKItem{}}(VarBool:SortBool{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisBool{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("dadad716b2f6a82fa4b2cc8f903a1b8f1f6e8cfa63f18b72a7cb35110bdcff77")]

// rule isBusyCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4260eb32813759ed3da05fa25316a5277c0ee2544f4454c1d4f739c62641e70b), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortBusyCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortBusyCell{}, SortKItem{}}(Var'Unds'Gen1:SortBusyCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisBusyCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("4260eb32813759ed3da05fa25316a5277c0ee2544f4454c1d4f739c62641e70b"), owise{}()]

// rule isBusyCell(inj{BusyCell,KItem}(BusyCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(35f287667971515d860f5f2310fb6271679209a5680067f0d50679ff171ff7d0)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBusyCell{}, SortKItem{}}(VarBusyCell:SortBusyCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisBusyCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("35f287667971515d860f5f2310fb6271679209a5680067f0d50679ff171ff7d0")]

// rule isBusyCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d48c67171017dc9ceb76b86a65cade88bbb231f2e31bfa039061e7c8920a0114), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortBusyCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortBusyCellOpt{}, SortKItem{}}(Var'Unds'Gen1:SortBusyCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisBusyCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("d48c67171017dc9ceb76b86a65cade88bbb231f2e31bfa039061e7c8920a0114"), owise{}()]

// rule isBusyCellOpt(inj{BusyCellOpt,KItem}(BusyCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(956fb6f344cb55dabc3fa4c67486a97162c96bef153c2ee19ade668bca91efd5)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBusyCellOpt{}, SortKItem{}}(VarBusyCellOpt:SortBusyCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisBusyCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("956fb6f344cb55dabc3fa4c67486a97162c96bef153c2ee19ade668bca91efd5")]

// rule isControlCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(090afb1264c7c158fb942124bbad74146235ebd3698fd03877054d2e3b8f5194), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortControlCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortControlCell{}, SortKItem{}}(Var'Unds'Gen0:SortControlCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisControlCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("090afb1264c7c158fb942124bbad74146235ebd3698fd03877054d2e3b8f5194"), owise{}()]

// rule isControlCell(inj{ControlCell,KItem}(ControlCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(abdd2ffc330687110949d68ad33860ad6080aa2fd5f36488ba2edc9491c5a813)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortControlCell{}, SortKItem{}}(VarControlCell:SortControlCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisControlCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("abdd2ffc330687110949d68ad33860ad6080aa2fd5f36488ba2edc9491c5a813")]

// rule isControlCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7d876815d6ee6168fdf6d7839998cd32c8e31166dc12575882615ff9eb03b4c8), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortControlCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortControlCellFragment{}, SortKItem{}}(Var'Unds'Gen1:SortControlCellFragment{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisControlCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("7d876815d6ee6168fdf6d7839998cd32c8e31166dc12575882615ff9eb03b4c8"), owise{}()]

// rule isControlCellFragment(inj{ControlCellFragment,KItem}(ControlCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(45984f57af1196085680052bdad0d86e28c51922c20c4a6cafc410935c03be3f)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortControlCellFragment{}, SortKItem{}}(VarControlCellFragment:SortControlCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisControlCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("45984f57af1196085680052bdad0d86e28c51922c20c4a6cafc410935c03be3f")]

// rule isControlCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4e9df0e275c6a51764cd3b3421b1d5cc9eb71a5f5a34a47b2c44ff0873a97131), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortControlCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortControlCellOpt{}, SortKItem{}}(Var'Unds'Gen1:SortControlCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisControlCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("4e9df0e275c6a51764cd3b3421b1d5cc9eb71a5f5a34a47b2c44ff0873a97131"), owise{}()]

// rule isControlCellOpt(inj{ControlCellOpt,KItem}(ControlCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(fff2b41dc054c148ea3382219624c7ec9eea7a0ab9d56d27213830e818e7df27)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortControlCellOpt{}, SortKItem{}}(VarControlCellOpt:SortControlCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisControlCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("fff2b41dc054c148ea3382219624c7ec9eea7a0ab9d56d27213830e818e7df27")]

// rule isEnvCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8a960c8f9cadc95b68b218aedab99c4a8de14751b7c1687cf3452eed5933eddb), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortEnvCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortEnvCell{}, SortKItem{}}(Var'Unds'Gen0:SortEnvCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisEnvCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("8a960c8f9cadc95b68b218aedab99c4a8de14751b7c1687cf3452eed5933eddb"), owise{}()]

// rule isEnvCell(inj{EnvCell,KItem}(EnvCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b5df359932869a7148a60c91069b0bd8bd4c747deff9948cc9b5abe368811236)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortEnvCell{}, SortKItem{}}(VarEnvCell:SortEnvCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisEnvCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("b5df359932869a7148a60c91069b0bd8bd4c747deff9948cc9b5abe368811236")]

// rule isEnvCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(898db9bb9cecb296461b4101a9cb111e665d5dbc884af3c81a5278f77dac8df9), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortEnvCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortEnvCellOpt{}, SortKItem{}}(Var'Unds'Gen1:SortEnvCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisEnvCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("898db9bb9cecb296461b4101a9cb111e665d5dbc884af3c81a5278f77dac8df9"), owise{}()]

// rule isEnvCellOpt(inj{EnvCellOpt,KItem}(EnvCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7d5b22845313dff6f784ac0e578d3b7433b454aa2be3a9a6d389705cbbd1c0dc)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortEnvCellOpt{}, SortKItem{}}(VarEnvCellOpt:SortEnvCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisEnvCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("7d5b22845313dff6f784ac0e578d3b7433b454aa2be3a9a6d389705cbbd1c0dc")]

// rule isExp(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3762fda3bb594dc94f3bc1b73e6be837dcb235b3eb61c39b1e9b4081559b2706), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortExp{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortExp{}, SortKItem{}}(Var'Unds'Gen1:SortExp{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisExp{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("3762fda3bb594dc94f3bc1b73e6be837dcb235b3eb61c39b1e9b4081559b2706"), owise{}()]

// rule isExp(inj{Exp,KItem}(Exp))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5113a02f7660a72f8eec77fb75db8556ae809f64d13e8478319e14b277319d5c)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortExp{}, SortKItem{}}(VarExp:SortExp{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisExp{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("5113a02f7660a72f8eec77fb75db8556ae809f64d13e8478319e14b277319d5c")]

// rule isExps(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d0d46452d4bfb35e897e38e44708739df735761145705017013d71d14a824db0), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortExps{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortExps{}, SortKItem{}}(Var'Unds'Gen1:SortExps{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisExps{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("d0d46452d4bfb35e897e38e44708739df735761145705017013d71d14a824db0"), owise{}()]

// rule isExps(inj{Exps,KItem}(Exps))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5e8cbdfdf9c482f9ff6f11c69b77e56f646c4d81c94b35164a4228a6e5c51104)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortExps{}, SortKItem{}}(VarExps:SortExps{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisExps{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("5e8cbdfdf9c482f9ff6f11c69b77e56f646c4d81c94b35164a4228a6e5c51104")]

// rule isFloat(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2a794de414a5b222c2b378d31aee70dd82d84237a3ab65881c92100c0bf5cb57), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortFloat{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortFloat{}, SortKItem{}}(Var'Unds'Gen1:SortFloat{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisFloat{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("2a794de414a5b222c2b378d31aee70dd82d84237a3ab65881c92100c0bf5cb57"), owise{}()]

// rule isFloat(inj{Float,KItem}(Float))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d74a36c34f45e0bf74d89fdd362f124478ab18934b5786ff4aabfe527643c5f0)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFloat{}, SortKItem{}}(VarFloat:SortFloat{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisFloat{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("d74a36c34f45e0bf74d89fdd362f124478ab18934b5786ff4aabfe527643c5f0")]

// rule isFstackCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(448deb76590ec41d31af2bb8fbccb7a80547f9c85a7a597683c4f48c7f7d360d), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortFstackCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortFstackCell{}, SortKItem{}}(Var'Unds'Gen1:SortFstackCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisFstackCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("448deb76590ec41d31af2bb8fbccb7a80547f9c85a7a597683c4f48c7f7d360d"), owise{}()]

// rule isFstackCell(inj{FstackCell,KItem}(FstackCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(caf74dea59c232b99019d1bba8f59d58cce5169555ce1ee4eb1063445de00886)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFstackCell{}, SortKItem{}}(VarFstackCell:SortFstackCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisFstackCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("caf74dea59c232b99019d1bba8f59d58cce5169555ce1ee4eb1063445de00886")]

// rule isFstackCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a8e8ea3cb4350af097acf6a4a4eb431fd48079aa30d61281e4e900c3ca76578c), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortFstackCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortFstackCellOpt{}, SortKItem{}}(Var'Unds'Gen0:SortFstackCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisFstackCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("a8e8ea3cb4350af097acf6a4a4eb431fd48079aa30d61281e4e900c3ca76578c"), owise{}()]

// rule isFstackCellOpt(inj{FstackCellOpt,KItem}(FstackCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8b5c1a9f5ce9de9ac1c705b98e4ec35d7b8224868c8c0ce4c809fb982a5dd265)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFstackCellOpt{}, SortKItem{}}(VarFstackCellOpt:SortFstackCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisFstackCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("8b5c1a9f5ce9de9ac1c705b98e4ec35d7b8224868c8c0ce4c809fb982a5dd265")]

// rule isGeneratedCounterCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7d501e1637f26769ad3b9439efef0285daa79523b0d071b3a792972ce92e4fe2), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortGeneratedCounterCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortGeneratedCounterCell{}, SortKItem{}}(Var'Unds'Gen0:SortGeneratedCounterCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisGeneratedCounterCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("7d501e1637f26769ad3b9439efef0285daa79523b0d071b3a792972ce92e4fe2"), owise{}()]

// rule isGeneratedCounterCell(inj{GeneratedCounterCell,KItem}(GeneratedCounterCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f7b6a3dbee5a80d5eeba727f40009876995660d4052a45fc50c55f88c5fc1a7c)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedCounterCell{}, SortKItem{}}(VarGeneratedCounterCell:SortGeneratedCounterCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisGeneratedCounterCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("f7b6a3dbee5a80d5eeba727f40009876995660d4052a45fc50c55f88c5fc1a7c")]

// rule isGeneratedCounterCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(55e7759c7640aa41fef8271d53c6dd8668aa497704539a65577604ada709c5df), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortGeneratedCounterCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortGeneratedCounterCellOpt{}, SortKItem{}}(Var'Unds'Gen0:SortGeneratedCounterCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisGeneratedCounterCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("55e7759c7640aa41fef8271d53c6dd8668aa497704539a65577604ada709c5df"), owise{}()]

// rule isGeneratedCounterCellOpt(inj{GeneratedCounterCellOpt,KItem}(GeneratedCounterCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a4ff3e170677e099d4b28085658942cb10fcf871aa99abcdf73927596c180f12)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedCounterCellOpt{}, SortKItem{}}(VarGeneratedCounterCellOpt:SortGeneratedCounterCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisGeneratedCounterCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("a4ff3e170677e099d4b28085658942cb10fcf871aa99abcdf73927596c180f12")]

// rule isGeneratedTopCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ec16314688c4b2d204af490e243a3e83a2e82fbc74988c3574b997cc9ca56816), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortGeneratedTopCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortGeneratedTopCell{}, SortKItem{}}(Var'Unds'Gen1:SortGeneratedTopCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisGeneratedTopCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("ec16314688c4b2d204af490e243a3e83a2e82fbc74988c3574b997cc9ca56816"), owise{}()]

// rule isGeneratedTopCell(inj{GeneratedTopCell,KItem}(GeneratedTopCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3bcf423225700e329d0533cfd806eb9bab91f9d8de0979c8d8e381fe5d076bb2)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedTopCell{}, SortKItem{}}(VarGeneratedTopCell:SortGeneratedTopCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisGeneratedTopCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("3bcf423225700e329d0533cfd806eb9bab91f9d8de0979c8d8e381fe5d076bb2")]

// rule isGeneratedTopCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1f022b25cc5a2adbe99fbae6b50007c803258a5749eb01e05c86096f7b35c0df), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortGeneratedTopCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortGeneratedTopCellFragment{}, SortKItem{}}(Var'Unds'Gen1:SortGeneratedTopCellFragment{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisGeneratedTopCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("1f022b25cc5a2adbe99fbae6b50007c803258a5749eb01e05c86096f7b35c0df"), owise{}()]

// rule isGeneratedTopCellFragment(inj{GeneratedTopCellFragment,KItem}(GeneratedTopCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(559f2cdc0ab425bb065cc3174f4a1af4d9ca834f762a814cf3dfbf9a9d7f8271)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedTopCellFragment{}, SortKItem{}}(VarGeneratedTopCellFragment:SortGeneratedTopCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisGeneratedTopCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("559f2cdc0ab425bb065cc3174f4a1af4d9ca834f762a814cf3dfbf9a9d7f8271")]

// rule isGenvCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(220d6c635a5d365658dd000195514703ba0bc8d8861a41975353230b4680a108), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortGenvCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortGenvCell{}, SortKItem{}}(Var'Unds'Gen1:SortGenvCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisGenvCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("220d6c635a5d365658dd000195514703ba0bc8d8861a41975353230b4680a108"), owise{}()]

// rule isGenvCell(inj{GenvCell,KItem}(GenvCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(412f8b211a340cc5da45ab0bab2438e787f3c284d88497c42682dffb00511498)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGenvCell{}, SortKItem{}}(VarGenvCell:SortGenvCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisGenvCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("412f8b211a340cc5da45ab0bab2438e787f3c284d88497c42682dffb00511498")]

// rule isGenvCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b6f03e43053c4c0bae5a6c258d0bf0e89bbc44f04e873a9406d0d6130ed2e8bf), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortGenvCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortGenvCellOpt{}, SortKItem{}}(Var'Unds'Gen0:SortGenvCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisGenvCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("b6f03e43053c4c0bae5a6c258d0bf0e89bbc44f04e873a9406d0d6130ed2e8bf"), owise{}()]

// rule isGenvCellOpt(inj{GenvCellOpt,KItem}(GenvCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(80fac5c54297da198a0778a61b42334f79e30dae0378b78bb91f3214f30cad65)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGenvCellOpt{}, SortKItem{}}(VarGenvCellOpt:SortGenvCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisGenvCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("80fac5c54297da198a0778a61b42334f79e30dae0378b78bb91f3214f30cad65")]

// rule isHoldsCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a5e418ad6bae97eeb5b7368626ec35cb0f5246de2e59db4aabadcba5434a9a0a), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortHoldsCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortHoldsCell{}, SortKItem{}}(Var'Unds'Gen0:SortHoldsCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisHoldsCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("a5e418ad6bae97eeb5b7368626ec35cb0f5246de2e59db4aabadcba5434a9a0a"), owise{}()]

// rule isHoldsCell(inj{HoldsCell,KItem}(HoldsCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(dab60eefe39a7bb1d358c481f6446213c02fa91513431b42273a386e81a9030b)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortHoldsCell{}, SortKItem{}}(VarHoldsCell:SortHoldsCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisHoldsCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("dab60eefe39a7bb1d358c481f6446213c02fa91513431b42273a386e81a9030b")]

// rule isHoldsCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0292ddc80531396ebbc8993da94ce3eb07f28a6f465ed16aee773da6c732a35e), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortHoldsCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortHoldsCellOpt{}, SortKItem{}}(Var'Unds'Gen1:SortHoldsCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisHoldsCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("0292ddc80531396ebbc8993da94ce3eb07f28a6f465ed16aee773da6c732a35e"), owise{}()]

// rule isHoldsCellOpt(inj{HoldsCellOpt,KItem}(HoldsCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(810e4b40f46cbdeafca610b639bde5ad7344b01c6cf7a1ae73fefaa45f29a6c9)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortHoldsCellOpt{}, SortKItem{}}(VarHoldsCellOpt:SortHoldsCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisHoldsCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("810e4b40f46cbdeafca610b639bde5ad7344b01c6cf7a1ae73fefaa45f29a6c9")]

// rule isIOError(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(20991c3332591ac971b290eb3a8cf0b0bcda5515745e9df3f1aef203db197006), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortIOError{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortIOError{}, SortKItem{}}(Var'Unds'Gen0:SortIOError{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisIOError{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("20991c3332591ac971b290eb3a8cf0b0bcda5515745e9df3f1aef203db197006"), owise{}()]

// rule isIOError(inj{IOError,KItem}(IOError))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(af1461e241b050082a392e02da8a0d27eb78de77d591d7b2a949770399eea7d0)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIOError{}, SortKItem{}}(VarIOError:SortIOError{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisIOError{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("af1461e241b050082a392e02da8a0d27eb78de77d591d7b2a949770399eea7d0")]

// rule isIOFile(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0512dee3542dc027fbb3e8109dd7eda0d57c779d50e74dc69a69de93a12e6d63), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortIOFile{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortIOFile{}, SortKItem{}}(Var'Unds'Gen1:SortIOFile{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisIOFile{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("0512dee3542dc027fbb3e8109dd7eda0d57c779d50e74dc69a69de93a12e6d63"), owise{}()]

// rule isIOFile(inj{IOFile,KItem}(IOFile))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e265f4f40b46b033479ce783a161791d2f3390b848921b8d137e83f3f513fc0a)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIOFile{}, SortKItem{}}(VarIOFile:SortIOFile{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisIOFile{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("e265f4f40b46b033479ce783a161791d2f3390b848921b8d137e83f3f513fc0a")]

// rule isIOInt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a8647511396f0c9a09435045b00a5e7b4372d1d771597873d8bd8dc687456707), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortIOInt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortIOInt{}, SortKItem{}}(Var'Unds'Gen1:SortIOInt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisIOInt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("a8647511396f0c9a09435045b00a5e7b4372d1d771597873d8bd8dc687456707"), owise{}()]

// rule isIOInt(inj{IOInt,KItem}(IOInt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e744736c885f38e99587884080e17e1ddd231da39bcbdcb445d10f52b6675232)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIOInt{}, SortKItem{}}(VarIOInt:SortIOInt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisIOInt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("e744736c885f38e99587884080e17e1ddd231da39bcbdcb445d10f52b6675232")]

// rule isIOString(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c2c1cfa5b8d1f4508bc208f23ab583f3e9b32659aec4f64e0228e3704bd22a07), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortIOString{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortIOString{}, SortKItem{}}(Var'Unds'Gen0:SortIOString{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisIOString{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("c2c1cfa5b8d1f4508bc208f23ab583f3e9b32659aec4f64e0228e3704bd22a07"), owise{}()]

// rule isIOString(inj{IOString,KItem}(IOString))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(febfbad427936ffed4a4f974d1061ec9b65a4d6751c5a4e0e31661905c3f9e1e)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIOString{}, SortKItem{}}(VarIOString:SortIOString{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisIOString{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("febfbad427936ffed4a4f974d1061ec9b65a4d6751c5a4e0e31661905c3f9e1e")]

// rule isId(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(79aa211b9cca8ff345580e936f59ebe000c9a0be28b59d063bd40ac3b72d72de), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortId{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortId{}, SortKItem{}}(Var'Unds'Gen0:SortId{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisId{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("79aa211b9cca8ff345580e936f59ebe000c9a0be28b59d063bd40ac3b72d72de"), owise{}()]

// rule isId(inj{Id,KItem}(Id))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f024b5fa3f428dab8c832862d8a13219a64369be25641326400611b32ae8843d)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortId{}, SortKItem{}}(VarId:SortId{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisId{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("f024b5fa3f428dab8c832862d8a13219a64369be25641326400611b32ae8843d")]

// rule isIdCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8d7c90345de5c81f0b5c6922a2bff10de4cf0c42b20b0125be4b568b324422c4), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortIdCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortIdCell{}, SortKItem{}}(Var'Unds'Gen1:SortIdCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisIdCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("8d7c90345de5c81f0b5c6922a2bff10de4cf0c42b20b0125be4b568b324422c4"), owise{}()]

// rule isIdCell(inj{IdCell,KItem}(IdCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(73020a53592acbac1d04790c4774758426d83d6fe2e29744e101c40df700c7d6)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIdCell{}, SortKItem{}}(VarIdCell:SortIdCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisIdCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("73020a53592acbac1d04790c4774758426d83d6fe2e29744e101c40df700c7d6")]

// rule isIdCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0cf2774b1a91be22c5da780a72c377762fc92df13db5840dda3fa4aee2ae1292), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortIdCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortIdCellOpt{}, SortKItem{}}(Var'Unds'Gen1:SortIdCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisIdCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("0cf2774b1a91be22c5da780a72c377762fc92df13db5840dda3fa4aee2ae1292"), owise{}()]

// rule isIdCellOpt(inj{IdCellOpt,KItem}(IdCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3363447a9686305d5f5c655945cc9274e56380a3bc43a5a3e605ebd4160fddf9)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIdCellOpt{}, SortKItem{}}(VarIdCellOpt:SortIdCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisIdCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("3363447a9686305d5f5c655945cc9274e56380a3bc43a5a3e605ebd4160fddf9")]

// rule isInputCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0f3f6de85272a791e98f8c9a8d73d1d4dc93b38084061bfdd39cf4d531202358), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortInputCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortInputCell{}, SortKItem{}}(Var'Unds'Gen0:SortInputCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisInputCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("0f3f6de85272a791e98f8c9a8d73d1d4dc93b38084061bfdd39cf4d531202358"), owise{}()]

// rule isInputCell(inj{InputCell,KItem}(InputCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e058fe7a35081745ba8f9c117af82e0e2fe525547b2b5337f892d7e7269f224c)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortInputCell{}, SortKItem{}}(VarInputCell:SortInputCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisInputCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("e058fe7a35081745ba8f9c117af82e0e2fe525547b2b5337f892d7e7269f224c")]

// rule isInputCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6fbfb117c75d43597c9668d723891287171264654854dce7138606d5531e55a9), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortInputCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortInputCellOpt{}, SortKItem{}}(Var'Unds'Gen0:SortInputCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisInputCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("6fbfb117c75d43597c9668d723891287171264654854dce7138606d5531e55a9"), owise{}()]

// rule isInputCellOpt(inj{InputCellOpt,KItem}(InputCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d50d1f05284690b014b97774f94290c5860fb6ad5058073acdda34fc877681f3)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortInputCellOpt{}, SortKItem{}}(VarInputCellOpt:SortInputCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisInputCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("d50d1f05284690b014b97774f94290c5860fb6ad5058073acdda34fc877681f3")]

// rule isInt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5c9850befff40cc79151dbc5a8999b5ffaad767f244ed97f9f29b56b7170bf24), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortInt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortInt{}, SortKItem{}}(Var'Unds'Gen0:SortInt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisInt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("5c9850befff40cc79151dbc5a8999b5ffaad767f244ed97f9f29b56b7170bf24"), owise{}()]

// rule isInt(inj{Int,KItem}(Int))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(92664aa821c8898ff16b4e72ad0bdf363f755c7660d28dcb69c129a2c94bc6b5)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortInt{}, SortKItem{}}(VarInt:SortInt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisInt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("92664aa821c8898ff16b4e72ad0bdf363f755c7660d28dcb69c129a2c94bc6b5")]

// rule isK(K)=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(16ff77cff0ef50026a8b3f4614b87bda465701918596b7ad2280baffff56f847)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisK{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("16ff77cff0ef50026a8b3f4614b87bda465701918596b7ad2280baffff56f847")]

// rule isKCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1668e9146ab7dd7867682198dd9dddc0c7c88d8f9fad9ed2366229fc4db18733), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortKCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortKCell{}, SortKItem{}}(Var'Unds'Gen1:SortKCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisKCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("1668e9146ab7dd7867682198dd9dddc0c7c88d8f9fad9ed2366229fc4db18733"), owise{}()]

// rule isKCell(inj{KCell,KItem}(KCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2695222b1238f711f8a356c0a1bc0ac418d7bd78fd3282e7c60882e2631a46df)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortKCell{}, SortKItem{}}(VarKCell:SortKCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisKCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("2695222b1238f711f8a356c0a1bc0ac418d7bd78fd3282e7c60882e2631a46df")]

// rule isKCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(fa44a9c94132ade195fc2cb566fa82471e4592c977a49183ac2142c5062701ca), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortKCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortKCellOpt{}, SortKItem{}}(Var'Unds'Gen0:SortKCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisKCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("fa44a9c94132ade195fc2cb566fa82471e4592c977a49183ac2142c5062701ca"), owise{}()]

// rule isKCellOpt(inj{KCellOpt,KItem}(KCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1516473b1e153a368c273997543a4378ad451e5e828db8e289f4447f7e5228a5)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortKCellOpt{}, SortKItem{}}(VarKCellOpt:SortKCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisKCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("1516473b1e153a368c273997543a4378ad451e5e828db8e289f4447f7e5228a5")]

// rule isKConfigVar(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f1c02853e001635e66a06d14d1cd322a996f4acbe38a7f9c88df6c97ea6a4677), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortKConfigVar{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortKConfigVar{}, SortKItem{}}(Var'Unds'Gen1:SortKConfigVar{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisKConfigVar{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("f1c02853e001635e66a06d14d1cd322a996f4acbe38a7f9c88df6c97ea6a4677"), owise{}()]

// rule isKConfigVar(inj{KConfigVar,KItem}(KConfigVar))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0ef0a00bb321f2c2a62a3239327de70ecb8e907a950cd20034c46b84e040ebcd)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortKConfigVar{}, SortKItem{}}(VarKConfigVar:SortKConfigVar{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisKConfigVar{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("0ef0a00bb321f2c2a62a3239327de70ecb8e907a950cd20034c46b84e040ebcd")]

// rule isKItem(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f766beabd3e632a98e221201d003f26f45f1feef2aff6da0ab07edde06a5d99d), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortKItem{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(Var'Unds'Gen1:SortKItem{},dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisKItem{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("f766beabd3e632a98e221201d003f26f45f1feef2aff6da0ab07edde06a5d99d"), owise{}()]

// rule isKItem(KItem)=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ed3c25a7dab5e5fbc101589e2fa74ac91aa107f051d22a01378222d08643373c)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(VarKItem:SortKItem{},dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisKItem{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("ed3c25a7dab5e5fbc101589e2fa74ac91aa107f051d22a01378222d08643373c")]

// rule isKResult(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b74c72133f88a5a621a948f57a9e1abd3144eb8d539c42ea330b3898a93cef77), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortKResult{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortKResult{}, SortKItem{}}(Var'Unds'Gen0:SortKResult{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisKResult{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("b74c72133f88a5a621a948f57a9e1abd3144eb8d539c42ea330b3898a93cef77"), owise{}()]

// rule isKResult(inj{KResult,KItem}(KResult))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f4c2469bcff9527515b6d36f16040307917bda61067d10b85fb531e142483bee)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortKResult{}, SortKItem{}}(VarKResult:SortKResult{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisKResult{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("f4c2469bcff9527515b6d36f16040307917bda61067d10b85fb531e142483bee")]

// rule isList(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0b6d1ffc254fbf57473abfe22e81bcfa646561c43d4e2cc175eab60cfb2b68aa), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortList{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortList{}, SortKItem{}}(Var'Unds'Gen1:SortList{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisList{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("0b6d1ffc254fbf57473abfe22e81bcfa646561c43d4e2cc175eab60cfb2b68aa"), owise{}()]

// rule isList(inj{List,KItem}(List))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7d4dddf5bbdb61cfd11fb9be1071be7bd551cf186607cf6f493cfade3221c446)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortList{}, SortKItem{}}(VarList:SortList{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisList{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("7d4dddf5bbdb61cfd11fb9be1071be7bd551cf186607cf6f493cfade3221c446")]

// rule isMap(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5da72349a323db3019243ab26f08b728d336c1a52aecaa0bcb7de4adae14bd71), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortMap{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortMap{}, SortKItem{}}(Var'Unds'Gen1:SortMap{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisMap{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("5da72349a323db3019243ab26f08b728d336c1a52aecaa0bcb7de4adae14bd71"), owise{}()]

// rule isMap(inj{Map,KItem}(Map))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4879c0fcf6b7d7f3d6b751e4f460f8dced005a44ae5ff600cffcea784cf58795)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMap{}, SortKItem{}}(VarMap:SortMap{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisMap{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("4879c0fcf6b7d7f3d6b751e4f460f8dced005a44ae5ff600cffcea784cf58795")]

// rule isNextLocCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9ade8a726322bf13664862342e55cd590b354c0cc7033c001e60bddb775f1553), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortNextLocCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortNextLocCell{}, SortKItem{}}(Var'Unds'Gen0:SortNextLocCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisNextLocCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("9ade8a726322bf13664862342e55cd590b354c0cc7033c001e60bddb775f1553"), owise{}()]

// rule isNextLocCell(inj{NextLocCell,KItem}(NextLocCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b695baef67c554a1058db6603a0d54a093476077c041b0f351fe2cc82a28a48e)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortNextLocCell{}, SortKItem{}}(VarNextLocCell:SortNextLocCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisNextLocCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("b695baef67c554a1058db6603a0d54a093476077c041b0f351fe2cc82a28a48e")]

// rule isNextLocCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(fe673c1f6914fba4bdebdefea175d1f16d888e1d4ad4d6431f3602193139e0e6), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortNextLocCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortNextLocCellOpt{}, SortKItem{}}(Var'Unds'Gen0:SortNextLocCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisNextLocCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("fe673c1f6914fba4bdebdefea175d1f16d888e1d4ad4d6431f3602193139e0e6"), owise{}()]

// rule isNextLocCellOpt(inj{NextLocCellOpt,KItem}(NextLocCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a4605686b1c1f515c7033f97dd87472304c1a07e6a03bb251c2feeb87fe1ad10)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortNextLocCellOpt{}, SortKItem{}}(VarNextLocCellOpt:SortNextLocCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisNextLocCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("a4605686b1c1f515c7033f97dd87472304c1a07e6a03bb251c2feeb87fe1ad10")]

// rule isOutputCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f92332c8ffedead3afae8c15e2891ee2ee8bbd82a47d04f8149d0f82c1c60de9), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortOutputCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortOutputCell{}, SortKItem{}}(Var'Unds'Gen0:SortOutputCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisOutputCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("f92332c8ffedead3afae8c15e2891ee2ee8bbd82a47d04f8149d0f82c1c60de9"), owise{}()]

// rule isOutputCell(inj{OutputCell,KItem}(OutputCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(054241e86a136983b3863c6210fcd33d06af3fe717735eec0904da6fc0a80f32)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortOutputCell{}, SortKItem{}}(VarOutputCell:SortOutputCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisOutputCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("054241e86a136983b3863c6210fcd33d06af3fe717735eec0904da6fc0a80f32")]

// rule isOutputCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0429fbc63cdca18e8570183a69d291b55ff380ce968bb5c5d4a17ac97ed47508), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortOutputCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortOutputCellOpt{}, SortKItem{}}(Var'Unds'Gen0:SortOutputCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisOutputCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("0429fbc63cdca18e8570183a69d291b55ff380ce968bb5c5d4a17ac97ed47508"), owise{}()]

// rule isOutputCellOpt(inj{OutputCellOpt,KItem}(OutputCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0d87738599cd93822056eaa8b6a2b9967cd14d8f1b0aeb94c9ad20168a7162d2)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortOutputCellOpt{}, SortKItem{}}(VarOutputCellOpt:SortOutputCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisOutputCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("0d87738599cd93822056eaa8b6a2b9967cd14d8f1b0aeb94c9ad20168a7162d2")]

// rule isParam(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9578fb0ae01049a8d77998b849a0921b029e239ab88c25663b383c19cc0828e9), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortParam{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortParam{}, SortKItem{}}(Var'Unds'Gen0:SortParam{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisParam{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("9578fb0ae01049a8d77998b849a0921b029e239ab88c25663b383c19cc0828e9"), owise{}()]

// rule isParam(inj{Param,KItem}(Param))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3dfd05fd166b4496f8168bc667232ee7667db3ce7fab8163709689e5c31c4fe8)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortParam{}, SortKItem{}}(VarParam:SortParam{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisParam{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("3dfd05fd166b4496f8168bc667232ee7667db3ce7fab8163709689e5c31c4fe8")]

// rule isParams(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8f36b4d6f54658a3d12892c725027bc6d9df1fb4b32c28933cf48ee896cfd255), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortParams{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortParams{}, SortKItem{}}(Var'Unds'Gen0:SortParams{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisParams{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("8f36b4d6f54658a3d12892c725027bc6d9df1fb4b32c28933cf48ee896cfd255"), owise{}()]

// rule isParams(inj{Params,KItem}(Params))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5d673fe9fd08758d67688d7742fb7500af0b2c27b28e9fa7eb502e54d7dae31b)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortParams{}, SortKItem{}}(VarParams:SortParams{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisParams{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("5d673fe9fd08758d67688d7742fb7500af0b2c27b28e9fa7eb502e54d7dae31b")]

// rule isReturnTypeCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1adf98f605e81ebbefcac89b3695c79b938f4bdf31434eb5b7ce7350a4be9b1e), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortReturnTypeCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortReturnTypeCell{}, SortKItem{}}(Var'Unds'Gen1:SortReturnTypeCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisReturnTypeCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("1adf98f605e81ebbefcac89b3695c79b938f4bdf31434eb5b7ce7350a4be9b1e"), owise{}()]

// rule isReturnTypeCell(inj{ReturnTypeCell,KItem}(ReturnTypeCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(03b78bc4aa962a70de3244b9bafd0afc9705ad0d93324d7eb60e523d358217c1)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortReturnTypeCell{}, SortKItem{}}(VarReturnTypeCell:SortReturnTypeCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisReturnTypeCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("03b78bc4aa962a70de3244b9bafd0afc9705ad0d93324d7eb60e523d358217c1")]

// rule isReturnTypeCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b8f3974566819d4a45d49b9f7f5d537bb6d0e907978efb9497aa97961da5595f), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortReturnTypeCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortReturnTypeCellOpt{}, SortKItem{}}(Var'Unds'Gen0:SortReturnTypeCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisReturnTypeCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("b8f3974566819d4a45d49b9f7f5d537bb6d0e907978efb9497aa97961da5595f"), owise{}()]

// rule isReturnTypeCellOpt(inj{ReturnTypeCellOpt,KItem}(ReturnTypeCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(85812cb25e233262d6f286afc2d2e1dce4a78ce9bb88123cf56fc18eb08b2d29)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortReturnTypeCellOpt{}, SortKItem{}}(VarReturnTypeCellOpt:SortReturnTypeCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisReturnTypeCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("85812cb25e233262d6f286afc2d2e1dce4a78ce9bb88123cf56fc18eb08b2d29")]

// rule isSet(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4bb33358689dc4ec69171f146dc69c169560a878b09ca872d2c4da9e2dbd0d5e), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortSet{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortSet{}, SortKItem{}}(Var'Unds'Gen0:SortSet{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisSet{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("4bb33358689dc4ec69171f146dc69c169560a878b09ca872d2c4da9e2dbd0d5e"), owise{}()]

// rule isSet(inj{Set,KItem}(Set))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f205bc460bdb728b4c3458643699be30d519db4d8b13e80e2c27082b9e846e80)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortSet{}, SortKItem{}}(VarSet:SortSet{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisSet{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("f205bc460bdb728b4c3458643699be30d519db4d8b13e80e2c27082b9e846e80")]

// rule isStmt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(bfbd8f698209913de7838833aa5ce9bf8fd7ed702ab717da9f0c69ab3ade7418), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortStmt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortStmt{}, SortKItem{}}(Var'Unds'Gen0:SortStmt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisStmt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("bfbd8f698209913de7838833aa5ce9bf8fd7ed702ab717da9f0c69ab3ade7418"), owise{}()]

// rule isStmt(inj{Stmt,KItem}(Stmt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(477089570fa6db8ee9dc9b0dc4c87d68cd3cc0589ba3949a5eb4981db25246df)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortStmt{}, SortKItem{}}(VarStmt:SortStmt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisStmt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("477089570fa6db8ee9dc9b0dc4c87d68cd3cc0589ba3949a5eb4981db25246df")]

// rule isStoreCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(33a0e6671e5516cd885d83ad5877873114fe441812c5347a4d52995f1ad94aab), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortStoreCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortStoreCell{}, SortKItem{}}(Var'Unds'Gen1:SortStoreCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisStoreCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("33a0e6671e5516cd885d83ad5877873114fe441812c5347a4d52995f1ad94aab"), owise{}()]

// rule isStoreCell(inj{StoreCell,KItem}(StoreCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(263fb373387f648439377899d45b262e5c51926759bf2c8267de3417bbdadd55)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortStoreCell{}, SortKItem{}}(VarStoreCell:SortStoreCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisStoreCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("263fb373387f648439377899d45b262e5c51926759bf2c8267de3417bbdadd55")]

// rule isStoreCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(493799ac8a682a7b22ef72f02ec608d4f9cc76e4570c8ba582dc23634b2b3686), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortStoreCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortStoreCellOpt{}, SortKItem{}}(Var'Unds'Gen1:SortStoreCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisStoreCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("493799ac8a682a7b22ef72f02ec608d4f9cc76e4570c8ba582dc23634b2b3686"), owise{}()]

// rule isStoreCellOpt(inj{StoreCellOpt,KItem}(StoreCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2b6306e5c5c7ea25ad09bdafcc353f09f74824470ad9c87463c65ca63a636cd4)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortStoreCellOpt{}, SortKItem{}}(VarStoreCellOpt:SortStoreCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisStoreCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("2b6306e5c5c7ea25ad09bdafcc353f09f74824470ad9c87463c65ca63a636cd4")]

// rule isStream(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b9fdcc98671795de0892a224238b1cf1bc7c23c4ae78e3a8e2c9c24b975ea29b), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortStream{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortStream{}, SortKItem{}}(Var'Unds'Gen0:SortStream{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisStream{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("b9fdcc98671795de0892a224238b1cf1bc7c23c4ae78e3a8e2c9c24b975ea29b"), owise{}()]

// rule isStream(inj{Stream,KItem}(Stream))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(27e703343d82a904ab8f74cc74fe8c6870a94fa1f4df39e1c0230ae06e4783cc)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortStream{}, SortKItem{}}(VarStream:SortStream{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisStream{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("27e703343d82a904ab8f74cc74fe8c6870a94fa1f4df39e1c0230ae06e4783cc")]

// rule isString(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(771c9ac303cbf7ec1228dd7a6f0b5db7e43db7edb5d4582845e18d9d602cb63f), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortString{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortString{}, SortKItem{}}(Var'Unds'Gen0:SortString{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisString{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("771c9ac303cbf7ec1228dd7a6f0b5db7e43db7edb5d4582845e18d9d602cb63f"), owise{}()]

// rule isString(inj{String,KItem}(String))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(109ced650ead4a5092ddba090e1b8e181633ed0aa5c5f93bce9f88be215668ef)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortString{}, SortKItem{}}(VarString:SortString{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisString{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("109ced650ead4a5092ddba090e1b8e181633ed0aa5c5f93bce9f88be215668ef")]

// rule isTCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1d1c115130d3315d664ea538bb035ac90d0288970bd6922514ad32b5c8dcf4c4), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortTCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTCell{}, SortKItem{}}(Var'Unds'Gen0:SortTCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisTCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("1d1c115130d3315d664ea538bb035ac90d0288970bd6922514ad32b5c8dcf4c4"), owise{}()]

// rule isTCell(inj{TCell,KItem}(TCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0b19c6d63df1e9cd6abc786c6c34fbd1b1f97cae6bf9fdba7b1275a02bd51205)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTCell{}, SortKItem{}}(VarTCell:SortTCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisTCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("0b19c6d63df1e9cd6abc786c6c34fbd1b1f97cae6bf9fdba7b1275a02bd51205")]

// rule isTCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(bb6f7ef44788d69ec6b84a650f582638cbb3a7ee5dc001b75deff061c3f2b869), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortTCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTCellFragment{}, SortKItem{}}(Var'Unds'Gen1:SortTCellFragment{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisTCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("bb6f7ef44788d69ec6b84a650f582638cbb3a7ee5dc001b75deff061c3f2b869"), owise{}()]

// rule isTCellFragment(inj{TCellFragment,KItem}(TCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f1c94b538b3ecdc44697da9f227c0650540c8f233c5dba13f94071522c756c76)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTCellFragment{}, SortKItem{}}(VarTCellFragment:SortTCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisTCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("f1c94b538b3ecdc44697da9f227c0650540c8f233c5dba13f94071522c756c76")]

// rule isTCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a59defe6ac53b3129c2a5836b392863c76a0090b9aa2cd64999737194de1f55f), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortTCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTCellOpt{}, SortKItem{}}(Var'Unds'Gen1:SortTCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisTCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("a59defe6ac53b3129c2a5836b392863c76a0090b9aa2cd64999737194de1f55f"), owise{}()]

// rule isTCellOpt(inj{TCellOpt,KItem}(TCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2d9e2efc934a1108a68dec355c0ce9420ec8c2292a856744f5d9014a10f5888c)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTCellOpt{}, SortKItem{}}(VarTCellOpt:SortTCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisTCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("2d9e2efc934a1108a68dec355c0ce9420ec8c2292a856744f5d9014a10f5888c")]

// rule isTerminatedCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c7c14e07ce354cb3a21cfef1bea854fe5b23be404b0ca90a7e5afbbf745f81b3), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortTerminatedCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTerminatedCell{}, SortKItem{}}(Var'Unds'Gen1:SortTerminatedCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisTerminatedCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("c7c14e07ce354cb3a21cfef1bea854fe5b23be404b0ca90a7e5afbbf745f81b3"), owise{}()]

// rule isTerminatedCell(inj{TerminatedCell,KItem}(TerminatedCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(08e0dc9dd31000f866e452e6fd33d11e9f621acfaf8f01599355e4c8aa29dd89)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTerminatedCell{}, SortKItem{}}(VarTerminatedCell:SortTerminatedCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisTerminatedCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("08e0dc9dd31000f866e452e6fd33d11e9f621acfaf8f01599355e4c8aa29dd89")]

// rule isTerminatedCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(61930be807d51d764ba8dc638e09cebdbecbaa8096a010ee54ff1dfe5243f613), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortTerminatedCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTerminatedCellOpt{}, SortKItem{}}(Var'Unds'Gen0:SortTerminatedCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisTerminatedCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("61930be807d51d764ba8dc638e09cebdbecbaa8096a010ee54ff1dfe5243f613"), owise{}()]

// rule isTerminatedCellOpt(inj{TerminatedCellOpt,KItem}(TerminatedCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(476bf6fc256e0f732dd103497053d4408ef253bd7cb87b78cfd6f581c9825427)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTerminatedCellOpt{}, SortKItem{}}(VarTerminatedCellOpt:SortTerminatedCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisTerminatedCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("476bf6fc256e0f732dd103497053d4408ef253bd7cb87b78cfd6f581c9825427")]

// rule isThreadCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e88727e2e7c28c94330629c943b0abe99e6387e7a92fea1a3a7136e2c339fa07), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortThreadCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortThreadCell{}, SortKItem{}}(Var'Unds'Gen1:SortThreadCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisThreadCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("e88727e2e7c28c94330629c943b0abe99e6387e7a92fea1a3a7136e2c339fa07"), owise{}()]

// rule isThreadCell(inj{ThreadCell,KItem}(ThreadCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(541b08557635d472f82cb50c2f7ad9eee01151e305f0fc595fd361ec113422b5)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortThreadCell{}, SortKItem{}}(VarThreadCell:SortThreadCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisThreadCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("541b08557635d472f82cb50c2f7ad9eee01151e305f0fc595fd361ec113422b5")]

// rule isThreadCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c3289560aff2b469c05ffb434763413b4a860c809f0a3d6a289133e37544d724), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortThreadCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortThreadCellFragment{}, SortKItem{}}(Var'Unds'Gen0:SortThreadCellFragment{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisThreadCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("c3289560aff2b469c05ffb434763413b4a860c809f0a3d6a289133e37544d724"), owise{}()]

// rule isThreadCellFragment(inj{ThreadCellFragment,KItem}(ThreadCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1c59ef93d0061cc84b55f0e7c246be465d5cda2f3a006255445694a5bd95c233)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortThreadCellFragment{}, SortKItem{}}(VarThreadCellFragment:SortThreadCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisThreadCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("1c59ef93d0061cc84b55f0e7c246be465d5cda2f3a006255445694a5bd95c233")]

// rule isThreadCellMap(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d49a4779a46832da736d6d5055eeb54052fb6e39513161043a25c4bdf47bd7b7), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortThreadCellMap{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortThreadCellMap{}, SortKItem{}}(Var'Unds'Gen1:SortThreadCellMap{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisThreadCellMap{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("d49a4779a46832da736d6d5055eeb54052fb6e39513161043a25c4bdf47bd7b7"), owise{}()]

// rule isThreadCellMap(inj{ThreadCellMap,KItem}(ThreadCellMap))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6eed952bb4883e4664a596bbd8466f28ddd039150f12afa8567b1447becd9274)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortThreadCellMap{}, SortKItem{}}(VarThreadCellMap:SortThreadCellMap{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisThreadCellMap{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("6eed952bb4883e4664a596bbd8466f28ddd039150f12afa8567b1447becd9274")]

// rule isThreadsCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f384f07eaba0cbbc10340ada93d8c4c1676f550396026a41aa001f2adf22020c), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortThreadsCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortThreadsCell{}, SortKItem{}}(Var'Unds'Gen1:SortThreadsCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisThreadsCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("f384f07eaba0cbbc10340ada93d8c4c1676f550396026a41aa001f2adf22020c"), owise{}()]

// rule isThreadsCell(inj{ThreadsCell,KItem}(ThreadsCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b1951c2cbb7822ac249d6d34f514fa5f074747e6e3b0e1ff8a529a27a7d0f15c)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortThreadsCell{}, SortKItem{}}(VarThreadsCell:SortThreadsCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisThreadsCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("b1951c2cbb7822ac249d6d34f514fa5f074747e6e3b0e1ff8a529a27a7d0f15c")]

// rule isThreadsCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4af291b02905c487c7516be48f46a3d607e16efb5893e24d40c11fd9e84c07a0), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortThreadsCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortThreadsCellFragment{}, SortKItem{}}(Var'Unds'Gen1:SortThreadsCellFragment{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisThreadsCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("4af291b02905c487c7516be48f46a3d607e16efb5893e24d40c11fd9e84c07a0"), owise{}()]

// rule isThreadsCellFragment(inj{ThreadsCellFragment,KItem}(ThreadsCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(af41498fb93ed766ca100fee218a0e05b5f215cc3522aa83ca5afd9a12e36f2d)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortThreadsCellFragment{}, SortKItem{}}(VarThreadsCellFragment:SortThreadsCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisThreadsCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("af41498fb93ed766ca100fee218a0e05b5f215cc3522aa83ca5afd9a12e36f2d")]

// rule isThreadsCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(75dd9567495050251403c60033d5f84375052a0b1247483620418eb4a960a590), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortThreadsCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortThreadsCellOpt{}, SortKItem{}}(Var'Unds'Gen0:SortThreadsCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisThreadsCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("75dd9567495050251403c60033d5f84375052a0b1247483620418eb4a960a590"), owise{}()]

// rule isThreadsCellOpt(inj{ThreadsCellOpt,KItem}(ThreadsCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9a26acd6600aa95cc57cec80c6db303191a21f521d7c6df58cadba4bda5757db)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortThreadsCellOpt{}, SortKItem{}}(VarThreadsCellOpt:SortThreadsCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisThreadsCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("9a26acd6600aa95cc57cec80c6db303191a21f521d7c6df58cadba4bda5757db")]

// rule isType(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0e253c0ab26906841e6d9cae62e4089a8f1d6048327c8b99c3a908f975123f08), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortType{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortType{}, SortKItem{}}(Var'Unds'Gen1:SortType{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisType{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("0e253c0ab26906841e6d9cae62e4089a8f1d6048327c8b99c3a908f975123f08"), owise{}()]

// rule isType(inj{Type,KItem}(Type))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d677712c390bbd59e0bb13d7bbc0a80d772b2a419a7915fe8bdb0e02ba62ac7c)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortType{}, SortKItem{}}(VarType:SortType{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisType{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("d677712c390bbd59e0bb13d7bbc0a80d772b2a419a7915fe8bdb0e02ba62ac7c")]

// rule isTypes(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f9b1f5921f732d8ee27d5de2168bcb0e527fc0a160dfdaf52fea4038715ce89e), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortTypes{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTypes{}, SortKItem{}}(Var'Unds'Gen0:SortTypes{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisTypes{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("f9b1f5921f732d8ee27d5de2168bcb0e527fc0a160dfdaf52fea4038715ce89e"), owise{}()]

// rule isTypes(inj{Types,KItem}(Types))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(30cb4df680d159045abe65b2bc6f1f4f953a4d7f7e8eb85f9e732f57318a3033)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTypes{}, SortKItem{}}(VarTypes:SortTypes{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisTypes{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("30cb4df680d159045abe65b2bc6f1f4f953a4d7f7e8eb85f9e732f57318a3033")]

// rule isVal(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4a97a3cdc97041f9c9ccf2aa7f3aae50aa8a477ddd2452cf26ea68d04ac2bdb8), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortVal{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortVal{}, SortKItem{}}(Var'Unds'Gen0:SortVal{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisVal{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("4a97a3cdc97041f9c9ccf2aa7f3aae50aa8a477ddd2452cf26ea68d04ac2bdb8"), owise{}()]

// rule isVal(inj{Val,KItem}(Val))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b5a0241c17a4586755b3028c3e3b0365371f29f68b2a247bb54c7837b5f7b8a3)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortVal{}, SortKItem{}}(VarVal:SortVal{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisVal{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("b5a0241c17a4586755b3028c3e3b0365371f29f68b2a247bb54c7837b5f7b8a3")]

// rule isVals(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b60354a36f9f38c177ed7c4c34a32eb139e654cff189be320efec8cd0579178b), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortVals{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortVals{}, SortKItem{}}(Var'Unds'Gen0:SortVals{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisVals{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("b60354a36f9f38c177ed7c4c34a32eb139e654cff189be320efec8cd0579178b"), owise{}()]

// rule isVals(inj{Vals,KItem}(Vals))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(66a6d698755796480e7a58ce71677e50f8c057cfec148261225102b5f19e1c1b)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortVals{}, SortKItem{}}(VarVals:SortVals{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisVals{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("66a6d698755796480e7a58ce71677e50f8c057cfec148261225102b5f19e1c1b")]

// rule isXstackCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c2db0cf44a5678f754d1bdab7ee04981a53ea36487fd8e0a47cd998643afbb9b), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortXstackCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortXstackCell{}, SortKItem{}}(Var'Unds'Gen1:SortXstackCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisXstackCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("c2db0cf44a5678f754d1bdab7ee04981a53ea36487fd8e0a47cd998643afbb9b"), owise{}()]

// rule isXstackCell(inj{XstackCell,KItem}(XstackCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(10584a74e5d9821639c22466907b5bc59d14000f2f517e52420bc855c2f789f3)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortXstackCell{}, SortKItem{}}(VarXstackCell:SortXstackCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisXstackCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("10584a74e5d9821639c22466907b5bc59d14000f2f517e52420bc855c2f789f3")]

// rule isXstackCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(21e4b3dcefc325d90bac157a01e291cd1202302bd6eb85d32c10cb5f3f41e074), owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortXstackCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortXstackCellOpt{}, SortKItem{}}(Var'Unds'Gen0:SortXstackCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisXstackCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("21e4b3dcefc325d90bac157a01e291cd1202302bd6eb85d32c10cb5f3f41e074"), owise{}()]

// rule isXstackCellOpt(inj{XstackCellOpt,KItem}(XstackCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(be82c14770decc50f573b63d855ca801ee3af91603ef164becbce36366368b4b)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortXstackCellOpt{}, SortKItem{}}(VarXstackCellOpt:SortXstackCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisXstackCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("be82c14770decc50f573b63d855ca801ee3af91603ef164becbce36366368b4b")]

// rule `minInt(_,_)_INT-COMMON_Int_Int_Int`(I1,I2)=>I1 requires `_<=Int_`(I1,I2) ensures #token("true","Bool") [UNIQUE_ID(fb09b6acc4366cb77203e07c4efe8a9cf304e1bac9fb0664deea05d3eb9a80c6), org.kframework.attributes.Location(Location(1426,8,1426,57)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-LT-Eqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))),
    \equals{SortInt{},R} (
      LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(X0:SortInt{},X1:SortInt{}),
     \and{SortInt{}} (
       VarI1:SortInt{},
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("fb09b6acc4366cb77203e07c4efe8a9cf304e1bac9fb0664deea05d3eb9a80c6"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1426,8,1426,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]")]

// rule `minInt(_,_)_INT-COMMON_Int_Int_Int`(I1,I2)=>I2 requires `_>=Int_`(I1,I2) ensures #token("true","Bool") [UNIQUE_ID(e1effeabf96bb3a3beffd5b679ad5df95c4f8bbf42872b0793331e52a8470fb3), org.kframework.attributes.Location(Location(1427,8,1427,57)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-GT-Eqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))),
    \equals{SortInt{},R} (
      LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(X0:SortInt{},X1:SortInt{}),
     \and{SortInt{}} (
       VarI2:SortInt{},
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("e1effeabf96bb3a3beffd5b679ad5df95c4f8bbf42872b0793331e52a8470fb3"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1427,8,1427,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]")]

// rule `mkDecls(_,_)_SIMPLE-TYPED-DYNAMIC_Stmt_Params_Vals`(`.List{"_,__SIMPLE-TYPED-DYNAMIC-SYNTAX_Params_Param_Params"}_Params`(.KList),`.List{"_,__SIMPLE-TYPED-DYNAMIC-SYNTAX_Vals_Val_Vals"}_Vals`(.KList))=>inj{Block,Stmt}(`{}_SIMPLE-TYPED-DYNAMIC-SYNTAX_Block`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ea8d22c27f7d3696d76d3334450a2f74acdeda846fce7e54370cf2302ff7e9f3), org.kframework.attributes.Location(Location(315,8,315,36)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortParams{}, R} (
            X0:SortParams{},
            Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Params'Unds'Param'Unds'Params'QuotRBraUnds'Params{}()
          ),\and{R} (
          \in{SortVals{}, R} (
            X1:SortVals{},
            Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}()
          ),
          \top{R} ()
        ))),
    \equals{SortStmt{},R} (
      LblmkDecls'LParUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Stmt'Unds'Params'Unds'Vals{}(X0:SortParams{},X1:SortVals{}),
     \and{SortStmt{}} (
       inj{SortBlock{}, SortStmt{}}(Lbl'LBraRBraUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Block{}()),
        \top{SortStmt{}}())))
  [UNIQUE'Unds'ID{}("ea8d22c27f7d3696d76d3334450a2f74acdeda846fce7e54370cf2302ff7e9f3"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(315,8,315,36)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `mkDecls(_,_)_SIMPLE-TYPED-DYNAMIC_Stmt_Params_Vals`(`_,__SIMPLE-TYPED-DYNAMIC-SYNTAX_Params_Param_Params`(`___SIMPLE-TYPED-DYNAMIC-SYNTAX_Param_Type_Id`(T,X),Ps),`_,__SIMPLE-TYPED-DYNAMIC-SYNTAX_Vals_Val_Vals`(V,Vs))=>`___SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Stmt_Stmt`(`__;_SIMPLE-TYPED-DYNAMIC-SYNTAX_Stmt_Type_Exps`(T,`_,__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exps_Exp_Exps`(`_=__SIMPLE-TYPED-DYNAMIC-SYNTAX_Exp_Exp_Exp`(inj{Id,Exp}(X),inj{Val,Exp}(V)),inj{Vals,Exps}(`.List{"_,__SIMPLE-TYPED-DYNAMIC-SYNTAX_Vals_Val_Vals"}_Vals`(.KList)))),`mkDecls(_,_)_SIMPLE-TYPED-DYNAMIC_Stmt_Params_Vals`(Ps,Vs)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(683eb60ea547ebbf0d7b40335d6b1fa0f4a1cbaa4303d2091051edbdbc81fafa), org.kframework.attributes.Location(Location(313,8,314,29)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortParams{}, R} (
            X0:SortParams{},
            Lbl'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Params'Unds'Param'Unds'Params{}(Lbl'UndsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Param'Unds'Type'Unds'Id{}(VarT:SortType{},VarX:SortId{}),VarPs:SortParams{})
          ),\and{R} (
          \in{SortVals{}, R} (
            X1:SortVals{},
            Lbl'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals{}(VarV:SortVal{},VarVs:SortVals{})
          ),
          \top{R} ()
        ))),
    \equals{SortStmt{},R} (
      LblmkDecls'LParUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Stmt'Unds'Params'Unds'Vals{}(X0:SortParams{},X1:SortVals{}),
     \and{SortStmt{}} (
       Lbl'UndsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(Lbl'UndsUndsSClnUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps{}(VarT:SortType{},Lbl'UndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(Lbl'UndsEqlsUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortId{}, SortExp{}}(VarX:SortId{}),inj{SortVal{}, SortExp{}}(VarV:SortVal{})),inj{SortVals{}, SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Vals'Unds'Val'Unds'Vals'QuotRBraUnds'Vals{}()))),LblmkDecls'LParUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Stmt'Unds'Params'Unds'Vals{}(VarPs:SortParams{},VarVs:SortVals{})),
        \top{SortStmt{}}())))
  [UNIQUE'Unds'ID{}("683eb60ea547ebbf0d7b40335d6b1fa0f4a1cbaa4303d2091051edbdbc81fafa"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(313,8,314,29)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `notBool_`(#token("false","Bool"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(17ebc68421572b8ebe609c068fb49cbb6cbbe3246e2142257ad8befdda38f415), org.kframework.attributes.Location(Location(1119,8,1119,29)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("false")
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblnotBool'Unds'{}(X0:SortBool{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("17ebc68421572b8ebe609c068fb49cbb6cbbe3246e2142257ad8befdda38f415"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1119,8,1119,29)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `notBool_`(#token("true","Bool"))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(53fc758ece1ff16581673016dfacc556cc30fcf6b3c35b586f001d76a1f9336c), org.kframework.attributes.Location(Location(1118,8,1118,29)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("true")
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblnotBool'Unds'{}(X0:SortBool{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("53fc758ece1ff16581673016dfacc556cc30fcf6b3c35b586f001d76a1f9336c"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1118,8,1118,29)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `project:#tempFile:fd`(#tempFile(K0,K1))=>K1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(adb3a6d90d2e5267333e61f4e4be032bebb5f7a513450887a845c863a2adf95d)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortIOFile{}, R} (
            X0:SortIOFile{},
            Lbl'Hash'tempFile{}(VarK0:SortString{},VarK1:SortInt{})
          ),
          \top{R} ()
        )),
    \equals{SortInt{},R} (
      Lblproject'ColnHash'tempFile'Coln'fd{}(X0:SortIOFile{}),
     \and{SortInt{}} (
       VarK1:SortInt{},
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("adb3a6d90d2e5267333e61f4e4be032bebb5f7a513450887a845c863a2adf95d")]

// rule `project:#tempFile:path`(#tempFile(K0,K1))=>K0 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0020b2718cda89e9c9f4d05915593ca66761a24dffb111c697ccc162278da8ea)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortIOFile{}, R} (
            X0:SortIOFile{},
            Lbl'Hash'tempFile{}(VarK0:SortString{},VarK1:SortInt{})
          ),
          \top{R} ()
        )),
    \equals{SortString{},R} (
      Lblproject'ColnHash'tempFile'Coln'path{}(X0:SortIOFile{}),
     \and{SortString{}} (
       VarK0:SortString{},
        \top{SortString{}}())))
  [UNIQUE'Unds'ID{}("0020b2718cda89e9c9f4d05915593ca66761a24dffb111c697ccc162278da8ea")]

// rule `project:#unknownIOError:errno`(#unknownIOError(K0))=>K0 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a36cde36a6581696f3d54614cc0d2d0864c2da35c6c8dc8d56daaf8b24199241)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortIOError{}, R} (
            X0:SortIOError{},
            Lbl'Hash'unknownIOError{}(VarK0:SortInt{})
          ),
          \top{R} ()
        )),
    \equals{SortInt{},R} (
      Lblproject'ColnHash'unknownIOError'Coln'errno{}(X0:SortIOError{}),
     \and{SortInt{}} (
       VarK0:SortInt{},
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("a36cde36a6581696f3d54614cc0d2d0864c2da35c6c8dc8d56daaf8b24199241")]

// rule `project:Block`(inj{Block,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(85169c02924adb02b41be561762138c14d89ae8c9d3181b555ead907c42e2eb9), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBlock{}, SortKItem{}}(VarK:SortBlock{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBlock{},R} (
      Lblproject'Coln'Block{}(X0:SortK{}),
     \and{SortBlock{}} (
       VarK:SortBlock{},
        \top{SortBlock{}}())))
  [UNIQUE'Unds'ID{}("85169c02924adb02b41be561762138c14d89ae8c9d3181b555ead907c42e2eb9"), projection{}()]

// rule `project:Bool`(inj{Bool,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5872f0d5b8131216db7bc41e2c3a423e55f4b8581589fcbd1bf93b2ca6862d54), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBool{}, SortKItem{}}(VarK:SortBool{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      Lblproject'Coln'Bool{}(X0:SortK{}),
     \and{SortBool{}} (
       VarK:SortBool{},
        \top{SortBool{}}())))
  [UNIQUE'Unds'ID{}("5872f0d5b8131216db7bc41e2c3a423e55f4b8581589fcbd1bf93b2ca6862d54"), projection{}()]

// rule `project:BusyCell`(inj{BusyCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8813a6b39340c2ca16ddb0924791f2af808a2c8b20bf588fbe83448d5211a8c5), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBusyCell{}, SortKItem{}}(VarK:SortBusyCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBusyCell{},R} (
      Lblproject'Coln'BusyCell{}(X0:SortK{}),
     \and{SortBusyCell{}} (
       VarK:SortBusyCell{},
        \top{SortBusyCell{}}())))
  [UNIQUE'Unds'ID{}("8813a6b39340c2ca16ddb0924791f2af808a2c8b20bf588fbe83448d5211a8c5"), projection{}()]

// rule `project:BusyCellOpt`(inj{BusyCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(fb32ed69cd7a9358d3bfba81ff72f275766589c8055666c05ed886eb906c6299), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBusyCellOpt{}, SortKItem{}}(VarK:SortBusyCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBusyCellOpt{},R} (
      Lblproject'Coln'BusyCellOpt{}(X0:SortK{}),
     \and{SortBusyCellOpt{}} (
       VarK:SortBusyCellOpt{},
        \top{SortBusyCellOpt{}}())))
  [UNIQUE'Unds'ID{}("fb32ed69cd7a9358d3bfba81ff72f275766589c8055666c05ed886eb906c6299"), projection{}()]

// rule `project:ControlCell`(inj{ControlCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(07285d614d28227dcaad374fbe611cc7682bff2f58c9068428ec86252bbe2784), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortControlCell{}, SortKItem{}}(VarK:SortControlCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortControlCell{},R} (
      Lblproject'Coln'ControlCell{}(X0:SortK{}),
     \and{SortControlCell{}} (
       VarK:SortControlCell{},
        \top{SortControlCell{}}())))
  [UNIQUE'Unds'ID{}("07285d614d28227dcaad374fbe611cc7682bff2f58c9068428ec86252bbe2784"), projection{}()]

// rule `project:ControlCellFragment`(inj{ControlCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8d828864f9af0718f366674a2d6a9f31ea3ea32d701ee96d843c7f25b44e3220), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortControlCellFragment{}, SortKItem{}}(VarK:SortControlCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortControlCellFragment{},R} (
      Lblproject'Coln'ControlCellFragment{}(X0:SortK{}),
     \and{SortControlCellFragment{}} (
       VarK:SortControlCellFragment{},
        \top{SortControlCellFragment{}}())))
  [UNIQUE'Unds'ID{}("8d828864f9af0718f366674a2d6a9f31ea3ea32d701ee96d843c7f25b44e3220"), projection{}()]

// rule `project:ControlCellOpt`(inj{ControlCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6c3fa2b7398957b44b06dd717c2e8cbf38f3b00e0308e5a92f9debb8fe763605), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortControlCellOpt{}, SortKItem{}}(VarK:SortControlCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortControlCellOpt{},R} (
      Lblproject'Coln'ControlCellOpt{}(X0:SortK{}),
     \and{SortControlCellOpt{}} (
       VarK:SortControlCellOpt{},
        \top{SortControlCellOpt{}}())))
  [UNIQUE'Unds'ID{}("6c3fa2b7398957b44b06dd717c2e8cbf38f3b00e0308e5a92f9debb8fe763605"), projection{}()]

// rule `project:EnvCell`(inj{EnvCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b495a73a47df541669cce91cff95ac71b4384f2bb1cbf111a39169996baf1c21), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortEnvCell{}, SortKItem{}}(VarK:SortEnvCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortEnvCell{},R} (
      Lblproject'Coln'EnvCell{}(X0:SortK{}),
     \and{SortEnvCell{}} (
       VarK:SortEnvCell{},
        \top{SortEnvCell{}}())))
  [UNIQUE'Unds'ID{}("b495a73a47df541669cce91cff95ac71b4384f2bb1cbf111a39169996baf1c21"), projection{}()]

// rule `project:EnvCellOpt`(inj{EnvCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7b2185a82b0e56376fb20fa807d804be6799099fe18bf708a6578fc25d98742c), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortEnvCellOpt{}, SortKItem{}}(VarK:SortEnvCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortEnvCellOpt{},R} (
      Lblproject'Coln'EnvCellOpt{}(X0:SortK{}),
     \and{SortEnvCellOpt{}} (
       VarK:SortEnvCellOpt{},
        \top{SortEnvCellOpt{}}())))
  [UNIQUE'Unds'ID{}("7b2185a82b0e56376fb20fa807d804be6799099fe18bf708a6578fc25d98742c"), projection{}()]

// rule `project:Exp`(inj{Exp,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9cd2bc2f2919e88b7c91858d910ebc06ec69505e24015e7346a27913f6b3d0c7), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortExp{}, SortKItem{}}(VarK:SortExp{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortExp{},R} (
      Lblproject'Coln'Exp{}(X0:SortK{}),
     \and{SortExp{}} (
       VarK:SortExp{},
        \top{SortExp{}}())))
  [UNIQUE'Unds'ID{}("9cd2bc2f2919e88b7c91858d910ebc06ec69505e24015e7346a27913f6b3d0c7"), projection{}()]

// rule `project:Exps`(inj{Exps,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(331fb545486ec7658a42a59c02212f98269fbac46ed5ede15648aafb72b6948a), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortExps{}, SortKItem{}}(VarK:SortExps{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortExps{},R} (
      Lblproject'Coln'Exps{}(X0:SortK{}),
     \and{SortExps{}} (
       VarK:SortExps{},
        \top{SortExps{}}())))
  [UNIQUE'Unds'ID{}("331fb545486ec7658a42a59c02212f98269fbac46ed5ede15648aafb72b6948a"), projection{}()]

// rule `project:Float`(inj{Float,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ef206f477d884c0b6413273ff35b1206769cdb5a5ceba7b97d9e8e0a7b14e399), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFloat{}, SortKItem{}}(VarK:SortFloat{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortFloat{},R} (
      Lblproject'Coln'Float{}(X0:SortK{}),
     \and{SortFloat{}} (
       VarK:SortFloat{},
        \top{SortFloat{}}())))
  [UNIQUE'Unds'ID{}("ef206f477d884c0b6413273ff35b1206769cdb5a5ceba7b97d9e8e0a7b14e399"), projection{}()]

// rule `project:FstackCell`(inj{FstackCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(bfaa22868b850f830ee69b61126946af52c8b74246f4dd1a561e1d75580bac3c), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFstackCell{}, SortKItem{}}(VarK:SortFstackCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortFstackCell{},R} (
      Lblproject'Coln'FstackCell{}(X0:SortK{}),
     \and{SortFstackCell{}} (
       VarK:SortFstackCell{},
        \top{SortFstackCell{}}())))
  [UNIQUE'Unds'ID{}("bfaa22868b850f830ee69b61126946af52c8b74246f4dd1a561e1d75580bac3c"), projection{}()]

// rule `project:FstackCellOpt`(inj{FstackCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(bb0662ae03725c1b2a57759d55b9c1f7dd0a596b2e9b49f9c7e26f8600b632cd), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFstackCellOpt{}, SortKItem{}}(VarK:SortFstackCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortFstackCellOpt{},R} (
      Lblproject'Coln'FstackCellOpt{}(X0:SortK{}),
     \and{SortFstackCellOpt{}} (
       VarK:SortFstackCellOpt{},
        \top{SortFstackCellOpt{}}())))
  [UNIQUE'Unds'ID{}("bb0662ae03725c1b2a57759d55b9c1f7dd0a596b2e9b49f9c7e26f8600b632cd"), projection{}()]

// rule `project:GeneratedCounterCell`(inj{GeneratedCounterCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(63453db9d9aa121b63bb877e2fa4998d399ef82d2a1e4b90f87a32ba55401217), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedCounterCell{}, SortKItem{}}(VarK:SortGeneratedCounterCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortGeneratedCounterCell{},R} (
      Lblproject'Coln'GeneratedCounterCell{}(X0:SortK{}),
     \and{SortGeneratedCounterCell{}} (
       VarK:SortGeneratedCounterCell{},
        \top{SortGeneratedCounterCell{}}())))
  [UNIQUE'Unds'ID{}("63453db9d9aa121b63bb877e2fa4998d399ef82d2a1e4b90f87a32ba55401217"), projection{}()]

// rule `project:GeneratedCounterCellOpt`(inj{GeneratedCounterCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9325a900267ae528f7cd09f3b44b825dd9ff344c38d38383c08fa697cc67efca), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedCounterCellOpt{}, SortKItem{}}(VarK:SortGeneratedCounterCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortGeneratedCounterCellOpt{},R} (
      Lblproject'Coln'GeneratedCounterCellOpt{}(X0:SortK{}),
     \and{SortGeneratedCounterCellOpt{}} (
       VarK:SortGeneratedCounterCellOpt{},
        \top{SortGeneratedCounterCellOpt{}}())))
  [UNIQUE'Unds'ID{}("9325a900267ae528f7cd09f3b44b825dd9ff344c38d38383c08fa697cc67efca"), projection{}()]

// rule `project:GeneratedTopCell`(inj{GeneratedTopCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b0fabd8c7c81fe08ebd569aff59747d357e441ae1fcd05d9d594d57e38e3d55e), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedTopCell{}, SortKItem{}}(VarK:SortGeneratedTopCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortGeneratedTopCell{},R} (
      Lblproject'Coln'GeneratedTopCell{}(X0:SortK{}),
     \and{SortGeneratedTopCell{}} (
       VarK:SortGeneratedTopCell{},
        \top{SortGeneratedTopCell{}}())))
  [UNIQUE'Unds'ID{}("b0fabd8c7c81fe08ebd569aff59747d357e441ae1fcd05d9d594d57e38e3d55e"), projection{}()]

// rule `project:GeneratedTopCellFragment`(inj{GeneratedTopCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2084fac322aa142a07f881814b8a286bf62d5c6d05777b7aa715ccc534cf9a42), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedTopCellFragment{}, SortKItem{}}(VarK:SortGeneratedTopCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortGeneratedTopCellFragment{},R} (
      Lblproject'Coln'GeneratedTopCellFragment{}(X0:SortK{}),
     \and{SortGeneratedTopCellFragment{}} (
       VarK:SortGeneratedTopCellFragment{},
        \top{SortGeneratedTopCellFragment{}}())))
  [UNIQUE'Unds'ID{}("2084fac322aa142a07f881814b8a286bf62d5c6d05777b7aa715ccc534cf9a42"), projection{}()]

// rule `project:GenvCell`(inj{GenvCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(39ee8e7b9b22ecf13392284035bcbada370cf978c029c5d12f4df2e157ffe991), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGenvCell{}, SortKItem{}}(VarK:SortGenvCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortGenvCell{},R} (
      Lblproject'Coln'GenvCell{}(X0:SortK{}),
     \and{SortGenvCell{}} (
       VarK:SortGenvCell{},
        \top{SortGenvCell{}}())))
  [UNIQUE'Unds'ID{}("39ee8e7b9b22ecf13392284035bcbada370cf978c029c5d12f4df2e157ffe991"), projection{}()]

// rule `project:GenvCellOpt`(inj{GenvCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(fcc8036f6e452eae48f33e499d03759ee86bf1c6f9d9a4469281ca759323f0fd), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGenvCellOpt{}, SortKItem{}}(VarK:SortGenvCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortGenvCellOpt{},R} (
      Lblproject'Coln'GenvCellOpt{}(X0:SortK{}),
     \and{SortGenvCellOpt{}} (
       VarK:SortGenvCellOpt{},
        \top{SortGenvCellOpt{}}())))
  [UNIQUE'Unds'ID{}("fcc8036f6e452eae48f33e499d03759ee86bf1c6f9d9a4469281ca759323f0fd"), projection{}()]

// rule `project:HoldsCell`(inj{HoldsCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(df6d7101e7fd8a8b5e80a7434c06e0caecab00b6e36532ad0f0791b897921564), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortHoldsCell{}, SortKItem{}}(VarK:SortHoldsCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortHoldsCell{},R} (
      Lblproject'Coln'HoldsCell{}(X0:SortK{}),
     \and{SortHoldsCell{}} (
       VarK:SortHoldsCell{},
        \top{SortHoldsCell{}}())))
  [UNIQUE'Unds'ID{}("df6d7101e7fd8a8b5e80a7434c06e0caecab00b6e36532ad0f0791b897921564"), projection{}()]

// rule `project:HoldsCellOpt`(inj{HoldsCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(30b9c3ce55b6b9239f397edb2380c28c38c76194283f754728876352fa6e9e3c), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortHoldsCellOpt{}, SortKItem{}}(VarK:SortHoldsCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortHoldsCellOpt{},R} (
      Lblproject'Coln'HoldsCellOpt{}(X0:SortK{}),
     \and{SortHoldsCellOpt{}} (
       VarK:SortHoldsCellOpt{},
        \top{SortHoldsCellOpt{}}())))
  [UNIQUE'Unds'ID{}("30b9c3ce55b6b9239f397edb2380c28c38c76194283f754728876352fa6e9e3c"), projection{}()]

// rule `project:IOError`(inj{IOError,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7ffe32516a0c3941ee4ba99c0f779b50c13a06e7eeb613f97334efb61b50c3aa), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIOError{}, SortKItem{}}(VarK:SortIOError{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortIOError{},R} (
      Lblproject'Coln'IOError{}(X0:SortK{}),
     \and{SortIOError{}} (
       VarK:SortIOError{},
        \top{SortIOError{}}())))
  [UNIQUE'Unds'ID{}("7ffe32516a0c3941ee4ba99c0f779b50c13a06e7eeb613f97334efb61b50c3aa"), projection{}()]

// rule `project:IOFile`(inj{IOFile,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(09adbf7f680517f1f89e4e8c71d5bd247c4a2ea5d62e7c4aeb3153ab97239841), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIOFile{}, SortKItem{}}(VarK:SortIOFile{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortIOFile{},R} (
      Lblproject'Coln'IOFile{}(X0:SortK{}),
     \and{SortIOFile{}} (
       VarK:SortIOFile{},
        \top{SortIOFile{}}())))
  [UNIQUE'Unds'ID{}("09adbf7f680517f1f89e4e8c71d5bd247c4a2ea5d62e7c4aeb3153ab97239841"), projection{}()]

// rule `project:IOInt`(inj{IOInt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e39565377db8be1e421a86f0a0c31d0782a9af4aed7031245771fcb2a0152e06), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIOInt{}, SortKItem{}}(VarK:SortIOInt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortIOInt{},R} (
      Lblproject'Coln'IOInt{}(X0:SortK{}),
     \and{SortIOInt{}} (
       VarK:SortIOInt{},
        \top{SortIOInt{}}())))
  [UNIQUE'Unds'ID{}("e39565377db8be1e421a86f0a0c31d0782a9af4aed7031245771fcb2a0152e06"), projection{}()]

// rule `project:IOString`(inj{IOString,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(76a39386f0abf23155a1642ec64113306ae7c384a59c2e7f562d3c564efcc9a4), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIOString{}, SortKItem{}}(VarK:SortIOString{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortIOString{},R} (
      Lblproject'Coln'IOString{}(X0:SortK{}),
     \and{SortIOString{}} (
       VarK:SortIOString{},
        \top{SortIOString{}}())))
  [UNIQUE'Unds'ID{}("76a39386f0abf23155a1642ec64113306ae7c384a59c2e7f562d3c564efcc9a4"), projection{}()]

// rule `project:Id`(inj{Id,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(afcb3941b7c18d4b91d6ed8981582d58e0dc006425e9889e9891c2a7c2b93554), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortId{}, SortKItem{}}(VarK:SortId{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortId{},R} (
      Lblproject'Coln'Id{}(X0:SortK{}),
     \and{SortId{}} (
       VarK:SortId{},
        \top{SortId{}}())))
  [UNIQUE'Unds'ID{}("afcb3941b7c18d4b91d6ed8981582d58e0dc006425e9889e9891c2a7c2b93554"), projection{}()]

// rule `project:IdCell`(inj{IdCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ddf90ca52ddd3ec6cc10d2169e2f964bd73e115fa3c39eda960a768a5646e37a), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIdCell{}, SortKItem{}}(VarK:SortIdCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortIdCell{},R} (
      Lblproject'Coln'IdCell{}(X0:SortK{}),
     \and{SortIdCell{}} (
       VarK:SortIdCell{},
        \top{SortIdCell{}}())))
  [UNIQUE'Unds'ID{}("ddf90ca52ddd3ec6cc10d2169e2f964bd73e115fa3c39eda960a768a5646e37a"), projection{}()]

// rule `project:IdCellOpt`(inj{IdCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(cdb7ab08d99b95d0885970106325700f24bcab2fe03178655bc1877c3b00fa45), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIdCellOpt{}, SortKItem{}}(VarK:SortIdCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortIdCellOpt{},R} (
      Lblproject'Coln'IdCellOpt{}(X0:SortK{}),
     \and{SortIdCellOpt{}} (
       VarK:SortIdCellOpt{},
        \top{SortIdCellOpt{}}())))
  [UNIQUE'Unds'ID{}("cdb7ab08d99b95d0885970106325700f24bcab2fe03178655bc1877c3b00fa45"), projection{}()]

// rule `project:InputCell`(inj{InputCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(fe21fbedec305fc7178670be3239c1a716ad2e66c2559ca094a94cfab3900bce), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortInputCell{}, SortKItem{}}(VarK:SortInputCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortInputCell{},R} (
      Lblproject'Coln'InputCell{}(X0:SortK{}),
     \and{SortInputCell{}} (
       VarK:SortInputCell{},
        \top{SortInputCell{}}())))
  [UNIQUE'Unds'ID{}("fe21fbedec305fc7178670be3239c1a716ad2e66c2559ca094a94cfab3900bce"), projection{}()]

// rule `project:InputCellOpt`(inj{InputCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9f52b9682436bd7f0a21a896d695b8fce97d87eac45c6bae0759c56dd257663a), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortInputCellOpt{}, SortKItem{}}(VarK:SortInputCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortInputCellOpt{},R} (
      Lblproject'Coln'InputCellOpt{}(X0:SortK{}),
     \and{SortInputCellOpt{}} (
       VarK:SortInputCellOpt{},
        \top{SortInputCellOpt{}}())))
  [UNIQUE'Unds'ID{}("9f52b9682436bd7f0a21a896d695b8fce97d87eac45c6bae0759c56dd257663a"), projection{}()]

// rule `project:Int`(inj{Int,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f316b871091516c401f1d2382cc5f66322602b782c7b01e1aeb6c2ddab50e24b), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortInt{}, SortKItem{}}(VarK:SortInt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortInt{},R} (
      Lblproject'Coln'Int{}(X0:SortK{}),
     \and{SortInt{}} (
       VarK:SortInt{},
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("f316b871091516c401f1d2382cc5f66322602b782c7b01e1aeb6c2ddab50e24b"), projection{}()]

// rule `project:K`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(25b529ddcefd25ef63f99a62040145ef27638e7679ea9202218fe14be98dff3a), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )),
    \equals{SortK{},R} (
      Lblproject'Coln'K{}(X0:SortK{}),
     \and{SortK{}} (
       VarK:SortK{},
        \top{SortK{}}())))
  [UNIQUE'Unds'ID{}("25b529ddcefd25ef63f99a62040145ef27638e7679ea9202218fe14be98dff3a"), projection{}()]

// rule `project:KCell`(inj{KCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(894c13c4c410f11e35bc3781505aeddde4ff400ddda1daf8b35259dbf0de9a24), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortKCell{}, SortKItem{}}(VarK:SortKCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortKCell{},R} (
      Lblproject'Coln'KCell{}(X0:SortK{}),
     \and{SortKCell{}} (
       VarK:SortKCell{},
        \top{SortKCell{}}())))
  [UNIQUE'Unds'ID{}("894c13c4c410f11e35bc3781505aeddde4ff400ddda1daf8b35259dbf0de9a24"), projection{}()]

// rule `project:KCellOpt`(inj{KCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f684dd78d97feadf0cbcb3cbb8892e0842f137c7b29a904cb2f3fc9755b29b30), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortKCellOpt{}, SortKItem{}}(VarK:SortKCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortKCellOpt{},R} (
      Lblproject'Coln'KCellOpt{}(X0:SortK{}),
     \and{SortKCellOpt{}} (
       VarK:SortKCellOpt{},
        \top{SortKCellOpt{}}())))
  [UNIQUE'Unds'ID{}("f684dd78d97feadf0cbcb3cbb8892e0842f137c7b29a904cb2f3fc9755b29b30"), projection{}()]

// rule `project:KItem`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1242e49c17638c9a66a35e3bb8c237288f7e9aa9a6499101e8cdc55be320cd29), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(VarK:SortKItem{},dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortKItem{},R} (
      Lblproject'Coln'KItem{}(X0:SortK{}),
     \and{SortKItem{}} (
       VarK:SortKItem{},
        \top{SortKItem{}}())))
  [UNIQUE'Unds'ID{}("1242e49c17638c9a66a35e3bb8c237288f7e9aa9a6499101e8cdc55be320cd29"), projection{}()]

// rule `project:KResult`(inj{KResult,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(07a916f84d6294528a6d07f273fb778b316d52b4ef8204a1817b105750b2b734), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortKResult{}, SortKItem{}}(VarK:SortKResult{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortKResult{},R} (
      Lblproject'Coln'KResult{}(X0:SortK{}),
     \and{SortKResult{}} (
       VarK:SortKResult{},
        \top{SortKResult{}}())))
  [UNIQUE'Unds'ID{}("07a916f84d6294528a6d07f273fb778b316d52b4ef8204a1817b105750b2b734"), projection{}()]

// rule `project:List`(inj{List,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2b75eac5a59779d336e6cf9632bf9ba7d67286f322e753108b34e62f2443efe5), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortList{}, SortKItem{}}(VarK:SortList{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortList{},R} (
      Lblproject'Coln'List{}(X0:SortK{}),
     \and{SortList{}} (
       VarK:SortList{},
        \top{SortList{}}())))
  [UNIQUE'Unds'ID{}("2b75eac5a59779d336e6cf9632bf9ba7d67286f322e753108b34e62f2443efe5"), projection{}()]

// rule `project:Map`(inj{Map,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(031237d4aae58d86914d6370d37ccd15f4738378ed780333c59cc81b4f7bc598), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMap{}, SortKItem{}}(VarK:SortMap{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortMap{},R} (
      Lblproject'Coln'Map{}(X0:SortK{}),
     \and{SortMap{}} (
       VarK:SortMap{},
        \top{SortMap{}}())))
  [UNIQUE'Unds'ID{}("031237d4aae58d86914d6370d37ccd15f4738378ed780333c59cc81b4f7bc598"), projection{}()]

// rule `project:NextLocCell`(inj{NextLocCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9473952bb15427edfbba6aee0b7b8eddc9636102b4f361d6e78dfa8884fd12e9), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortNextLocCell{}, SortKItem{}}(VarK:SortNextLocCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortNextLocCell{},R} (
      Lblproject'Coln'NextLocCell{}(X0:SortK{}),
     \and{SortNextLocCell{}} (
       VarK:SortNextLocCell{},
        \top{SortNextLocCell{}}())))
  [UNIQUE'Unds'ID{}("9473952bb15427edfbba6aee0b7b8eddc9636102b4f361d6e78dfa8884fd12e9"), projection{}()]

// rule `project:NextLocCellOpt`(inj{NextLocCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3cfe105a69f8dab22a1e7487145c1a3235e274e1366b3e6841842f2e827c28da), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortNextLocCellOpt{}, SortKItem{}}(VarK:SortNextLocCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortNextLocCellOpt{},R} (
      Lblproject'Coln'NextLocCellOpt{}(X0:SortK{}),
     \and{SortNextLocCellOpt{}} (
       VarK:SortNextLocCellOpt{},
        \top{SortNextLocCellOpt{}}())))
  [UNIQUE'Unds'ID{}("3cfe105a69f8dab22a1e7487145c1a3235e274e1366b3e6841842f2e827c28da"), projection{}()]

// rule `project:OutputCell`(inj{OutputCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e04bb6d74887c11d7aca1a6f613a2e5d4d8dec688cfff03a8ba87aa61f710b5c), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortOutputCell{}, SortKItem{}}(VarK:SortOutputCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortOutputCell{},R} (
      Lblproject'Coln'OutputCell{}(X0:SortK{}),
     \and{SortOutputCell{}} (
       VarK:SortOutputCell{},
        \top{SortOutputCell{}}())))
  [UNIQUE'Unds'ID{}("e04bb6d74887c11d7aca1a6f613a2e5d4d8dec688cfff03a8ba87aa61f710b5c"), projection{}()]

// rule `project:OutputCellOpt`(inj{OutputCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(337d0230b2a0cc261808cacb4aa739cf26890e6cb9dbcd26a60b2906a6eb33bc), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortOutputCellOpt{}, SortKItem{}}(VarK:SortOutputCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortOutputCellOpt{},R} (
      Lblproject'Coln'OutputCellOpt{}(X0:SortK{}),
     \and{SortOutputCellOpt{}} (
       VarK:SortOutputCellOpt{},
        \top{SortOutputCellOpt{}}())))
  [UNIQUE'Unds'ID{}("337d0230b2a0cc261808cacb4aa739cf26890e6cb9dbcd26a60b2906a6eb33bc"), projection{}()]

// rule `project:Param`(inj{Param,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9d20a8e0d641103cbf8616733900422879f79d6aec04fe0defbb3c376a07b29e), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortParam{}, SortKItem{}}(VarK:SortParam{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortParam{},R} (
      Lblproject'Coln'Param{}(X0:SortK{}),
     \and{SortParam{}} (
       VarK:SortParam{},
        \top{SortParam{}}())))
  [UNIQUE'Unds'ID{}("9d20a8e0d641103cbf8616733900422879f79d6aec04fe0defbb3c376a07b29e"), projection{}()]

// rule `project:Params`(inj{Params,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a5f4d4f5341a744e2a0869eb3fb19baf414b9bff8990a3f2dd9ded58bbac1968), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortParams{}, SortKItem{}}(VarK:SortParams{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortParams{},R} (
      Lblproject'Coln'Params{}(X0:SortK{}),
     \and{SortParams{}} (
       VarK:SortParams{},
        \top{SortParams{}}())))
  [UNIQUE'Unds'ID{}("a5f4d4f5341a744e2a0869eb3fb19baf414b9bff8990a3f2dd9ded58bbac1968"), projection{}()]

// rule `project:ReturnTypeCell`(inj{ReturnTypeCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f12983c91a0e1a160731b429a8b7ac055eaebbd45b53fbe155d728863e4a25e1), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortReturnTypeCell{}, SortKItem{}}(VarK:SortReturnTypeCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortReturnTypeCell{},R} (
      Lblproject'Coln'ReturnTypeCell{}(X0:SortK{}),
     \and{SortReturnTypeCell{}} (
       VarK:SortReturnTypeCell{},
        \top{SortReturnTypeCell{}}())))
  [UNIQUE'Unds'ID{}("f12983c91a0e1a160731b429a8b7ac055eaebbd45b53fbe155d728863e4a25e1"), projection{}()]

// rule `project:ReturnTypeCellOpt`(inj{ReturnTypeCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3db4385b3e3a4351f325744f6bf2ec98aa43aca9c9bbf10a2aa3b6ad2db4d863), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortReturnTypeCellOpt{}, SortKItem{}}(VarK:SortReturnTypeCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortReturnTypeCellOpt{},R} (
      Lblproject'Coln'ReturnTypeCellOpt{}(X0:SortK{}),
     \and{SortReturnTypeCellOpt{}} (
       VarK:SortReturnTypeCellOpt{},
        \top{SortReturnTypeCellOpt{}}())))
  [UNIQUE'Unds'ID{}("3db4385b3e3a4351f325744f6bf2ec98aa43aca9c9bbf10a2aa3b6ad2db4d863"), projection{}()]

// rule `project:Set`(inj{Set,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0e7f5070c993161786e314f7199d985afebac9e07b5c784f6f623780c60ce9d0), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortSet{}, SortKItem{}}(VarK:SortSet{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortSet{},R} (
      Lblproject'Coln'Set{}(X0:SortK{}),
     \and{SortSet{}} (
       VarK:SortSet{},
        \top{SortSet{}}())))
  [UNIQUE'Unds'ID{}("0e7f5070c993161786e314f7199d985afebac9e07b5c784f6f623780c60ce9d0"), projection{}()]

// rule `project:Stmt`(inj{Stmt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(dea7f879e640dc866a6ac853d51a70b1ded2d1fda72c3c4a7fbded3b9e6e2500), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortStmt{}, SortKItem{}}(VarK:SortStmt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortStmt{},R} (
      Lblproject'Coln'Stmt{}(X0:SortK{}),
     \and{SortStmt{}} (
       VarK:SortStmt{},
        \top{SortStmt{}}())))
  [UNIQUE'Unds'ID{}("dea7f879e640dc866a6ac853d51a70b1ded2d1fda72c3c4a7fbded3b9e6e2500"), projection{}()]

// rule `project:StoreCell`(inj{StoreCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ea6339f4ec3416c0b28a7d5f724eb8c0ab774ba489fea04ff1bbe51e966da9ff), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortStoreCell{}, SortKItem{}}(VarK:SortStoreCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortStoreCell{},R} (
      Lblproject'Coln'StoreCell{}(X0:SortK{}),
     \and{SortStoreCell{}} (
       VarK:SortStoreCell{},
        \top{SortStoreCell{}}())))
  [UNIQUE'Unds'ID{}("ea6339f4ec3416c0b28a7d5f724eb8c0ab774ba489fea04ff1bbe51e966da9ff"), projection{}()]

// rule `project:StoreCellOpt`(inj{StoreCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5d788267f4233745214a06930b7d15195b97e04c2d221e75ca13344767e1c2d7), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortStoreCellOpt{}, SortKItem{}}(VarK:SortStoreCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortStoreCellOpt{},R} (
      Lblproject'Coln'StoreCellOpt{}(X0:SortK{}),
     \and{SortStoreCellOpt{}} (
       VarK:SortStoreCellOpt{},
        \top{SortStoreCellOpt{}}())))
  [UNIQUE'Unds'ID{}("5d788267f4233745214a06930b7d15195b97e04c2d221e75ca13344767e1c2d7"), projection{}()]

// rule `project:Stream`(inj{Stream,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(bb30b432f6a3a9b73f42f0d3a54e07645be55c26bdee9d5c513f06e8009d0a77), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortStream{}, SortKItem{}}(VarK:SortStream{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortStream{},R} (
      Lblproject'Coln'Stream{}(X0:SortK{}),
     \and{SortStream{}} (
       VarK:SortStream{},
        \top{SortStream{}}())))
  [UNIQUE'Unds'ID{}("bb30b432f6a3a9b73f42f0d3a54e07645be55c26bdee9d5c513f06e8009d0a77"), projection{}()]

// rule `project:String`(inj{String,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e491dad8f644d2344f08cb72af01ade1e6ce9f564010a2de7909b3b6c7e2ae85), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortString{}, SortKItem{}}(VarK:SortString{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortString{},R} (
      Lblproject'Coln'String{}(X0:SortK{}),
     \and{SortString{}} (
       VarK:SortString{},
        \top{SortString{}}())))
  [UNIQUE'Unds'ID{}("e491dad8f644d2344f08cb72af01ade1e6ce9f564010a2de7909b3b6c7e2ae85"), projection{}()]

// rule `project:TCell`(inj{TCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8f26b10396db28857112a7db56ab3ef6b64a5c219427baf3f17e0e1fb39ad1ba), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTCell{}, SortKItem{}}(VarK:SortTCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortTCell{},R} (
      Lblproject'Coln'TCell{}(X0:SortK{}),
     \and{SortTCell{}} (
       VarK:SortTCell{},
        \top{SortTCell{}}())))
  [UNIQUE'Unds'ID{}("8f26b10396db28857112a7db56ab3ef6b64a5c219427baf3f17e0e1fb39ad1ba"), projection{}()]

// rule `project:TCellFragment`(inj{TCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(fcf28c9054cbb906b0631404e7190aa02f1fa3a4a09ec0d3024688ee1222c76c), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTCellFragment{}, SortKItem{}}(VarK:SortTCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortTCellFragment{},R} (
      Lblproject'Coln'TCellFragment{}(X0:SortK{}),
     \and{SortTCellFragment{}} (
       VarK:SortTCellFragment{},
        \top{SortTCellFragment{}}())))
  [UNIQUE'Unds'ID{}("fcf28c9054cbb906b0631404e7190aa02f1fa3a4a09ec0d3024688ee1222c76c"), projection{}()]

// rule `project:TCellOpt`(inj{TCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d3df5db294a6f5330dba88e63f8fdddee2bee164f110ca7e39e65afc4cfbb85a), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTCellOpt{}, SortKItem{}}(VarK:SortTCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortTCellOpt{},R} (
      Lblproject'Coln'TCellOpt{}(X0:SortK{}),
     \and{SortTCellOpt{}} (
       VarK:SortTCellOpt{},
        \top{SortTCellOpt{}}())))
  [UNIQUE'Unds'ID{}("d3df5db294a6f5330dba88e63f8fdddee2bee164f110ca7e39e65afc4cfbb85a"), projection{}()]

// rule `project:TerminatedCell`(inj{TerminatedCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2513dd2443eb7dd1ddf56b566e5d0c5322b0ed9fe8da079da187a10f8df1e271), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTerminatedCell{}, SortKItem{}}(VarK:SortTerminatedCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortTerminatedCell{},R} (
      Lblproject'Coln'TerminatedCell{}(X0:SortK{}),
     \and{SortTerminatedCell{}} (
       VarK:SortTerminatedCell{},
        \top{SortTerminatedCell{}}())))
  [UNIQUE'Unds'ID{}("2513dd2443eb7dd1ddf56b566e5d0c5322b0ed9fe8da079da187a10f8df1e271"), projection{}()]

// rule `project:TerminatedCellOpt`(inj{TerminatedCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(59814babbcb44ca22f20916ac9efc28f86b36b5231d52b655f270f010d4fb054), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTerminatedCellOpt{}, SortKItem{}}(VarK:SortTerminatedCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortTerminatedCellOpt{},R} (
      Lblproject'Coln'TerminatedCellOpt{}(X0:SortK{}),
     \and{SortTerminatedCellOpt{}} (
       VarK:SortTerminatedCellOpt{},
        \top{SortTerminatedCellOpt{}}())))
  [UNIQUE'Unds'ID{}("59814babbcb44ca22f20916ac9efc28f86b36b5231d52b655f270f010d4fb054"), projection{}()]

// rule `project:ThreadCell`(inj{ThreadCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(22d20be4f03b1b90e8d0b723016f3314da0e2254c4d12a734a29e34a422280f0), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortThreadCell{}, SortKItem{}}(VarK:SortThreadCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortThreadCell{},R} (
      Lblproject'Coln'ThreadCell{}(X0:SortK{}),
     \and{SortThreadCell{}} (
       VarK:SortThreadCell{},
        \top{SortThreadCell{}}())))
  [UNIQUE'Unds'ID{}("22d20be4f03b1b90e8d0b723016f3314da0e2254c4d12a734a29e34a422280f0"), projection{}()]

// rule `project:ThreadCellFragment`(inj{ThreadCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0c28c08c307445fd3128dac705965e7d26bc5a71d811f28a5f5e7cba628e9cb9), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortThreadCellFragment{}, SortKItem{}}(VarK:SortThreadCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortThreadCellFragment{},R} (
      Lblproject'Coln'ThreadCellFragment{}(X0:SortK{}),
     \and{SortThreadCellFragment{}} (
       VarK:SortThreadCellFragment{},
        \top{SortThreadCellFragment{}}())))
  [UNIQUE'Unds'ID{}("0c28c08c307445fd3128dac705965e7d26bc5a71d811f28a5f5e7cba628e9cb9"), projection{}()]

// rule `project:ThreadCellMap`(inj{ThreadCellMap,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3684b517cb1ab9283da790902b5bff1b96982ceb3d74220574b82c67f81a2500), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortThreadCellMap{}, SortKItem{}}(VarK:SortThreadCellMap{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortThreadCellMap{},R} (
      Lblproject'Coln'ThreadCellMap{}(X0:SortK{}),
     \and{SortThreadCellMap{}} (
       VarK:SortThreadCellMap{},
        \top{SortThreadCellMap{}}())))
  [UNIQUE'Unds'ID{}("3684b517cb1ab9283da790902b5bff1b96982ceb3d74220574b82c67f81a2500"), projection{}()]

// rule `project:ThreadsCell`(inj{ThreadsCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8dbb60342d3e687005156ca5a6e532ac187345a8ad2308f46488014c9e648f0e), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortThreadsCell{}, SortKItem{}}(VarK:SortThreadsCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortThreadsCell{},R} (
      Lblproject'Coln'ThreadsCell{}(X0:SortK{}),
     \and{SortThreadsCell{}} (
       VarK:SortThreadsCell{},
        \top{SortThreadsCell{}}())))
  [UNIQUE'Unds'ID{}("8dbb60342d3e687005156ca5a6e532ac187345a8ad2308f46488014c9e648f0e"), projection{}()]

// rule `project:ThreadsCellFragment`(inj{ThreadsCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7ff5039e845945382e828233376a67e62de8f76125806d2dc8e5b1f8b6ad3d4e), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortThreadsCellFragment{}, SortKItem{}}(VarK:SortThreadsCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortThreadsCellFragment{},R} (
      Lblproject'Coln'ThreadsCellFragment{}(X0:SortK{}),
     \and{SortThreadsCellFragment{}} (
       VarK:SortThreadsCellFragment{},
        \top{SortThreadsCellFragment{}}())))
  [UNIQUE'Unds'ID{}("7ff5039e845945382e828233376a67e62de8f76125806d2dc8e5b1f8b6ad3d4e"), projection{}()]

// rule `project:ThreadsCellOpt`(inj{ThreadsCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2ce7d7889fbebfa5eb908560189b36e9a4b88d4086458b6450ac3c113519e6ff), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortThreadsCellOpt{}, SortKItem{}}(VarK:SortThreadsCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortThreadsCellOpt{},R} (
      Lblproject'Coln'ThreadsCellOpt{}(X0:SortK{}),
     \and{SortThreadsCellOpt{}} (
       VarK:SortThreadsCellOpt{},
        \top{SortThreadsCellOpt{}}())))
  [UNIQUE'Unds'ID{}("2ce7d7889fbebfa5eb908560189b36e9a4b88d4086458b6450ac3c113519e6ff"), projection{}()]

// rule `project:Type`(inj{Type,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ef9c9e8abaf2a78577b4d63d0f6c6de195a90a606f31d5a2205a26d1140c58a6), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortType{}, SortKItem{}}(VarK:SortType{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortType{},R} (
      Lblproject'Coln'Type{}(X0:SortK{}),
     \and{SortType{}} (
       VarK:SortType{},
        \top{SortType{}}())))
  [UNIQUE'Unds'ID{}("ef9c9e8abaf2a78577b4d63d0f6c6de195a90a606f31d5a2205a26d1140c58a6"), projection{}()]

// rule `project:Types`(inj{Types,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a8e75c8adb82425e6f16ac8c0a5a8527686d18ff295060be5a0092ccaa47a1e3), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTypes{}, SortKItem{}}(VarK:SortTypes{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortTypes{},R} (
      Lblproject'Coln'Types{}(X0:SortK{}),
     \and{SortTypes{}} (
       VarK:SortTypes{},
        \top{SortTypes{}}())))
  [UNIQUE'Unds'ID{}("a8e75c8adb82425e6f16ac8c0a5a8527686d18ff295060be5a0092ccaa47a1e3"), projection{}()]

// rule `project:Val`(inj{Val,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(150c95b45e4aa067c3d3df9777c501a0c0693c6b14033fddfccc142e4e37cda8), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortVal{}, SortKItem{}}(VarK:SortVal{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortVal{},R} (
      Lblproject'Coln'Val{}(X0:SortK{}),
     \and{SortVal{}} (
       VarK:SortVal{},
        \top{SortVal{}}())))
  [UNIQUE'Unds'ID{}("150c95b45e4aa067c3d3df9777c501a0c0693c6b14033fddfccc142e4e37cda8"), projection{}()]

// rule `project:Vals`(inj{Vals,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9617e1fd27b97573fc4670a94913c39412e946a063e3dd4a1dac234d3a17ed02), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortVals{}, SortKItem{}}(VarK:SortVals{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortVals{},R} (
      Lblproject'Coln'Vals{}(X0:SortK{}),
     \and{SortVals{}} (
       VarK:SortVals{},
        \top{SortVals{}}())))
  [UNIQUE'Unds'ID{}("9617e1fd27b97573fc4670a94913c39412e946a063e3dd4a1dac234d3a17ed02"), projection{}()]

// rule `project:XstackCell`(inj{XstackCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d3bc909aca39e8b4cf213280ad36fafbbb6ae0819992e98596eef92470bcbb95), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortXstackCell{}, SortKItem{}}(VarK:SortXstackCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortXstackCell{},R} (
      Lblproject'Coln'XstackCell{}(X0:SortK{}),
     \and{SortXstackCell{}} (
       VarK:SortXstackCell{},
        \top{SortXstackCell{}}())))
  [UNIQUE'Unds'ID{}("d3bc909aca39e8b4cf213280ad36fafbbb6ae0819992e98596eef92470bcbb95"), projection{}()]

// rule `project:XstackCellOpt`(inj{XstackCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f8b0355d9d8fb1b2538885c69da276c92b6ec204caeda1324fb3cbd1bcdc67cc), projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortXstackCellOpt{}, SortKItem{}}(VarK:SortXstackCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortXstackCellOpt{},R} (
      Lblproject'Coln'XstackCellOpt{}(X0:SortK{}),
     \and{SortXstackCellOpt{}} (
       VarK:SortXstackCellOpt{},
        \top{SortXstackCellOpt{}}())))
  [UNIQUE'Unds'ID{}("f8b0355d9d8fb1b2538885c69da276c92b6ec204caeda1324fb3cbd1bcdc67cc"), projection{}()]

// rule `replace(_,_,_,_)_STRING-COMMON_String_String_String_String_Int`(Source,ToReplace,Replacement,Count)=>`_+String__STRING-COMMON_String_String_String`(`_+String__STRING-COMMON_String_String_String`(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(Source,#token("0","Int"),`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToReplace,#token("0","Int"))),Replacement),`replace(_,_,_,_)_STRING-COMMON_String_String_String_String_Int`(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(Source,`_+Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToReplace,#token("0","Int")),`lengthString(_)_STRING-COMMON_Int_String`(ToReplace)),`lengthString(_)_STRING-COMMON_Int_String`(Source)),ToReplace,Replacement,`_-Int_`(Count,#token("1","Int")))) requires `_>Int_`(Count,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(311b80d2cb12d368f230eba968464e1fc926bd57e304059b282b82af4d9626d9), org.kframework.attributes.Location(Location(1884,8,1887,30)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-GT-'Int'Unds'{}(VarCount:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarSource:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarToReplace:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X2:SortString{},
            VarReplacement:SortString{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X3:SortInt{},
            VarCount:SortInt{}
          ),
          \top{R} ()
        ))))),
    \equals{SortString{},R} (
      Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int{}(X0:SortString{},X1:SortString{},X2:SortString{},X3:SortInt{}),
     \and{SortString{}} (
       Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarSource:SortString{},\dv{SortInt{}}("0"),LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0"))),VarReplacement:SortString{}),Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int{}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarSource:SortString{},Lbl'UndsPlus'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0")),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarToReplace:SortString{})),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarSource:SortString{})),VarToReplace:SortString{},VarReplacement:SortString{},Lbl'Unds'-Int'Unds'{}(VarCount:SortInt{},\dv{SortInt{}}("1")))),
        \top{SortString{}}())))
  [UNIQUE'Unds'ID{}("311b80d2cb12d368f230eba968464e1fc926bd57e304059b282b82af4d9626d9"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1884,8,1887,30)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]")]

// rule `replace(_,_,_,_)_STRING-COMMON_String_String_String_String_Int`(Source,_Gen0,_Gen1,#token("0","Int"))=>Source requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4367434b0f61c404f7a2e926426bd23874dd547de689c5d15089967fbab2b3d5), org.kframework.attributes.Location(Location(1888,8,1888,49)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarSource:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            Var'Unds'Gen0:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X2:SortString{},
            Var'Unds'Gen1:SortString{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X3:SortInt{},
            \dv{SortInt{}}("0")
          ),
          \top{R} ()
        ))))),
    \equals{SortString{},R} (
      Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int{}(X0:SortString{},X1:SortString{},X2:SortString{},X3:SortInt{}),
     \and{SortString{}} (
       VarSource:SortString{},
        \top{SortString{}}())))
  [UNIQUE'Unds'ID{}("4367434b0f61c404f7a2e926426bd23874dd547de689c5d15089967fbab2b3d5"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1888,8,1888,49)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `replaceAll(_,_,_)_STRING-COMMON_String_String_String_String`(Source,ToReplace,Replacement)=>`replace(_,_,_,_)_STRING-COMMON_String_String_String_String_Int`(Source,ToReplace,Replacement,`countAllOccurrences(_,_)_STRING-COMMON_Int_String_String`(Source,ToReplace)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(262167183c3ec2e214d12bac6e639d7ac1a9f973582e16eca6c1af1da7ecc0a5), org.kframework.attributes.Location(Location(1889,8,1889,154)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarSource:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarToReplace:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X2:SortString{},
            VarReplacement:SortString{}
          ),
          \top{R} ()
        )))),
    \equals{SortString{},R} (
      LblreplaceAll'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String{}(X0:SortString{},X1:SortString{},X2:SortString{}),
     \and{SortString{}} (
       Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},VarReplacement:SortString{},LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String{}(VarSource:SortString{},VarToReplace:SortString{})),
        \top{SortString{}}())))
  [UNIQUE'Unds'ID{}("262167183c3ec2e214d12bac6e639d7ac1a9f973582e16eca6c1af1da7ecc0a5"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1889,8,1889,154)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `replaceFirst(_,_,_)_STRING-COMMON_String_String_String_String`(Source,ToReplace,Replacement)=>`_+String__STRING-COMMON_String_String_String`(`_+String__STRING-COMMON_String_String_String`(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(Source,#token("0","Int"),`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToReplace,#token("0","Int"))),Replacement),`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(Source,`_+Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToReplace,#token("0","Int")),`lengthString(_)_STRING-COMMON_Int_String`(ToReplace)),`lengthString(_)_STRING-COMMON_Int_String`(Source))) requires `_>=Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToReplace,#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(e290042e5b5b2f620c0ca1871e708c3713c62b63b283e317bb7568e13968fe0c), org.kframework.attributes.Location(Location(1877,8,1879,66)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-GT-Eqls'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0")),\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarSource:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarToReplace:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X2:SortString{},
            VarReplacement:SortString{}
          ),
          \top{R} ()
        )))),
    \equals{SortString{},R} (
      LblreplaceFirst'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String{}(X0:SortString{},X1:SortString{},X2:SortString{}),
     \and{SortString{}} (
       Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarSource:SortString{},\dv{SortInt{}}("0"),LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0"))),VarReplacement:SortString{}),LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarSource:SortString{},Lbl'UndsPlus'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0")),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarToReplace:SortString{})),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarSource:SortString{}))),
        \top{SortString{}}())))
  [UNIQUE'Unds'ID{}("e290042e5b5b2f620c0ca1871e708c3713c62b63b283e317bb7568e13968fe0c"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1877,8,1879,66)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]")]

// rule `replaceFirst(_,_,_)_STRING-COMMON_String_String_String_String`(Source,ToReplace,_Gen0)=>Source requires `_<Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToReplace,#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(8fbd1c8efb9988236eddc95fc2af4a3e74f6ec94d696ee47209543fd0826dd34), org.kframework.attributes.Location(Location(1880,8,1881,57)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-LT-'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0")),\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarSource:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarToReplace:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X2:SortString{},
            Var'Unds'Gen0:SortString{}
          ),
          \top{R} ()
        )))),
    \equals{SortString{},R} (
      LblreplaceFirst'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String{}(X0:SortString{},X1:SortString{},X2:SortString{}),
     \and{SortString{}} (
       VarSource:SortString{},
        \top{SortString{}}())))
  [UNIQUE'Unds'ID{}("8fbd1c8efb9988236eddc95fc2af4a3e74f6ec94d696ee47209543fd0826dd34"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1880,8,1881,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]")]

// rule `rfindChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,S2,I)=>`maxInt(_,_)_INT-COMMON_Int_Int_Int`(`rfindString(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("0","Int"),#token("1","Int")),I),`rfindChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("1","Int"),`lengthString(_)_STRING-COMMON_Int_String`(S2)),I)) requires `_=/=String__STRING-COMMON_Bool_String_String`(S2,#token("\"\"","String")) ensures #token("true","Bool") [UNIQUE_ID(b7f740050d72a847424b022a9c8217325aba8a154a42831aa3c7a3b0727f3205), org.kframework.attributes.Location(Location(1869,8,1869,182)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(VarS2:SortString{},\dv{SortString{}}("")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarS1:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarS2:SortString{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarI:SortInt{}
          ),
          \top{R} ()
        )))),
    \equals{SortInt{},R} (
      LblrfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(X0:SortString{},X1:SortString{},X2:SortInt{}),
     \and{SortInt{}} (
       LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(LblrfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("0"),\dv{SortInt{}}("1")),VarI:SortInt{}),LblrfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("1"),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarS2:SortString{})),VarI:SortInt{})),
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("b7f740050d72a847424b022a9c8217325aba8a154a42831aa3c7a3b0727f3205"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1869,8,1869,182)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]")]

// rule `rfindChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(_Gen0,#token("\"\"","String"),_Gen1)=>#token("-1","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(23b9fa88124c547d94aed32124d1ccd1069732b059f4c8b430ab4617979690f6), org.kframework.attributes.Location(Location(1870,8,1870,33)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            Var'Unds'Gen0:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            \dv{SortString{}}("")
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            Var'Unds'Gen1:SortInt{}
          ),
          \top{R} ()
        )))),
    \equals{SortInt{},R} (
      LblrfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(X0:SortString{},X1:SortString{},X2:SortInt{}),
     \and{SortInt{}} (
       \dv{SortInt{}}("-1"),
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("23b9fa88124c547d94aed32124d1ccd1069732b059f4c8b430ab4617979690f6"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1870,8,1870,33)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `signExtendBitRangeInt(_,_,_)_INT-COMMON_Int_Int_Int_Int`(I,IDX,LEN)=>`_-Int_`(`_modInt_`(`_+Int_`(`bitRangeInt(_,_,_)_INT-COMMON_Int_Int_Int_Int`(I,IDX,LEN),`_<<Int_`(#token("1","Int"),`_-Int_`(LEN,#token("1","Int")))),`_<<Int_`(#token("1","Int"),LEN)),`_<<Int_`(#token("1","Int"),`_-Int_`(LEN,#token("1","Int")))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3b67f4bf2235fc46fc94b1d10e936100ea3fc4f2dbaa4e4a77593e8385f5004f), org.kframework.attributes.Location(Location(1416,8,1416,164)), org.kframework.attributes.Source(Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarIDX:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarLEN:SortInt{}
          ),
          \top{R} ()
        )))),
    \equals{SortInt{},R} (
      LblsignExtendBitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int{}(X0:SortInt{},X1:SortInt{},X2:SortInt{}),
     \and{SortInt{}} (
       Lbl'Unds'-Int'Unds'{}(Lbl'Unds'modInt'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int{}(VarI:SortInt{},VarIDX:SortInt{},VarLEN:SortInt{}),Lbl'Unds-LT--LT-'Int'Unds'{}(\dv{SortInt{}}("1"),Lbl'Unds'-Int'Unds'{}(VarLEN:SortInt{},\dv{SortInt{}}("1")))),Lbl'Unds-LT--LT-'Int'Unds'{}(\dv{SortInt{}}("1"),VarLEN:SortInt{})),Lbl'Unds-LT--LT-'Int'Unds'{}(\dv{SortInt{}}("1"),Lbl'Unds'-Int'Unds'{}(VarLEN:SortInt{},\dv{SortInt{}}("1")))),
        \top{SortInt{}}())))
  [UNIQUE'Unds'ID{}("3b67f4bf2235fc46fc94b1d10e936100ea3fc4f2dbaa4e4a77593e8385f5004f"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1416,8,1416,164)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/4vaa1x34iq9zpylc50g8lfy46axx3k7l-k-6.0.168-1e35f58bc4610cc2276cf00f33b44831020f27bb-maven/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `typeOf(_)_SIMPLE-TYPED-DYNAMIC_Type_K`(inj{Bool,KItem}(_Gen0))=>`bool_SIMPLE-TYPED-DYNAMIC-SYNTAX_Type`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(15b08263cc0487654ead61e2756a50a1f35c7404c856c7639e607375cde203c1), org.kframework.attributes.Location(Location(350,8,350,30)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBool{}, SortKItem{}}(Var'Unds'Gen0:SortBool{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortType{},R} (
      LbltypeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Type'Unds'K{}(X0:SortK{}),
     \and{SortType{}} (
       Lblbool'Unds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Type{}(),
        \top{SortType{}}())))
  [UNIQUE'Unds'ID{}("15b08263cc0487654ead61e2756a50a1f35c7404c856c7639e607375cde203c1"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(350,8,350,30)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `typeOf(_)_SIMPLE-TYPED-DYNAMIC_Type_K`(inj{Int,KItem}(_Gen0))=>`int_SIMPLE-TYPED-DYNAMIC-SYNTAX_Type`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5254886efc29fe7f1e130c958380190b311a3d8821e2a10bc8d95b762a3f31a2), org.kframework.attributes.Location(Location(349,8,349,28)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortInt{}, SortKItem{}}(Var'Unds'Gen0:SortInt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortType{},R} (
      LbltypeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Type'Unds'K{}(X0:SortK{}),
     \and{SortType{}} (
       Lblint'Unds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Type{}(),
        \top{SortType{}}())))
  [UNIQUE'Unds'ID{}("5254886efc29fe7f1e130c958380190b311a3d8821e2a10bc8d95b762a3f31a2"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(349,8,349,28)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `typeOf(_)_SIMPLE-TYPED-DYNAMIC_Type_K`(inj{String,KItem}(_Gen0))=>`string_SIMPLE-TYPED-DYNAMIC-SYNTAX_Type`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(86530908617cfbd61f145b77275423c60907eba230a7df74df5552011faabc82), org.kframework.attributes.Location(Location(351,8,351,34)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortString{}, SortKItem{}}(Var'Unds'Gen0:SortString{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortType{},R} (
      LbltypeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Type'Unds'K{}(X0:SortK{}),
     \and{SortType{}} (
       Lblstring'Unds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Type{}(),
        \top{SortType{}}())))
  [UNIQUE'Unds'ID{}("86530908617cfbd61f145b77275423c60907eba230a7df74df5552011faabc82"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(351,8,351,34)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `typeOf(_)_SIMPLE-TYPED-DYNAMIC_Type_K`(inj{Val,KItem}(`array(_,_,_)_SIMPLE-TYPED-DYNAMIC_Val_Type_Int_Int`(T,_Gen0,_Gen1)))=>`_[]_SIMPLE-TYPED-DYNAMIC-SYNTAX_Type_Type`(T) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a9d18652987f406ea28e234a3a00eabdf75d618e3d2f36558143466c205419be), org.kframework.attributes.Location(Location(352,8,352,37)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortVal{}, SortKItem{}}(Lblarray'LParUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Val'Unds'Type'Unds'Int'Unds'Int{}(VarT:SortType{},Var'Unds'Gen0:SortInt{},Var'Unds'Gen1:SortInt{})),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortType{},R} (
      LbltypeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Type'Unds'K{}(X0:SortK{}),
     \and{SortType{}} (
       Lbl'UndsLSqBRSqBUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Type'Unds'Type{}(VarT:SortType{}),
        \top{SortType{}}())))
  [UNIQUE'Unds'ID{}("a9d18652987f406ea28e234a3a00eabdf75d618e3d2f36558143466c205419be"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(352,8,352,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `typeOf(_)_SIMPLE-TYPED-DYNAMIC_Type_K`(inj{Val,KItem}(`lambda(_,_,_)_SIMPLE-TYPED-DYNAMIC_Val_Type_Params_Stmt`(T,Ps,_Gen0)))=>`_->__SIMPLE-TYPED-DYNAMIC-SYNTAX_Type_Types_Type`(`getTypes(_)_SIMPLE-TYPED-DYNAMIC_Types_Params`(Ps),T) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(cf512639ce9be9892d515290f84ba85ea269c2f8cdaa893dec8b832d89e550a6), org.kframework.attributes.Location(Location(353,8,353,51)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortVal{}, SortKItem{}}(Lbllambda'LParUndsCommUndsCommUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Val'Unds'Type'Unds'Params'Unds'Stmt{}(VarT:SortType{},VarPs:SortParams{},Var'Unds'Gen0:SortStmt{})),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortType{},R} (
      LbltypeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Type'Unds'K{}(X0:SortK{}),
     \and{SortType{}} (
       Lbl'Unds'-'-GT-UndsUnds'SIMPLE-TYPED-DYNAMIC-SYNTAX'Unds'Type'Unds'Types'Unds'Type{}(LblgetTypes'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Types'Unds'Params{}(VarPs:SortParams{}),VarT:SortType{}),
        \top{SortType{}}())))
  [UNIQUE'Unds'ID{}("cf512639ce9be9892d515290f84ba85ea269c2f8cdaa893dec8b832d89e550a6"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(353,8,353,51)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `typeOf(_)_SIMPLE-TYPED-DYNAMIC_Type_K`(inj{Val,KItem}(`nothing(_)_SIMPLE-TYPED-DYNAMIC_Val_Type`(T)))=>T requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c4ca0e2074352aefd1a99b4d89e26a5bd8c59f6c4087daffcb9c475f7ec2f26b), org.kframework.attributes.Location(Location(355,8,355,31)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortVal{}, SortKItem{}}(Lblnothing'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Val'Unds'Type{}(VarT:SortType{})),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortType{},R} (
      LbltypeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Type'Unds'K{}(X0:SortK{}),
     \and{SortType{}} (
       VarT:SortType{},
        \top{SortType{}}())))
  [UNIQUE'Unds'ID{}("c4ca0e2074352aefd1a99b4d89e26a5bd8c59f6c4087daffcb9c475f7ec2f26b"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(355,8,355,31)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

// rule `typeOf(_)_SIMPLE-TYPED-DYNAMIC_Type_K`(`undefined(_)_SIMPLE-TYPED-DYNAMIC_KItem_Type`(T))=>T requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7b89744e5bbcfb28a7d5b9eb76cf8efddf44935220fccda0b611eca38a7b2242), org.kframework.attributes.Location(Location(354,8,354,33)), org.kframework.attributes.Source(Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(Lblundefined'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'KItem'Unds'Type{}(VarT:SortType{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortType{},R} (
      LbltypeOf'LParUndsRParUnds'SIMPLE-TYPED-DYNAMIC'Unds'Type'Unds'K{}(X0:SortK{}),
     \and{SortType{}} (
       VarT:SortType{},
        \top{SortType{}}())))
  [UNIQUE'Unds'ID{}("7b89744e5bbcfb28a7d5b9eb76cf8efddf44935220fccda0b611eca38a7b2242"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(354,8,354,33)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]")]

endmodule [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(78,1,361,10)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/Users/mohit/Documents/UIUC/CS422/hw4/problem 2/dyanmic/simple-typed-dynamic.k)")]
